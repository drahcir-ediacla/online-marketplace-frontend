{"version":3,"file":"static/js/2818.497692cf.chunk.js","mappings":"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","sources":["assets/images/message-regular.svg","components/ChatMessageIcon/index.jsx","components/FormField/CheckBox/CheckBox.jsx","assets/images/user-icon.svg","components/AccountNav/index.jsx","layouts/Header/SmallScreenSearchByLoc.jsx","layouts/Header/SmallScreenHeader.jsx","assets/images/grid-icon-solid.svg","assets/images/burger-btn.svg","components/SkeletonLoader/SlidingNavSkeleton.jsx","layouts/SlidingSideNav/index.jsx","redux/actions/productCategoriesActions.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMessageRegular(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M160 368c26.5 0 48 21.5 48 48v16l72.5-54.4c8.3-6.2 18.4-9.6 28.8-9.6H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H64c-8.8 0-16 7.2-16 16V352c0 8.8 7.2 16 16 16h96zm48 124l-.2 .2-5.1 3.8-17.1 12.8c-4.8 3.6-11.3 4.2-16.8 1.5s-8.8-8.2-8.8-14.3V474.7v-6.4V468v-4V416H112 64c-35.3 0-64-28.7-64-64V64C0 28.7 28.7 0 64 0H448c35.3 0 64 28.7 64 64V352c0 35.3-28.7 64-64 64H309.3L208 492z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMessageRegular);\nexport default __webpack_public_path__ + \"static/media/message-regular.df845c215780fa0ec9dd5dad762348b9.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react'\r\nimport axios from '../../apicalls/axios';\r\nimport useAuthentication from '../../hooks/authHook'\r\nimport './style.scss'\r\nimport { ReactComponent as MessageIcon } from '../../assets/images/message-regular.svg';\r\nimport io from 'socket.io-client';\r\n\r\n\r\n\r\nconst ChatMessageIcon = ({ className, counterStyle}) => {\r\n\r\n    const [allChats, setAllChats] = useState([]);\r\n    const { user } = useAuthentication();\r\n\r\n\r\n    useEffect(() => {\r\n        // Connect to WebSocket server\r\n        const socket = io(process.env.REACT_APP_BASE_URL);\r\n\r\n        // Fetch all user chats initially\r\n        fetchAllUserChats();\r\n\r\n        // Listen for changes from WebSocket server\r\n        socket.on('updateChats', () => {\r\n            fetchAllUserChats(); // Fetch updated chats\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect(); // Disconnect from WebSocket server on unmount\r\n        };\r\n    }, []);\r\n\r\n    // Function to fetch all user chats\r\n    const fetchAllUserChats = async () => {\r\n        try {\r\n            const response = await axios.get('/api/get-all/user-chat');\r\n            setAllChats(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching all chats:', error);\r\n        }\r\n    };\r\n\r\n    const unreadChat = allChats\r\n        .filter(chat =>\r\n            chat?.chat?.messages.some(\r\n                message =>\r\n                    message.receiver_id === user?.id && // Check if the message is received by the user\r\n                    !message.read // Check if the message is not read\r\n            )\r\n        )\r\n        .map(chat => chat.chat_id);\r\n\r\n\r\n    return (\r\n        <div className='message-notif'>\r\n            <div className={`message-icon ${className}`}>\r\n                <MessageIcon />\r\n            </div>\r\n            {unreadChat.length > 0 && (\r\n                <div className={`unread-chat-counter ${counterStyle}`}>\r\n                    {unreadChat.length}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessageIcon;\r\n","import React from 'react';\r\nimport './CheckBox.scss';\r\n\r\nconst CheckBox = ({ label, checked, onChange, value, name }) => {\r\n  return (\r\n    <label className='checkbox-region'>\r\n      {label}\r\n      <input type=\"checkbox\" className='checkbox' name={name} value={value} checked={checked} onChange={onChange} />\r\n      <span className=\"checkmark\"></span>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CheckBox;\r\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgUserIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 21,\n    height: 26,\n    viewBox: \"0 0 21 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5669 6.37613C15.5669 9.19892 13.2786 11.4872 10.4558 11.4872C7.63305 11.4872 5.34473 9.19892 5.34473 6.37613C5.34473 3.55334 7.63305 1.26501 10.4558 1.26501C13.2786 1.26501 15.5669 3.55334 15.5669 6.37613Z\",\n    stroke: \"#222222\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.4552 15.3206C5.51531 15.3206 1.51074 19.3251 1.51074 24.265H19.3996C19.3996 19.3251 15.3951 15.3206 10.4552 15.3206Z\",\n    stroke: \"#222222\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserIcon);\nexport default __webpack_public_path__ + \"static/media/user-icon.c3c46730c709f0b93246bcc9b6892898.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\r\nimport axios from '../../apicalls/axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.scss'; // Ensure this imports your styling correctly\r\nimport useAuthentication from '../../hooks/authHook';\r\nimport Logo from '../../assets/images/Yogeek-logo.png';\r\nimport { ReactComponent as UserIcon } from '../../assets/images/user-icon.svg';\r\n\r\nconst AccountNav = () => {\r\n    const { user } = useAuthentication();\r\n    const [accountNavOpen, setAccountNavOpen] = useState(false);\r\n    const [unreadNotifications, setUnreadNotifications] = useState([]);\r\n\r\n    const toggleAccountNav = () => {\r\n        setAccountNavOpen(prev => !prev);\r\n    };\r\n\r\n    const logout = () => {\r\n        const localBaseUrl = process.env.REACT_APP_BASE_URL;\r\n        const logoutPath = '/api/logout';\r\n        const logoutUrl = `${localBaseUrl}${logoutPath}`;\r\n\r\n        window.open(logoutUrl, '_self');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchUnreadNotifications = async () => {\r\n            try {\r\n                const response = await axios.get('/api/notifications/unread');\r\n                setUnreadNotifications(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching unread notifications:', error);\r\n            }\r\n        };\r\n\r\n        fetchUnreadNotifications();\r\n    }, []);\r\n\r\n    const openManageAccountNav = () => {\r\n        toggleAccountNav(); // Close account navigation after navigation\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <UserIcon onClick={user ? toggleAccountNav : () => { window.location.href = '/loginemail' }} />\r\n\r\n            {accountNavOpen && (\r\n                <div className='account-navigation-container'>\r\n                    <div className=\"anc-row1\" onClick={toggleAccountNav}>\r\n                        <i className=\"fa fa-times\"></i>\r\n                    </div>\r\n                    <div className=\"anc-row2\">\r\n                        <img src={Logo} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"anc-row3\">\r\n                        <ul>\r\n                            <li>\r\n                                <Link to='/manage-account' onClick={openManageAccountNav}>\r\n                                    Manage Account\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to={`/profile/${user?.id}`} onClick={openManageAccountNav}>\r\n                                    My Profile & Listings\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/notificationlist' onClick={openManageAccountNav}>\r\n                                    <div className='notification-btn'>\r\n                                        Notifications\r\n                                        {unreadNotifications.length > 0 &&\r\n                                            <div className=\"notification-counter\">\r\n                                                {unreadNotifications.length}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/wishlist' onClick={openManageAccountNav}>\r\n                                    My Wishlist\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/forum'>\r\n                                    Community\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/deactivateaccount' onClick={openManageAccountNav}>\r\n                                    Settings\r\n                                </Link>\r\n                            </li>\r\n                            <li onClick={logout}>\r\n                                Logout\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountNav;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './style.scss'\r\nimport BtnGreen from '../../components/Button/BtnGreen';\r\nimport BtnClear from '../../components/Button/BtnClear'\r\nimport CheckBox from '../../components/FormField/CheckBox/CheckBox';\r\nimport { ReactComponent as MagnifyingGlass } from '../../assets/images/magnifying-glass.svg';\r\nimport NearLocIcon from '../../assets/images/near-loc-icon.png'\r\nimport AllPhIcon from '../../assets/images/all-ph-icon.png'\r\nimport RegionIcon from '../../assets/images/region-icon.png'\r\nimport CityIcon from '../../assets/images/city-icon.png'\r\nimport userLocationData from '../../data/userLocationData.json'\r\nimport locationData from '../../data/locationData.json'\r\n\r\nconst SmallScreenSearchByLoc = () => {\r\n\r\n    const location = useLocation(); // <-- Use the useLocation hook\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const [searchItemOpen, setSearchItemOpen] = useState(false)\r\n    const [selectRegionOpen, setSelectRegionOpen] = useState(false)\r\n    const [selectCityOpen, setSelectCityOpen] = useState(false)\r\n    const [selectedRegion, setSelectedRegion] = useState([]);\r\n    const [selectedCity, setSelectedCity] = useState([]);\r\n    const [cityCheckedState, setCityCheckedState] = useState({});\r\n    const [clickedRegion, setClickedRegion] = useState([])\r\n    const [currentOrAllLocations, setCurrentOrAllLocations] = useState(queryParams.get('location') || 'All of the Philippines');\r\n    const [searchFilterLocation, setSearchFilterLocation] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState(queryParams.get('keyword') || '');\r\n    const [latitude, setLatitude] = useState(null);\r\n    const [longitude, setLongitude] = useState(null);\r\n    const [radius, setRadius] = useState(10); // Default radius in kilometers\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch = () => {\r\n        const searchParams = new URLSearchParams();\r\n\r\n        if (latitude && longitude) {\r\n            searchParams.append('latitude', latitude);\r\n            searchParams.append('longitude', longitude);\r\n            searchParams.append('radius', radius);\r\n\r\n            navigate(`/search-results?keyword=${searchTerm}&location=${encodeURIComponent(searchFilterLocation)}&latitude=${latitude}&longitude=${longitude}&radius=${radius}`);\r\n        } else {\r\n            navigate(`/search-results?keyword=${searchTerm}&location=${encodeURIComponent(searchFilterLocation)}`);\r\n        }\r\n        setSearchItemOpen(false)\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Check if the pressed key is Enter\r\n        if (e.key === 'Enter') {\r\n            handleSearch();\r\n            setSearchItemOpen(false)\r\n        }\r\n    };\r\n\r\n\r\n    const toggleSearchItemOpen = () => {\r\n        setSearchItemOpen((prevSearchItemOpen) => !prevSearchItemOpen)\r\n    }\r\n\r\n    const toggleSelectRegionOpen = () => {\r\n        setSelectRegionOpen((prevSelectRegionOpen) => !prevSelectRegionOpen);\r\n        selectedRegion.length > 0 ? setClickedRegion(selectedRegion) : setClickedRegion([]);\r\n    }\r\n\r\n    const toggleSelectCityOpen = () => {\r\n        setSelectCityOpen((prevSelectCityOpen) => !prevSelectCityOpen)\r\n        selectedCity.length > 0 ? setCityCheckedState(cityCheckedState) : setCityCheckedState({})\r\n    }\r\n\r\n    const handleRegionClick = (selectedRegion) => {\r\n        setClickedRegion(selectedRegion);\r\n    }\r\n\r\n    const handleCityChecked = (cityName) => {\r\n        setCityCheckedState(prevState => ({\r\n            ...prevState,\r\n            [cityName]: !prevState[cityName]\r\n        }));\r\n    }\r\n\r\n    // Function to remove a selected city based on its index\r\n    const removeSelectedCity = (indexToRemove, cityToRemove) => {\r\n        // Update the cityCheckedState to uncheck the checkbox associated with the removed city\r\n        setCityCheckedState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                [cityToRemove]: false  // Set the value to false for the removed city\r\n            };\r\n        });\r\n\r\n        // Filter out the city at the specified index from the selectedCity state\r\n        setSelectedCity(prevSelectedCity => {\r\n            return prevSelectedCity.filter((_, index) => index !== indexToRemove);\r\n        });\r\n    };\r\n\r\n\r\n    const removeAllSelectedCity = () => {\r\n        setSelectedCity([]);\r\n        setCityCheckedState({});\r\n    }\r\n\r\n    const applySelectedRegion = () => {\r\n        setSelectRegionOpen((prevSelectRegionOpen) => !prevSelectRegionOpen)\r\n        setSelectedRegion(clickedRegion)\r\n        setSelectedCity([])\r\n        setCityCheckedState({})\r\n        setCurrentOrAllLocations('')\r\n    }\r\n\r\n    const applySelectedCity = () => {\r\n        setSelectCityOpen(prevSelectCityOpen => !prevSelectCityOpen);\r\n\r\n        const selectedCitiesArray = Object.entries(cityCheckedState)\r\n            .filter(([_city, isChecked]) => isChecked)\r\n            .map(([city]) => city);\r\n\r\n        setSelectedCity(selectedCitiesArray);\r\n    };\r\n\r\n\r\n\r\n    const handleCurrentOrAllLocationsClick = (filterText) => {\r\n        setSelectedRegion([])\r\n        setClickedRegion([])\r\n        setSelectedCity([])\r\n        setCityCheckedState({})\r\n        setCurrentOrAllLocations(filterText)\r\n        if (filterText === 'Listings Nearby') {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n              setLatitude(position.coords.latitude);\r\n              setLongitude(position.coords.longitude);\r\n            });\r\n          } else {\r\n            setLatitude(null);\r\n            setLongitude(null);\r\n          }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setSearchFilterLocation(\r\n            selectedCity.length > 0\r\n                ? selectedCity.join(' | ')\r\n                : selectedRegion.length > 0\r\n                    ? selectedRegion\r\n                    : currentOrAllLocations\r\n        );\r\n    }, [selectedCity, selectedRegion, currentOrAllLocations]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='small-screen-magnifying-glass' onClick={toggleSearchItemOpen}><MagnifyingGlass /></div>\r\n            {searchItemOpen &&\r\n                <div className=\"ss-search-location-container\">\r\n                    <div className=\"ss-search-location-row1\">\r\n                        <div className=\"back-arrow\" onClick={toggleSearchItemOpen}></div>\r\n                        <div className='search-box-container'>\r\n                            <input\r\n                                type='text'\r\n                                className='search-input'\r\n                                placeholder='Search items...'\r\n                                value={searchTerm}\r\n                                onKeyDown={handleKeyPress}\r\n                                onChange={(e) => setSearchTerm(e.target.value)}\r\n                            />\r\n                            <button onClick={handleSearch}><div className='btn-magnifying-glass'><MagnifyingGlass /></div></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ss-search-location-row2\">\r\n                        <small>Search by:</small>\r\n                        {selectedRegion.length > 0 &&\r\n                            <>\r\n                                <p className='selected-region'>{selectedRegion}</p>\r\n                                {selectedRegion.length > 0 &&\r\n                                    <div className='selected-city-container'>\r\n                                        {selectedCity.length > 0 ? (\r\n                                            selectedCity.map((city, index) => (\r\n                                                <>\r\n                                                    <div key={index} className='selected-city'>\r\n                                                        {city}\r\n                                                        <div className='close-btn' onClick={() => removeSelectedCity(index, city)}>\r\n                                                            <i className=\"fa fa-times\"></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {selectedCity.length > 1 && index === selectedCity.length - 1 && (\r\n                                                        <div className='reset-selected-cities' onClick={() => removeAllSelectedCity()}>Reset</div>\r\n                                                    )}\r\n                                                </>\r\n                                            ))\r\n                                        ) : (\r\n                                            <p className='please-choose-city'>No city selected</p>\r\n                                        )}\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                        <ul>\r\n                            <li\r\n                                className={currentOrAllLocations === 'Listings Nearby' ? 'active' : ''}\r\n                                onClick={() => handleCurrentOrAllLocationsClick('Listings Nearby')}\r\n                            >\r\n                                <div className='location-option'><img src={NearLocIcon} alt=\"\" />Listings Nearby</div>\r\n                            </li>\r\n                            <li\r\n                                className={currentOrAllLocations === 'All of the Philippines' ? 'active' : ''}\r\n                                onClick={() => handleCurrentOrAllLocationsClick('All of the Philippines')}\r\n                            >\r\n                                <div className='location-option'><img src={AllPhIcon} alt=\"\" />All of the Philippines</div>\r\n                            </li>\r\n                            <li onClick={toggleSelectRegionOpen}><div className='location-option'><img src={RegionIcon} alt=\"\" />Region</div><i className='fa fa-angle-right'></i></li>\r\n                            {selectedRegion.length > 0 &&\r\n                                <li onClick={toggleSelectCityOpen}><div className='location-option'><img src={CityIcon} alt=\"\" />City</div><i className='fa fa-angle-right'></i></li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {/*--------------- SELECT REGION ----------------------------*/}\r\n            {selectRegionOpen &&\r\n                <div className='ss-select-region-container'>\r\n                    <div className=\"ss-select-region-row1\">\r\n                        <div className=\"back-arrow\" onClick={toggleSelectRegionOpen}></div>\r\n                        <span>Select Region</span>\r\n                    </div>\r\n                    <div className=\"ss-select-region-row2\">\r\n                        <ul className='region-list'>\r\n                            {Object.keys(locationData).map((region) => (\r\n                                <li\r\n                                    key={region}\r\n                                    value={region}\r\n                                    onClick={() => handleRegionClick(region)}\r\n                                    className={`${clickedRegion === region ? 'active' : ''}`}\r\n                                >\r\n                                    {region}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <div className=\"select-region-btns\">\r\n                            <BtnClear label='Cancel' onClick={toggleSelectRegionOpen} />\r\n                            <BtnGreen label='Apply' disabled={clickedRegion.length === 0} onClick={applySelectedRegion} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {/*--------------- SELECT CITY ----------------------------*/}\r\n            {selectCityOpen &&\r\n                <div className='ss-select-city-container'>\r\n                    <div className=\"ss-select-city-row1\">\r\n                        <div className=\"back-arrow\" onClick={toggleSelectCityOpen}></div>\r\n                        <span>Select City</span>\r\n                    </div>\r\n                    <div className=\"ss-select-city-row2\">\r\n                        <ul className='city-list'>\r\n                            {selectedRegion && locationData[selectedRegion] && (\r\n                                Object.keys(locationData[selectedRegion]).map((city) => (\r\n                                    <li key={city}>\r\n                                        <CheckBox\r\n                                            label={city}\r\n                                            value={city}\r\n                                            checked={cityCheckedState[city] || false}\r\n                                            onChange={() => handleCityChecked(city)}\r\n                                        />\r\n                                    </li>\r\n                                ))\r\n                            )}\r\n                        </ul>\r\n                        <div className=\"select-city-btns\">\r\n                            <BtnClear\r\n                                label='Clear All'\r\n                                disabled={Object.keys(cityCheckedState).length === 0 || Object.values(cityCheckedState).every(value => value === false)}\r\n                                onClick={removeAllSelectedCity}\r\n                            />\r\n\r\n                            <BtnGreen\r\n                                label='Apply'\r\n                                disabled={Object.keys(cityCheckedState).length === 0 || Object.values(cityCheckedState).every(value => value === false)}\r\n                                onClick={applySelectedCity}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SmallScreenSearchByLoc\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './style.scss'\r\nimport Logo from '../../assets/images/Yogeek-logo.png';\r\nimport LogoIcon from '../../assets/images/yogeek-icon-logo.png'\r\nimport ChatMessageIcon from '../../components/ChatMessageIcon';\r\nimport SlidingSideNav from '../SlidingSideNav';\r\nimport AccountNav from '../../components/AccountNav';\r\nimport SmallScreenSearchByLoc from './SmallScreenSearchByLoc';\r\n\r\nconst StickySmallScreenHeader = ({ user }) => {\r\n\r\n    const [isSticky, setIsSticky] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (window.scrollY > 10) {\r\n                setIsSticky(true);\r\n            } else {\r\n                setIsSticky(false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n\r\n    const handleHomePageClick = () => {\r\n        // Check if the current location is already the homepage\r\n        if (navigate && window.location.pathname === '/') {\r\n            // Refresh the page or scroll to the top\r\n            // window.location.reload(); // Refresh the page\r\n            // OR\r\n            window.scrollTo(0, 0); // Scroll to the top\r\n        }\r\n    };\r\n\r\n\r\n    const messages = () => {\r\n        window.location.href = '/messages';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`tablet-header ${isSticky ? 'sticky-responsive-header' : ''}`}>\r\n                <div className=\"tablet-header-row1\">\r\n                    <div className='tablet-header-row1-col1'>\r\n                        <Link to=\"/\" onClick={handleHomePageClick}>\r\n                            <img src={Logo} alt='' className='small-screen-logo' />\r\n                        </Link>\r\n                        <Link to=\"/\" onClick={handleHomePageClick}>\r\n                            <img src={LogoIcon} alt='' className='logo-icon' />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className='tablet-header-row1-col2'>\r\n                        <div><SmallScreenSearchByLoc /></div>\r\n                        {user &&\r\n                            <div className=\"message-icon-container\" onClick={messages}>\r\n                                <ChatMessageIcon className='custom-message-icon' counterStyle='message-counter' />\r\n                            </div>\r\n                        }\r\n                        <div className=\"user-account-icon\">\r\n                            <AccountNav />\r\n                        </div>\r\n                        <SlidingSideNav />\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"tablet-header-row2\">\r\n                    <div className='tablet-header-row2-col1'>\r\n                        <input type='text' className='search-box-tablet-header' />\r\n                        <button><div className='magnifying-glass'><MagnifyingGlass /></div></button>\r\n                    </div>\r\n                </div> */}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StickySmallScreenHeader\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgGridIconSolid(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 66 63\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    clipRule: \"evenodd\",\n    d: \"M56.1 34.7143H46.2C40.7319 34.7143 36.3 38.9351 36.3 44.1428V53.5714C36.3 58.7791 40.7319 63 46.2 63H56.1C61.5681 63 66 58.7791 66 53.5714V44.1428C66 38.9351 61.5681 34.7143 56.1 34.7143ZM19.8 34.7143H9.9C4.4319 34.7143 0 38.9351 0 44.1428V53.5714C0 58.7791 4.4319 63 9.9 63H19.8C25.2681 63 29.7 58.7791 29.7 53.5714V44.1428C29.7 38.9351 25.2681 34.7143 19.8 34.7143ZM56.1 0.142822H46.2C40.7319 0.142822 36.3 4.36368 36.3 9.57139V19C36.3 24.2077 40.7319 28.4285 46.2 28.4285H56.1C61.5681 28.4285 66 24.2077 66 19V9.57139C66 4.36368 61.5681 0.142822 56.1 0.142822ZM29.7 9.57139V19C29.7 24.2077 25.2681 28.4285 19.8 28.4285H9.9C4.4319 28.4285 0 24.2077 0 19V9.57139C0 4.36368 4.4319 0.142822 9.9 0.142822H19.8C25.2681 0.142822 29.7 4.36368 29.7 9.57139Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGridIconSolid);\nexport default __webpack_public_path__ + \"static/media/grid-icon-solid.6a602b31be72f5645c9b140c2c1fee3d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBurgerBtn(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 21,\n    viewBox: \"0 0 26 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.1115 2.5832C0.718769 2.5832 0.400391 2.17618 0.400391 1.67411C0.400391 1.17203 0.718769 0.765015 1.1115 0.765015H25.2893C25.682 0.765015 26.0004 1.17203 26.0004 1.67411C26.0004 2.17618 25.682 2.5832 25.2893 2.5832H1.1115ZM1.1115 11.6741C0.718769 11.6741 0.400391 11.267 0.400391 10.765C0.400391 10.263 0.718769 9.85592 1.1115 9.85592H25.2893C25.682 9.85592 26.0004 10.263 26.0004 10.765C26.0004 11.267 25.682 11.6741 25.2893 11.6741H1.1115ZM1.1115 20.765C0.718769 20.765 0.400391 20.3579 0.400391 19.8559C0.400391 19.3539 0.718769 18.9468 1.1115 18.9468H25.2893C25.682 18.9468 26.0004 19.3539 26.0004 19.8559C26.0004 20.3579 25.682 20.765 25.2893 20.765H1.1115Z\",\n    fill: \"#222222\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBurgerBtn);\nexport default __webpack_public_path__ + \"static/media/burger-btn.df53f2d9a451ca8a5e24675bd379e0d7.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport './style.scss'\r\n\r\nconst SlidingNavSkeleton = ({ menus }) => {\r\n    return Array(menus)\r\n        .fill(0)\r\n        .map((_, i) => (\r\n            <li className='main-category'>\r\n                    <div className='category-icon'>\r\n                <div className=\"loader-container\">\r\n                    <div className='skeleton-icon'>\r\n                        <Skeleton square height={25} width={25} />\r\n                    </div>\r\n                    <div>\r\n                        <Skeleton height={20} width={200} />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </li>\r\n        ));\r\n};\r\n\r\nexport default SlidingNavSkeleton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUser } from '../../redux/actions/userActions';\r\nimport { getProductCategories } from '../../redux/actions/productCategoriesActions';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.scss'\r\nimport { ReactComponent as GridIcon } from '../../assets/images/grid-icon-solid.svg';\r\nimport { ReactComponent as MagnifyingGlass } from '../../assets/images/magnifying-glass.svg';\r\nimport { ReactComponent as BurgerBtn } from '../../assets/images/burger-btn.svg'\r\nimport AvatarIcon from '../../assets/images/avatar-icon.png'\r\nimport SlidingNavSkeleton from '../../components/SkeletonLoader/SlidingNavSkeleton';\r\n\r\n\r\nconst SlidingSideNav = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.data);\r\n  const categories = useSelector((state) => state.productcategories.data);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredCategories, setFilteredCategories] = useState(categories);\r\n\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen((prevIsMenuOpen) => !prevIsMenuOpen);\r\n  };\r\n\r\n  // FETCH AUTHENTICATED USER //\r\n  useEffect(() => {\r\n    dispatch(getUser())\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (categories.length === 0) {\r\n      setLoading(true);\r\n      dispatch(getProductCategories());\r\n    }\r\n    else {\r\n      setLoading(false);\r\n    }\r\n  }, [dispatch, categories]);\r\n\r\n  useEffect(() => {\r\n    setFilteredCategories(categories)\r\n  }, [categories])\r\n\r\n  const myProfile = async () => {\r\n    try {\r\n      if (user) {\r\n        window.location.href = `/profile/${user?.id}`;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  // FETCH ALL CATEGORIES //\r\n  // useEffect(() => {\r\n  //   const fetchCategories = async () => {\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       const response = await GetAllCategories();\r\n  //       setCategories(response.data);\r\n  //       setFilteredCategories(response.data); // Initialize filteredCategories here\r\n  //       setLoading(false);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching data:\", error);\r\n  //     } finally {\r\n  //       setLoading(false); // Set loading to false regardless of success or failure\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchCategories();\r\n  // }, []);\r\n\r\n\r\n  const handleSearchChange = (e) => {\r\n    const searchTerm = e.target.value;\r\n    setSearchTerm(searchTerm);\r\n\r\n    if (searchTerm === '') {\r\n      setFilteredCategories(categories); // Reset to all categories when searchTerm is empty\r\n      return;\r\n    }\r\n\r\n    const filtered = categories.filter(category => {\r\n      return category.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        category.subcategories.some(sub => sub.label.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    });\r\n\r\n    setFilteredCategories(filtered);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    // Update body overflow based on isMenuOpen\r\n    document.body.style.overflow = isMenuOpen ? 'hidden' : 'auto';\r\n\r\n    // Cleanup the effect\r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, [isMenuOpen]);\r\n\r\n\r\n\r\n  // SET COLLAPSIBLE //\r\n  const [activeCollapsible, setActiveCollapsible] = useState([]);\r\n\r\n  const handleToggleCollapsible = (index) => {\r\n    setActiveCollapsible((prevActiveCollapsible) => {\r\n      const updatedCollapsible = [...prevActiveCollapsible];\r\n      updatedCollapsible[index] = !updatedCollapsible[index];\r\n\r\n      // Close other active collapsibles\r\n      updatedCollapsible.forEach((value, i) => {\r\n        if (i !== index) {\r\n          updatedCollapsible[i] = false;\r\n        }\r\n      });\r\n\r\n      return updatedCollapsible;\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='btm-border' id='all-category-icon' onClick={toggleMenu}>\r\n        <Link to=\"#\" className='parent-menu'>\r\n          <div className='grid-icon'><GridIcon /></div>\r\n          All Categories\r\n        </Link>\r\n        <div className=\"burger-btn-icon\">\r\n          <BurgerBtn />\r\n        </div>\r\n      </div>\r\n      <div id='SlidingMenu' style={{ right: isMenuOpen ? '0' : '-435px' }}>\r\n        <div id='menuBkgrnd' style={{ right: isMenuOpen ? '0' : '-100%' }} onClick={toggleMenu}></div>\r\n        <nav id='menuBox'>\r\n          <div className='col-left'>\r\n            <div id=\"closeBtn\" onClick={toggleMenu}>\r\n              <i className=\"fa fa-times\"></i>\r\n            </div>\r\n          </div>\r\n          <div className='col-right'>\r\n            <div className='row1'>\r\n              {user ? (\r\n                <>\r\n                  <div>\r\n                    {user.profile_pic && user.profile_pic.length > 0 ? (\r\n                      <div className=\"avatar-icon\">\r\n                        <Link onClick={myProfile}><img src={user.profile_pic} alt=\"\" /></Link>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"avatar-icon\">\r\n                        <Link onClick={myProfile}><img src={AvatarIcon} alt=\"\" className='avatar-image-icon' /></Link>\r\n                      </div>\r\n                    )}\r\n                    <Link onClick={myProfile}><h5>{user.display_name || 'Anonymous'}</h5></Link>\r\n                  </div>\r\n                  <div className=\"small-device-close-btn\">\r\n                    <div id=\"closeBtn\" onClick={toggleMenu}>\r\n                      <i className=\"fa fa-times\"></i>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <div className=\"avatar-icon\">\r\n                      <img src={AvatarIcon} alt=\"\" className='avatar-image-icon' />\r\n                    </div>\r\n                    <Link to='/LoginEmail'><h5>Hello, sign in</h5></Link>\r\n                  </div>\r\n                  <div className=\"small-device-close-btn\">\r\n                    <div id=\"closeBtn\" onClick={toggleMenu}>\r\n                      <i className=\"fa fa-times\"></i>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className='row2'>\r\n              <div style={{ width: '100%' }}>\r\n                <h5>All Categories</h5>\r\n                <div className='search-container'>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder='Search Categories'\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                  />\r\n                  <button><div className='magnifying-glass'><MagnifyingGlass /></div></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='row3'>\r\n              <div className='nav-categories'>\r\n                <ul>\r\n                  {loading && <SlidingNavSkeleton menus={10} />}\r\n                  {filteredCategories.map((category, index) => {\r\n                    return (\r\n                      <li className='main-category' key={index}>\r\n                        <div className={`category-icon`}>\r\n                          <img src={category.icon} alt='' />\r\n                          <Link to={`/category/${category.id}/${category.value}`} onClick={toggleMenu}>\r\n                            {category.label}\r\n                          </Link>\r\n                        </div>\r\n                        {category.subcategories && category.subcategories.length > 0 && (\r\n                          <>\r\n                            <div\r\n                              className={`collapsible ${activeCollapsible[index] ? 'active' : '' || searchTerm ? 'hide-arrow' : ''}`}\r\n                              onClick={() => handleToggleCollapsible(index)}\r\n                            ></div>\r\n                            {(activeCollapsible[index] || searchTerm) && (\r\n                              <ul className='sub-category'>\r\n                                {category.subcategories.map((subCategory, subIndex) => (\r\n                                  subCategory.label.toLowerCase().includes(searchTerm.toLowerCase()) && (\r\n                                    <li key={subIndex}>\r\n                                      {subCategory.subcategories && subCategory.subcategories.length > 0 ? (\r\n                                        <>\r\n                                          <Link to={`/category/${subCategory.id}/${subCategory.label}`} onClick={toggleMenu}>\r\n                                            {subCategory.label}\r\n                                          </Link>\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <Link to={`/category/${subCategory.id}/${subCategory.label}`} onClick={toggleMenu}>\r\n                                            {subCategory.label}\r\n                                          </Link>\r\n                                        </>\r\n                                      )}\r\n                                    </li>\r\n                                  )\r\n                                ))}\r\n                              </ul>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                  })}\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SlidingSideNav","import { setCategories, setError } from '../reducer/productCategoriesSlice';\r\nimport axios from '../../apicalls/axios';\r\n\r\n\r\n// Get Product Categories\r\n\r\nexport const getProductCategories = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('/api/getallcategories');\r\n    if (response.status === 200) {\r\n      const categoriesData = response.data;\r\n      dispatch(setCategories(categoriesData));\r\n    } \r\n  } catch (error) {\r\n    console.error('Error fetching categories:', error);\r\n\r\n    // Handle the error and update the error state in the Redux store\r\n    dispatch(setError('Error fetching categories.'));\r\n  }\r\n};\r\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgMessageRegular","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","id","d","ForwardRef","className","counterStyle","allChats","setAllChats","useState","user","useAuthentication","useEffect","socket","io","process","fetchAllUserChats","on","disconnect","async","response","axios","get","data","error","console","unreadChat","filter","chat","_chat$chat","messages","some","message","receiver_id","read","map","chat_id","_jsxs","children","_jsx","concat","MessageIcon","label","checked","onChange","value","name","type","_path2","SvgUserIcon","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AccountNav","accountNavOpen","setAccountNavOpen","unreadNotifications","setUnreadNotifications","toggleAccountNav","prev","fetchUnreadNotifications","openManageAccountNav","_Fragment","UserIcon","onClick","window","location","href","src","Logo","alt","Link","to","logout","logoutUrl","open","SmallScreenSearchByLoc","useLocation","queryParams","URLSearchParams","search","searchItemOpen","setSearchItemOpen","selectRegionOpen","setSelectRegionOpen","selectCityOpen","setSelectCityOpen","selectedRegion","setSelectedRegion","selectedCity","setSelectedCity","cityCheckedState","setCityCheckedState","clickedRegion","setClickedRegion","currentOrAllLocations","setCurrentOrAllLocations","searchFilterLocation","setSearchFilterLocation","searchTerm","setSearchTerm","latitude","setLatitude","longitude","setLongitude","radius","setRadius","navigate","useNavigate","handleSearch","searchParams","append","encodeURIComponent","toggleSearchItemOpen","prevSearchItemOpen","toggleSelectRegionOpen","prevSelectRegionOpen","toggleSelectCityOpen","prevSelectCityOpen","removeAllSelectedCity","handleCurrentOrAllLocationsClick","filterText","navigator","geolocation","getCurrentPosition","position","coords","join","MagnifyingGlass","placeholder","onKeyDown","e","city","index","removeSelectedCity","indexToRemove","cityToRemove","prevState","prevSelectedCity","_","NearLocIcon","AllPhIcon","RegionIcon","CityIcon","keys","locationData","region","handleRegionClick","BtnClear","BtnGreen","disabled","applySelectedRegion","CheckBox","handleCityChecked","cityName","values","every","applySelectedCity","selectedCitiesArray","entries","_city","isChecked","_ref2","isSticky","setIsSticky","handleScroll","scrollY","addEventListener","removeEventListener","handleHomePageClick","pathname","scrollTo","ChatMessageIcon","SlidingSideNav","SvgGridIconSolid","clipRule","SvgBurgerBtn","menus","Array","Skeleton","square","dispatch","useDispatch","useSelector","state","categories","productcategories","loading","setLoading","isMenuOpen","setIsMenuOpen","filteredCategories","setFilteredCategories","toggleMenu","prevIsMenuOpen","getUser","getProductCategories","myProfile","document","body","style","overflow","activeCollapsible","setActiveCollapsible","GridIcon","BurgerBtn","right","profile_pic","AvatarIcon","display_name","filtered","category","toLowerCase","includes","subcategories","sub","SlidingNavSkeleton","icon","prevActiveCollapsible","updatedCollapsible","forEach","handleToggleCollapsible","subCategory","subIndex","status","categoriesData","setCategories","setError"],"sourceRoot":""}