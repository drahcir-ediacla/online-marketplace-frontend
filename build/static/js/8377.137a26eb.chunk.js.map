{"version":3,"file":"static/js/8377.137a26eb.chunk.js","mappings":"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","sources":["assets/images/three-dots.svg","layouts/Footer/index.jsx","layouts/ManageAccountNav/index.jsx","pages/NotificationList/index.jsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgThreeDots(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 4 15\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.0263 11.1111C3.11535 11.1111 3.99998 11.9826 3.99998 13.0556C3.99998 14.1285 3.11535 15 2.0263 15C0.937246 15 0.0526123 14.1285 0.0526123 13.0556C0.0526123 11.9826 0.937246 11.1111 2.0263 11.1111ZM2.0263 5.55556C3.11535 5.55556 3.99998 6.42708 3.99998 7.5C3.99998 8.57292 3.11535 9.44444 2.0263 9.44444C0.937246 9.44444 0.0526123 8.57292 0.0526123 7.5C0.0526123 6.42708 0.937246 5.55556 2.0263 5.55556ZM3.99998 1.94444C3.99998 3.01736 3.11535 3.88889 2.0263 3.88889C0.937246 3.88889 0.0526123 3.01736 0.0526123 1.94444C0.0526123 0.871528 0.937246 0 2.0263 0C3.11535 0 3.99998 0.871528 3.99998 1.94444Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.89fe5f0798e41e6623600554c61f5be1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.scss'\r\nimport Logo from '../../assets/images/yogeek-logo-white.png';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <footer>\r\n                <div className=\"container\">\r\n                    <div className='footer-row1'>\r\n                        <div className='footer-col1'>\r\n                            <Link to='/'>\r\n                                <img src={Logo} alt=\"\" />\r\n                            </Link>\r\n                            <p>Our Purpose Is To Sustainable Make The Pleasure and Benefits of Marketplace to the Many.</p>\r\n                        </div>\r\n                        <div className='footer-col2'>\r\n                            <h5>Company</h5>\r\n                            <ul>\r\n                                <li>About Us</li>\r\n                                <li>Delivery Information</li>\r\n                                <li>Terms & Conditions</li>\r\n                                <li>Customer Service</li>\r\n                                <li>Privacy Policy</li>\r\n                                <li>Return Policy</li>\r\n                                <li>Join Affiliate</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className='footer-col3'>\r\n                            <h5>Services</h5>\r\n                            <ul>\r\n                                <li>Payment</li>\r\n                                <li>Feedback</li>\r\n                                <li>Contact Us</li>\r\n                                <li>Our Services</li>\r\n                                <li>FAQ</li>\r\n                                <li>Sitemap</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className='footer-col4'>\r\n                            <h5>Useful Links</h5>\r\n                            <ul>\r\n                                <li><Link to={'/forum'}>Community</Link></li>\r\n                                <li>Blog Post</li>\r\n                                <li>Return Policy</li>\r\n                                <li>Join Affiliate</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='copyright'>\r\n                    <span>Copyright 2023 - Yogeek</span>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './style.scss'\r\nimport SmallScreenHeader from '../Header/SmallScreenHeader'\r\n\r\nconst ManageAccountNav = () => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"manage-account-nav-container\">\r\n        <div className='row1'>\r\n          <div className='nav-title'>Manage Account</div>\r\n          <div><NavLink activeClassName=\"active\" to='/editprofile'>Account Information</NavLink></div>\r\n          <div><NavLink activeClassName=\"active\" to='/notificationlist'>Notification List</NavLink></div>\r\n        </div>\r\n        <div className='row2'>\r\n          <div className='nav-title'>Settings</div>\r\n          <div><NavLink activeClassName=\"active\" to='/deactivateaccount'>Account</NavLink></div>\r\n          <div><NavLink activeClassName=\"active\" to='/setpassword'>Security</NavLink></div>\r\n        </div>\r\n        <div className='row3'>\r\n          <div className='nav-title'><NavLink to='/wishlist'>Wishlist & Favorites</NavLink></div>\r\n        </div>\r\n        <div className='row4'>\r\n          <NavLink to='/addlisting' className='nav-title'>Sell Now</NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageAccountNav\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from '../../apicalls/axios';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\nimport './style.scss'\r\nimport Header from '../../layouts/Header';\r\nimport Footer from '../../layouts/Footer';\r\nimport ManageAccountNav from '../../layouts/ManageAccountNav';\r\nimport { ReactComponent as ThreeDots } from '../../assets/images//three-dots.svg';\r\n\r\n\r\nconst NotificationList = () => {\r\n\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [unreadNotifications, setUnreadNotifications] = useState([]);\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const [displayedNotificationsCount, setDisplayedNotificationsCount] = useState(20); // Initial count\r\n    const [displayedUnreadNotificationsCount, setDisplayedUnreadNotificationsCount] = useState(20); // Initial count\r\n\r\n    const openContent = (tabIndex) => {\r\n        setActiveTab(tabIndex);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch notifications when the component mounts\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    const fetchNotifications = async () => {\r\n        try {\r\n            const response = await axios.get('/api/notifications');\r\n\r\n            const sortedNotifications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n\r\n            setNotifications(sortedNotifications);\r\n        } catch (error) {\r\n            console.error('Error fetching notifications:', error);\r\n        }\r\n    };\r\n\r\n    const loadMoreNotifications = () => {\r\n        setDisplayedNotificationsCount(prevCount => prevCount + 20);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUnreadNotifications = async () => {\r\n            try {\r\n                const response = await axios.get('/api/notifications/unread');\r\n\r\n                const sortedNotifications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n\r\n                setUnreadNotifications(sortedNotifications);\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching unread notifications:', error);\r\n            }\r\n        }\r\n        fetchUnreadNotifications()\r\n    }, [])\r\n\r\n\r\n    const loadMoreUnreadNotifications = () => {\r\n        setDisplayedUnreadNotificationsCount(prevCount => prevCount + 20);\r\n    };\r\n\r\n\r\n\r\n\r\n    const markAsRead = async (notificationId) => {\r\n        try {\r\n            await axios.put(`/api/read-notifications/${notificationId}`, { read: true });\r\n            // Update the state to reflect the change\r\n            setNotifications(notifications.map(notification =>\r\n                notification.id === notificationId ? { ...notification, read: true } : notification\r\n            ));\r\n\r\n            setUnreadNotifications(unreadNotifications.map(notification =>\r\n                notification.id === notificationId ? { ...notification, read: true } : notification\r\n            ));\r\n        } catch (error) {\r\n            console.error('Error marking notification as read:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const markAllAsRead = async () => {\r\n        try {\r\n            await axios.put('/api/read-all-notifications', { read: true });\r\n\r\n            // Fetch updated notifications after marking all as read\r\n            fetchNotifications();\r\n            setUnreadNotifications([]);\r\n        } catch (error) {\r\n            console.error('Error marking notifications as read:', error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const notificationRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (e) => {\r\n            if (\r\n                notificationRef.current &&\r\n                !notificationRef.current.contains(e.target) &&\r\n                !e.target.closest('.dots-container')\r\n            ) {\r\n                setIsDropdownVisible(false);\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n\r\n    const toggleDropdown = () => {\r\n        setIsDropdownVisible(!isDropdownVisible);\r\n    };\r\n\r\n    const deleteNotificationById = async (notificationId) => {\r\n        try {\r\n            await axios.delete(`/api/delete-notification/${notificationId}`);\r\n            setNotifications(notifications.filter(notification => notification.id !== notificationId));\r\n            setUnreadNotifications(unreadNotifications.filter(notification => notification.id !== notificationId));\r\n        } catch (error) {\r\n            console.error('Error deleting notification:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const deleteAllNotifications = async () => {\r\n        try {\r\n            await axios.delete('/api/delete-all-notifications')\r\n\r\n            // Fetch updated notifications after marking all as read\r\n            fetchNotifications();\r\n            setUnreadNotifications([]);\r\n        } catch (error) {\r\n            console.error('Error deleting all notifications', error)\r\n        }\r\n    }\r\n\r\n    const openManageAccountNav = () => {\r\n        window.location.href = '/manage-account'\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"notification-list-body\">\r\n                <div className=\"container\">\r\n                    <h3>Manage Account</h3>\r\n                    <div className=\"box\">\r\n                        <div className=\"col-left\"><ManageAccountNav /></div>\r\n                        <div className=\"col-right\">\r\n                            <div className=\"notification-list-container\">\r\n                                <div className=\"label-btn\">\r\n                                    <div className=\"back-arrow\" onClick={openManageAccountNav}></div>\r\n                                    <h5>NOTIFICATION LIST</h5>\r\n                                </div>\r\n                                <div className=\"notification-btns\">\r\n                                    <div className='view-options-btn-container'>\r\n                                        <button className={`all-btn ${activeTab === 0 ? 'active' : ''}`} onClick={() => openContent(0)}>ALL</button>\r\n                                        <button className={`unread-btn ${activeTab === 1 ? 'active' : ''}`} onClick={() => openContent(1)}>UNREAD</button>\r\n                                    </div>\r\n                                    <div className='dots-container' onClick={toggleDropdown}>\r\n                                        <div className='three-dots'>\r\n                                            {notifications.length > 0 && <ThreeDots />}\r\n                                        </div>\r\n                                        {isDropdownVisible && (\r\n                                            <div className=\"three-dots-dropdown-options\" ref={notificationRef}>\r\n                                                <ul>\r\n                                                    {unreadNotifications.length > 0 &&\r\n                                                        <li onClick={markAllAsRead}>\r\n                                                            <span>Mark All as Read</span>\r\n                                                        </li>\r\n                                                    }\r\n                                                    <li onClick={deleteAllNotifications}>\r\n                                                        <span>Clear All Notifications</span>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                {notifications.length === 0 ? (\r\n                                    <div style={{ display: activeTab === 0 ? 'block' : 'none' }} className='no-notif'>You don't have any notifications</div>\r\n                                ) : (\r\n                                    <div style={{ display: activeTab === 0 ? 'block' : 'none' }}>\r\n                                        <ul>\r\n                                            {notifications.slice(0, displayedNotificationsCount).map((notification) => (\r\n                                                <li key={notification.id} >\r\n                                                    <div className=\"delete-notif-btn\" onClick={() => deleteNotificationById(notification.id)}>\r\n                                                        <i class=\"fa fa-times\"></i>\r\n                                                    </div>\r\n                                                    <div className=\"notification-container\" onClick={() => markAsRead(notification.id)}>\r\n                                                        <div className=\"user-avatar\">\r\n                                                            <img src={notification.subjectUser.profile_pic} alt=\"\" />\r\n                                                        </div>\r\n                                                        <div className='notification-info'>\r\n                                                            <div><span dangerouslySetInnerHTML={{ __html: notification.message }} /></div>\r\n                                                            <div className=\"date\">{formatDistanceToNow(new Date(notification.createdAt), { addSuffix: true, locale: enUS })}</div>\r\n                                                        </div>\r\n                                                        {!notification.read && (\r\n                                                            <div className=\"circle-container\">\r\n                                                                <div className=\"circle\"></div>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                        {notifications.length > displayedNotificationsCount &&\r\n                                            <div className='view-more'>\r\n                                                <button className='view-more-btn' onClick={loadMoreNotifications}>View more</button>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )}\r\n                                {unreadNotifications.length === 0 ? (\r\n                                    <div className='no-notif' style={{ display: activeTab === 1 ? 'block' : 'none' }}>You don't have unread notifications</div>\r\n                                ) : (\r\n                                    <div style={{ display: activeTab === 1 ? 'block' : 'none' }}>\r\n                                        <ul>\r\n                                            {unreadNotifications.slice(0, displayedUnreadNotificationsCount).map((notification) => (\r\n                                                <li key={notification.id} >\r\n                                                    <div className=\"delete-notif-btn\" onClick={() => deleteNotificationById(notification.id)}>\r\n                                                        <i class=\"fa fa-times\"></i>\r\n                                                    </div>\r\n                                                    <div className=\"notification-container\" onClick={() => markAsRead(notification.id)}>\r\n                                                        <div className=\"user-avatar\">\r\n                                                            <img src={notification.subjectUser.profile_pic} alt=\"\" />\r\n                                                        </div>\r\n                                                        <div className='notification-info'>\r\n                                                            <div><span dangerouslySetInnerHTML={{ __html: notification.message }} /></div>\r\n                                                            <div className=\"date\">{formatDistanceToNow(new Date(notification.createdAt), { addSuffix: true, locale: enUS })}</div>\r\n                                                        </div>\r\n                                                        {!notification.read && (\r\n                                                            <div className=\"circle-container\">\r\n                                                                <div className=\"circle\"></div>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                        {unreadNotifications.length > displayedUnreadNotificationsCount &&\r\n                                            <div className='view-more'>\r\n                                                <button className='view-more-btn' onClick={loadMoreUnreadNotifications}>View more</button>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NotificationList;"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgThreeDots","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","id","d","ForwardRef","Footer","_jsx","_Fragment","children","_jsxs","className","Link","to","src","alt","ManageAccountNav","NavLink","activeClassName","NotificationList","notifications","setNotifications","useState","unreadNotifications","setUnreadNotifications","activeTab","setActiveTab","isDropdownVisible","setIsDropdownVisible","displayedNotificationsCount","setDisplayedNotificationsCount","displayedUnreadNotificationsCount","setDisplayedUnreadNotificationsCount","openContent","tabIndex","useEffect","fetchNotifications","async","sortedNotifications","axios","get","data","sort","a","b","Date","createdAt","error","console","fetchUnreadNotifications","markAsRead","put","concat","notificationId","read","map","notification","notificationRef","useRef","handleClickOutside","e","current","contains","closest","document","addEventListener","removeEventListener","deleteNotificationById","delete","filter","Header","onClick","openManageAccountNav","window","location","href","toggleDropdown","ThreeDots","style","display","slice","class","subjectUser","profile_pic","dangerouslySetInnerHTML","__html","message","formatDistanceToNow","addSuffix","locale","enUS","loadMoreNotifications","prevCount","loadMoreUnreadNotifications"],"sourceRoot":""}