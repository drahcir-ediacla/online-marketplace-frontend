{"version":3,"file":"static/js/5660.8e04897a.chunk.js","mappings":"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","sources":["assets/images/three-dots.svg","components/Button/BtnCategory.jsx","components/FormField/Input.jsx","components/QuillEditor/index.jsx","components/Forum/SkeletonLoading/SideNavCategoriesSkeleton.jsx","layouts/Forum/FilterNavigation/index.jsx","components/Forum/ProfileDiscussionCard/index.jsx","pages/Forum/ForumProfile/index.jsx","redux/actions/forumTagsActions.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgThreeDots(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 4 15\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.0263 11.1111C3.11535 11.1111 3.99998 11.9826 3.99998 13.0556C3.99998 14.1285 3.11535 15 2.0263 15C0.937246 15 0.0526123 14.1285 0.0526123 13.0556C0.0526123 11.9826 0.937246 11.1111 2.0263 11.1111ZM2.0263 5.55556C3.11535 5.55556 3.99998 6.42708 3.99998 7.5C3.99998 8.57292 3.11535 9.44444 2.0263 9.44444C0.937246 9.44444 0.0526123 8.57292 0.0526123 7.5C0.0526123 6.42708 0.937246 5.55556 2.0263 5.55556ZM3.99998 1.94444C3.99998 3.01736 3.11535 3.88889 2.0263 3.88889C0.937246 3.88889 0.0526123 3.01736 0.0526123 1.94444C0.0526123 0.871528 0.937246 0 2.0263 0C3.11535 0 3.99998 0.871528 3.99998 1.94444Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.89fe5f0798e41e6623600554c61f5be1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst BtnCategory = ({ label, onClick, className, active }) => {\r\n  return (\r\n    <button className={`category-button ${active ? 'active' : ''} ${className}`} onClick={onClick} >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnCategory;","import React from 'react'\r\nimport './style.css'\r\n\r\nconst Input = ({ id, name, value, type, ref, className, style, placeholder, onChange, onKeyDown, onKeyPress, onFocus, disabled, defaultValue, readOnly }) => {\r\n  return (\r\n    <>\r\n      <input \r\n      type={type} \r\n      id={id} \r\n      name={name} \r\n      value={value} \r\n      ref={ref} \r\n      onChange={onChange} \r\n      onKeyDown={onKeyDown} \r\n      onKeyPress={onKeyPress} \r\n      onFocus={onFocus} \r\n      disabled={disabled} \r\n      defaultValue={defaultValue} \r\n      readOnly={readOnly} \r\n      className={`custom-input ${className}`} \r\n      style={style}\r\n      placeholder={placeholder} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input","import { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './style.scss'\r\n\r\n\r\n\r\n\r\nconst QuillEditor = ({ className, value, onChange, id, name, placeholder }) => {\r\n\r\n    // const [value, setValue] = useState('')\r\n    const [isHtmlMode, setIsHtmlMode] = useState(false);\r\n\r\n    const modules = {\r\n        toolbar: [\r\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n            [{ font: [] }],\r\n            [{ size: [] }],\r\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n            [\r\n                { list: 'ordered' },\r\n                { list: 'bullet' },\r\n                { indent: '-1' },\r\n                { indent: '+1' },\r\n            ],\r\n            [\"link\", \"image\", \"video\"],\r\n            ['html'],\r\n        ]\r\n    }\r\n\r\n    const toggleHtmlMode = () => {\r\n        setIsHtmlMode(!isHtmlMode);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ReactQuill\r\n                id={id}\r\n                name={name}\r\n                theme=\"snow\"\r\n                value={value}\r\n                onChange={onChange}\r\n                modules={modules}\r\n                className={className}\r\n                placeholder={placeholder}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuillEditor","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport './style.scss'\r\n\r\nconst SideNavCategoriesSkeleton = ({ menus }) => {\r\n    return Array(menus)\r\n        .fill(0)\r\n        .map((_, i) => (\r\n                    <Skeleton height={35} width={205} className='side-nav-categories' />\r\n        ));\r\n};\r\n\r\nexport default SideNavCategoriesSkeleton;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../../../apicalls/axios'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { getUser } from '../../../redux/actions/userActions';\r\nimport { getForumCategories } from '../../../redux/actions/forumCategoriesActions';\r\nimport { getAllForumTags } from '../../../redux/actions/forumTagsActions';\r\nimport './style.scss'\r\nimport { Link, useParams, useNavigate, NavLink, useLocation } from 'react-router-dom'\r\nimport DefaultAvatar from '../../../assets/images/avatar-icon.png'\r\nimport CustomSelect from '../../../components/FormField/CustomSelect'\r\nimport BtnCategory from '../../../components/Button/BtnCategory'\r\nimport FilterTagModal from '../../../components/Modal/FilterTagModal'\r\nimport SideNavCategoriesSkeleton from '../../../components/Forum/SkeletonLoading/SideNavCategoriesSkeleton'\r\nimport LoginModal from '../../../components/Modal/LoginModal'\r\n\r\n\r\nconst FilterNavigation = ({\r\n    createdDiscussionsTab,\r\n    joinedDiscussionsTab,\r\n    userActivityTab,\r\n    forumNotificationsTab,\r\n    addDiscussionsBtn,\r\n    discussionFilter,\r\n    createdDiscussionsData,\r\n    joinedDiscussionsData,\r\n    activitiesData,\r\n    paramsUserData,\r\n    notifications,\r\n    sortOptions,\r\n    onOptionSelect,\r\n    emptySortDiscussions,\r\n    className,\r\n}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const authUser = useSelector((state) => state.user.data);\r\n    const categories = useSelector((state) => state.forumcategories.data);\r\n    const tags = useSelector((state) => state.forumtags.data);\r\n    const { userId, tab } = useParams();\r\n    const userIdNumber = Number(userId);\r\n    const authUserIdNumber = Number(authUser?.id)\r\n    const navigate = useNavigate();\r\n    const location = useLocation()\r\n    const [showFilter, setShowFilter] = useState(discussionFilter)\r\n    const [activeCategory, setActiveCategory] = useState([])\r\n    const [selectedTags, setSelectedTags] = useState(\r\n        Array.isArray(location.state) ? location.state : []\r\n    );\r\n    const [filterTagModalOpen, setFilterTagModalOpen] = useState(false);\r\n    const [user, setUser] = useState({})\r\n    const [totalCreatedDiscussions, setTotalCreatedDiscussions] = useState(0)\r\n    const [totalJoinedDiscussions, setTotalJoinedDiscussions] = useState(0);\r\n    const [totalUnreadNotifications, setTotalUnreadNotifications] = useState({})\r\n    const [loadingCategories, setLoadingCategories] = useState(true)\r\n    const [loadingTags, setLoadingTags] = useState(true)\r\n    const [loginModalOpen, setLoginModalOpen] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(getUser())\r\n    // }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!categories) {\r\n            setLoadingCategories(true)\r\n            dispatch(getForumCategories());\r\n        } else {\r\n            setLoadingCategories(false)\r\n        }\r\n    }, [dispatch, categories]);\r\n\r\n    useEffect(() => {\r\n        if (tags.length === 0) {\r\n            setLoadingTags(true)\r\n            dispatch(getAllForumTags());\r\n        } else {\r\n            setLoadingTags(false)\r\n        }\r\n    }, [dispatch, tags]);\r\n\r\n    useEffect(() => {\r\n        // If location.state is not null or undefined, update state\r\n        if (location.state && location.state.selectedTags) {\r\n            setSelectedTags(location.state.selectedTags);\r\n        }\r\n    }, [location.state]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/user/${userId}`)\r\n\r\n                // Destructure only the properties you want\r\n                const { id, display_name, profile_pic, createdAt } = response.data;\r\n                setUser({ id, display_name, profile_pic, createdAt })\r\n                paramsUserData(response.data)\r\n            } catch (error) {\r\n                console.log('Error fetching data:', error)\r\n            }\r\n        }\r\n        fetchUserData()\r\n    }, [userId, paramsUserData])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const fetchForumCategories = async () => {\r\n    //         try {\r\n    //             // setLoadingCategories(true)\r\n    //             // const responseCategories = await axios.get('/api/fetchforumcategories')\r\n    //             // setCategories(responseCategories.data)\r\n\r\n    //             // const responseTags = await axios.get('/api/fetchforumtags')\r\n    //             // setTags(responseTags.data)\r\n    //             // setLoadingCategories(false)\r\n\r\n    //             // Check if 'categoriesData' is a function before calling it\r\n    //             // 'categoriesData' is expected to be a function passed as a prop for handling the fetched data\r\n    //             // If 'categoriesData' is not a function, it logs a message in the console\r\n    //             if (typeof categoriesData === 'function') {\r\n    //                 categoriesData(categories);\r\n    //                 setLoadingCategories(false)\r\n    //             }\r\n    //             if (typeof tagsData === 'function') {\r\n    //                 tagsData(tags);\r\n    //                 setLoadingCategories(false)\r\n    //             } else {\r\n    //                 setLoadingCategories(false)\r\n    //                 console.log('categoriesData is not a function');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             setLoadingCategories(false)\r\n    //             console.log('Error fetching data:', error)\r\n    //         }\r\n    //     }\r\n    //     fetchForumCategories()\r\n    // }, [categoriesData, tagsData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (activeCategory === null) {\r\n            setActiveCategory(categories[0].id); // or categories[0].name based on your logic\r\n        }\r\n    }, [categories, activeCategory]);\r\n\r\n    useEffect(() => {\r\n        const fetchCreatedDiscussions = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/${userId}/created/discussion`)\r\n                const descendingCD = response.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n                setTotalCreatedDiscussions(response.data.length)\r\n                createdDiscussionsData(descendingCD)\r\n            } catch (err) {\r\n                console.log('Error fetching user created discussions:', err)\r\n            }\r\n        }\r\n        fetchCreatedDiscussions()\r\n    }, [userId, createdDiscussionsData])\r\n\r\n    useEffect(() => {\r\n        const fetchJoinedDiscussions = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/${userId}/joined/discussion`)\r\n                const descendingJD = response.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n                setTotalJoinedDiscussions(response.data.length)\r\n                joinedDiscussionsData(descendingJD)\r\n            } catch (err) {\r\n                console.log('Error fetching user created discussions:', err)\r\n            }\r\n        }\r\n        fetchJoinedDiscussions()\r\n    }, [userId, joinedDiscussionsData])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchForumActivities = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/forum-activities/${userId}`)\r\n                const sortedActivities = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n                activitiesData(sortedActivities)\r\n            } catch (err) {\r\n                console.log('Error fetching forum activities:', err)\r\n            }\r\n        }\r\n        fetchForumActivities()\r\n    }, [userId, activitiesData])\r\n\r\n    useEffect(() => {\r\n        const getTotalUnreadNotifications = async () => {\r\n            try {\r\n                const response = await axios.get('/api/total-forum-notifications')\r\n                setTotalUnreadNotifications(response.data)\r\n            } catch (error) {\r\n                console.log('Error fetching total unread notifications', error)\r\n            }\r\n        }\r\n        getTotalUnreadNotifications()\r\n    }, [notifications])\r\n\r\n\r\n    useEffect(() => {\r\n        switch (tab) {\r\n            case 'created_discussions':\r\n                createdDiscussionsTab();\r\n                setShowFilter(true);\r\n                break;\r\n            case 'joined_discussions':\r\n                joinedDiscussionsTab();\r\n                setShowFilter(true);\r\n                break;\r\n            case 'user_activity':\r\n                userActivityTab();\r\n                setShowFilter(false);\r\n                break;\r\n            case 'notifications':\r\n                forumNotificationsTab();\r\n                setShowFilter(false);\r\n                break;\r\n            case 'add_discussions':\r\n                addDiscussionsBtn();\r\n                setShowFilter(false);\r\n                break;\r\n            default:\r\n                // Optional: Handle unknown tabs\r\n                break;\r\n        }\r\n    }, [tab, navigate, createdDiscussionsTab, joinedDiscussionsTab, userActivityTab, forumNotificationsTab, addDiscussionsBtn]);\r\n\r\n\r\n\r\n    const handleCreatedDiscussions = () => {\r\n        navigate(`/forum/profile/${userId}/created_discussions`);\r\n        createdDiscussionsTab(); // Call the function\r\n    };\r\n    const handleJoinedDiscussions = () => {\r\n        navigate(`/forum/profile/${userId}/joined_discussions`);\r\n        joinedDiscussionsTab(); // Call the function\r\n    };\r\n    const handleUserActivity = () => {\r\n        navigate(`/forum/profile/${userId}/user_activity`);\r\n        userActivityTab(); // Call the function\r\n    };\r\n    const handleForumNotifications = () => {\r\n        navigate(`/forum/profile/${userId}/notifications`);\r\n        forumNotificationsTab(); // Call the function\r\n    };\r\n\r\n    const handleSelectedCategory = () => {\r\n        if (typeof emptySortDiscussions === 'function') {\r\n            emptySortDiscussions([]);\r\n        }\r\n    }\r\n\r\n    const toggleTag = (tag_id) => {\r\n        setSelectedTags((prevSelectedTags) => {\r\n            const updatedTags = prevSelectedTags.includes(tag_id)\r\n                ? prevSelectedTags.filter((t) => t !== tag_id)\r\n                : [...prevSelectedTags, tag_id];\r\n\r\n            if (typeof emptySortDiscussions === 'function') {\r\n                emptySortDiscussions([]);\r\n            }\r\n\r\n            // Navigate with the updatedTags directly\r\n            navigate('/forum/filtertags', { state: { selectedTags: updatedTags } });\r\n\r\n            return updatedTags;\r\n        });\r\n    };\r\n\r\n    const toggleLoginModal = () => {\r\n        setLoginModalOpen((prevLoginModalOpen) => !prevLoginModalOpen)\r\n    }\r\n\r\n    const toggleTagModal = () => {\r\n        setFilterTagModalOpen((prev) => !prev)\r\n    }\r\n\r\n    const clearAllTags = () => {\r\n        const updatedTags = []; // No tags selected\r\n        setSelectedTags(updatedTags);\r\n        navigate('/forum/filtertags', { state: { selectedTags: updatedTags } });\r\n    };\r\n\r\n\r\n    const originalDate = user?.createdAt || '';\r\n    const formattedDate = new Date(originalDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long' });\r\n\r\n    return (\r\n        <>\r\n            {loginModalOpen && <LoginModal onClick={toggleLoginModal} />}\r\n            {filterTagModalOpen && <FilterTagModal onClick={toggleTagModal} tagsData={tags} />}\r\n            <div className={`forum-category-page-filter-nav ${className}`}>\r\n                {!authUser ? (\r\n                    <>\r\n                        <div className='forum-category-page-row1 not-authenticated'>\r\n                            <p>Join our community, elevate your marketplace experience!</p>\r\n                            <button type='button' className='forum-login-btn' onClick={toggleLoginModal}>Sign In</button>\r\n                            <p>Don’t have a Yogeek account? <Link to='/registerbyemail'>Sign up</Link></p>\r\n                        </div>\r\n                        {userId && <div className='forum-category-page-row1'>\r\n                            <div className='forum-category-page-row1-row1'>\r\n                                <img src={user.profile_pic || DefaultAvatar} alt=\"\" className='forum-profile-pic' />\r\n                                <div className='user-display-name'>\r\n                                    <p>{user.display_name}</p>\r\n                                    <small>Joined in {formattedDate}</small>\r\n                                </div>\r\n                            </div>\r\n                            <ul className='forum-profile-menu'>\r\n                                <li onClick={handleCreatedDiscussions}>Created Discussions <span className='forum-activity-counter'>({totalCreatedDiscussions})</span></li>\r\n                                <li onClick={handleJoinedDiscussions}>Joined Discussions <span className='forum-activity-counter'>({totalJoinedDiscussions})</span></li>\r\n                                <li onClick={handleUserActivity}>Latest Activity</li>\r\n                                {authUserIdNumber === userIdNumber ? (\r\n                                    <li onClick={handleForumNotifications} className='forum-notifications'>Notifications {totalUnreadNotifications.totalCount > 0 && <div className='forum-notification-counter'>{totalUnreadNotifications.totalCount}</div>}</li>\r\n                                ) : (\r\n                                    null\r\n                                )}\r\n\r\n                            </ul>\r\n                        </div>\r\n                        }\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {userId && (\r\n                            <div className='forum-category-page-row1'>\r\n                                <div className='forum-category-page-row1-row1'>\r\n                                    <img src={user.profile_pic || DefaultAvatar} alt=\"\" className='forum-profile-pic' />\r\n                                    <div className='user-display-name'>\r\n                                        <p>{user.display_name}</p>\r\n                                        <small>Joined in {formattedDate}</small>\r\n                                    </div>\r\n                                </div>\r\n                                <ul className='forum-profile-menu'>\r\n                                    <li onClick={handleCreatedDiscussions}>Created Discussions <span className='forum-activity-counter'>({totalCreatedDiscussions})</span></li>\r\n                                    <li onClick={handleJoinedDiscussions}>Joined Discussions <span className='forum-activity-counter'>({totalJoinedDiscussions})</span></li>\r\n                                    <li onClick={handleUserActivity}>Latest Activity</li>\r\n                                    {authUserIdNumber === userIdNumber ? (\r\n                                        <li onClick={handleForumNotifications} className='forum-notifications'>Notifications {totalUnreadNotifications.totalCount > 0 && <div className='forum-notification-counter'>{totalUnreadNotifications.totalCount}</div>}</li>\r\n                                    ) : (\r\n                                        null\r\n                                    )}\r\n\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n                {showFilter && (\r\n                    <>\r\n                        <div className='forum-sortby'>\r\n                            <label>SORT BY</label>\r\n                            <CustomSelect\r\n                                data={sortOptions}\r\n                                onOptionSelect={onOptionSelect}\r\n                                className='forum-sortby-dropdown-select'\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <div className='forum-category-page-row2'>\r\n                    <div className='section-label-container'>\r\n                        <label>CATEGORIES</label>\r\n                    </div>\r\n                    <div className=\"forum-category-btn-container\">\r\n                        {loadingCategories &&\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '3px' }}>\r\n                                <SideNavCategoriesSkeleton menus={8} />\r\n                            </div>\r\n                        }\r\n                        {categories?.categories?.map(category => (\r\n                            <NavLink activeclassname=\"active\" key={category.id} className='forum-category-menu' to={`/forum/category/${category.id}/${category.name}`} onClick={handleSelectedCategory}>{category.name}</NavLink>\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='forum-category-page-row3'>\r\n                    <div className='section-label-container'>\r\n                        <label>POPULAR TAGS</label>\r\n                    </div>\r\n                    <div className=\"forum-category-btn-container\">\r\n                        {loadingTags &&\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '3px' }}>\r\n                                <SideNavCategoriesSkeleton menus={8} />\r\n                            </div>\r\n                        }\r\n                        {tags.slice(0, 10).map(tag => (\r\n                            <BtnCategory\r\n                                key={tag.id}\r\n                                onClick={() => toggleTag(tag.id)}\r\n                                label={tag.name}\r\n                                className={`tag-btn ${selectedTags.includes(tag.id) ? 'active' : ''}`}\r\n                            />\r\n                        ))}\r\n                        <div className='more-tags' style={{ justifyContent: selectedTags.length > 0 ? ('space-between') : ('end') }}>\r\n                            {selectedTags && selectedTags.length > 0 && <button onClick={clearAllTags}>Clear all</button>}\r\n                            <button onClick={toggleTagModal}>Select more tags</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default FilterNavigation;","import './style.scss'\r\nimport { Link } from 'react-router-dom';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\nimport { ReactComponent as Like } from '../../../assets/images/like-icon.svg'\r\nimport { ReactComponent as MsgIcon } from '../../../assets/images/message-icon.svg'\r\nimport { ReactComponent as EyeIcon } from '../../../assets/images/eye-solid.svg'\r\nimport DefaultAvatar from '../../../assets/images/avatar-icon.png'\r\n\r\nconst ProfileDiscussionCard = ({ data }) => {\r\n\r\n    // Function to safely parse and format the date\r\n    const getFormattedDate = (dateString) => {\r\n        if (typeof dateString !== 'string') {\r\n            return 'Invalid date';\r\n        }\r\n\r\n        const date = new Date(dateString);\r\n        return isNaN(date.getTime())\r\n            ? 'Invalid date'\r\n            : formatDistanceToNow(date, { addSuffix: true, locale: enUS });\r\n    };\r\n\r\n    // const getTotalReplies = (posts) => {\r\n    //     let totalReplies = 0;\r\n\r\n    //     const countReplies = (post) => {\r\n    //         totalReplies += post.replies.length;\r\n    //         post.replies.forEach(countReplies); // Recursively count replies\r\n    //     };\r\n\r\n    //     posts.forEach(countReplies);\r\n    //     return totalReplies;\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {data?.map(discussion => (\r\n                <div className=\"forum-discussion-card\" key={discussion?.discussion_id}>\r\n                    <div className='forum-discussion-card-row1'>\r\n                        <Link to={`/forum/profile/${discussion?.user_id}/created_discussions`}>\r\n                            <img src={discussion?.discussionStarter?.profile_pic || DefaultAvatar} alt='' />\r\n                        </Link>\r\n                        <div className='forum-discussion-info'>\r\n                            <Link to={`/forum/discussion/${discussion?.discussion_id}`}>\r\n                                <h6>{discussion?.title}</h6>\r\n                            </Link>\r\n                            <small>\r\n                                by&nbsp;\r\n                                <Link to={`/forum/profile/${discussion?.user_id}/created_discussions`}>\r\n                                    {discussion?.discussionStarter?.display_name}\r\n                                </Link>\r\n                                &nbsp;{getFormattedDate(discussion?.created_at)}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    {discussion?.post?.map(post => (\r\n                        <>\r\n                            <div className='forum-discussion-card-row2' key={post?.post_id}>\r\n                                <div dangerouslySetInnerHTML={{ __html: post?.content }} />\r\n                            </div>\r\n                            <div className='forum-discussion-card-row3'>\r\n                                <div className=\"view-reply-like-counter\">\r\n                                    <div className=\"like-counter\">\r\n                                        <div className='like-msg-icon'><Like /></div>\r\n                                        <span>{post?.likes.length || 0} likes</span>\r\n                                    </div>\r\n                                    <div className=\"reply-counter\">\r\n                                        <div className='reply-msg-icon'><MsgIcon /></div>\r\n                                        <span>{discussion?.totalReplies} replies</span>\r\n                                    </div>\r\n                                    <div className=\"view-counter\">\r\n                                        <div className='view-msg-icon'><EyeIcon /></div>\r\n                                        <span>{discussion?.post[0]?.views} views</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileDiscussionCard;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from '../../../apicalls/axios';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\nimport './style.scss'\r\nimport { getUser } from '../../../redux/actions/userActions';\r\nimport { getForumCategories } from '../../../redux/actions/forumCategoriesActions';\r\nimport { getAllForumTags } from '../../../redux/actions/forumTagsActions';\r\nimport { Setloader } from '../../../redux/reducer/loadersSlice';\r\nimport Header from '../../../layouts/Forum/Header'\r\nimport Footer from '../../../layouts/Forum/Footer'\r\nimport FilterNavigation from '../../../layouts/Forum/FilterNavigation'\r\nimport GTranslate from '../../../components/GTranslate';\r\nimport NewDiscussionBtn from '../../../components/Button/NewDiscussionBtn'\r\nimport ForumDiscussionCard from '../../../components/Forum/ForumDiscussionCard'\r\nimport ProfileDiscussionCard from '../../../components/Forum/ProfileDiscussionCard'\r\nimport SearchDiscussionBox from '../../../components/SearchDiscussionBox'\r\nimport QuillEditor from '../../../components/QuillEditor';\r\nimport Input from '../../../components/FormField/Input';\r\nimport BtnGreen from '../../../components/Button/BtnGreen';\r\nimport BtnClear from '../../../components/Button/BtnClear';\r\nimport LoginModal from '../../../components/Modal/LoginModal';\r\nimport DefaultAvatar from '../../../assets/images/avatar-icon.png'\r\nimport { ReactComponent as ThreeDots } from '../../../assets/images//three-dots.svg';\r\nimport { ReactComponent as LoadingSpinner } from '../../../assets/images/loading-spinner.svg'\r\nimport CategoryMenuBtn from '../../../components/Forum/CategoryMenuBtn';\r\nimport FilterTagButton from '../../../components/Forum/FilterTagButton';\r\nimport SmallScreenNavMenu from '../../../components/Forum/SmallScreenNavMenu';\r\n\r\n\r\n\r\nconst ForumProfile = () => {\r\n\r\n    const user = useSelector((state) => state.user.data);\r\n    const categories = useSelector((state) => state.forumcategories.data);\r\n    const allTags = useSelector((state) => state.forumtags.data);\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n    const navigate = useNavigate()\r\n    const [paramsUser, setParamsUser] = useState({})\r\n    // const [categories, setCategories] = useState([])\r\n    // const [allTags, setAllTags] = useState([])\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [activities, setActivities] = useState([]);\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [createdDiscussions, setCreatedDiscussions] = useState([])\r\n    const [joinedDiscussions, setJoinedDiscussions] = useState([])\r\n    const [discussionFilter, setDiscussionFilter] = useState(true)\r\n    const [loginModalOpen, setLoginModalOpen] = useState(false)\r\n    const [selectCategoryOpen, setSelectCategoryOpen] = useState(false)\r\n    const [selectedSubCategory, setSelectedSubCategory] = useState('')\r\n    const [tags, setTags] = useState([]);\r\n    const [inputTags, setInputTags] = useState('');\r\n    const [filteredTags, setFilteredTags] = useState([allTags]);\r\n    const [showDropdownTags, setShowDropdownTags] = useState(false);\r\n    const [title, setTitle] = useState('')\r\n    const [content, setContent] = useState('')\r\n    const [categoryId, setCategoryId] = useState('')\r\n    const [activeNotifTab, setActiveNotifTab] = useState(0);\r\n    const [notifThreeDotsOptions, setNotifThreeDotsOptions] = useState(false)\r\n    const [totalUnreadNotifications, setTotalUnreadNotifications] = useState({})\r\n    const [page, setPage] = useState(1);\r\n    const [limit] = useState(10);\r\n    const [loading, setLoading] = useState(false);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const observer = useRef()\r\n    const dropDownCategory = useRef();\r\n    const dropDownTags = useRef();\r\n    const dropDownNotif = useRef();\r\n    const [sortCD, setSortCD] = useState([])\r\n    const [sortJD, setSortJD] = useState([])\r\n    const filterDiscussionOptions = ['Most Recent', 'Most Viewed', 'Most Liked'].map(option => (\r\n        {\r\n            label: option,\r\n            value: option.toLowerCase()\r\n        }));\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (location.state && location.state.activeTab) {\r\n            setActiveTab(location.state.activeTab);\r\n        }\r\n    }, [location.state]);\r\n\r\n    useEffect(() => {\r\n        if (location.state && location.state.hasOwnProperty('discussionFilter')) {\r\n            setDiscussionFilter(location.state.discussionFilter);\r\n        }\r\n    }, [location.state]);\r\n\r\n    useEffect(() => {\r\n        const handleGlobalClick = (event) => {\r\n            if (dropDownCategory.current && !dropDownCategory.current.contains(event.target)) {\r\n                setSelectCategoryOpen(false);\r\n            }\r\n\r\n            if (dropDownTags.current && !dropDownTags.current.contains(event.target)) {\r\n                setShowDropdownTags(false);\r\n                setInputTags('');\r\n            }\r\n\r\n            if (\r\n                dropDownNotif.current &&\r\n                !dropDownNotif.current.contains(event.target) &&\r\n                !event.target.closest('.dots-container')\r\n            ) {\r\n                setNotifThreeDotsOptions(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleGlobalClick);\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handleGlobalClick);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getTotalUnreadNotifications = async () => {\r\n            try {\r\n                const response = await axios.get('/api/total-forum-notifications')\r\n                setTotalUnreadNotifications(response.data.totalCount)\r\n            } catch (error) {\r\n                console.log('Error fetching total unread notifications', error)\r\n            }\r\n        }\r\n        getTotalUnreadNotifications()\r\n    }, [notifications])\r\n\r\n    useEffect(() => {\r\n        const fetchForumNotifications = async () => {\r\n            if (loading || !hasMore) return; // Don't fetch if already loading or no more data\r\n\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.get(`/api/forum-notifications/?page=${page}&limit=${limit}`)\r\n                const newNotification = response.data\r\n                setNotifications((prevData) => {\r\n                    const uniqueData = newNotification.filter(\r\n                        (item) => !prevData.some((existingItem) => existingItem.id === item.id)\r\n                    );\r\n                    return [...prevData, ...uniqueData];\r\n                });\r\n                setHasMore(newNotification.length > 0);\r\n            } catch (err) {\r\n                console.log('Error fetching forum notifications:', err)\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchForumNotifications()\r\n    }, [page, limit])\r\n\r\n\r\n    // Intersection Observer callback\r\n    const lastElementRef = (node) => {\r\n        if (loading) return; // Don't observe if loading\r\n\r\n        if (observer.current) observer.current.disconnect(); // Disconnect previous observer\r\n\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            if (entries[0].isIntersecting) {\r\n                setPage((prevPage) => prevPage + 1); // Load next page\r\n            }\r\n        });\r\n\r\n        if (node) observer.current.observe(node); // Observe the last element\r\n    };\r\n\r\n\r\n    const sortDiscussionsByDate = (a, b) => new Date(b.created_at) - new Date(a.created_at);\r\n\r\n    const sortDiscussionsByViews = (a, b) => {\r\n        const viewsA = a.post.reduce((acc, post) => acc + (post.views || 0), 0);\r\n        const viewsB = b.post.reduce((acc, post) => acc + (post.views || 0), 0);\r\n        return viewsB - viewsA;\r\n    };\r\n\r\n    const sortDiscussionsByLikes = (a, b) => {\r\n        const likesA = a.post.reduce((acc, post) => acc + (post.likes ? post.likes.length : 0), 0);\r\n        const likesB = b.post.reduce((acc, post) => acc + (post.likes ? post.likes.length : 0), 0);\r\n        return likesB - likesA;\r\n    };\r\n\r\n    const mostRecentCD = [...createdDiscussions].sort(sortDiscussionsByDate);\r\n    const mostViewedCD = [...createdDiscussions].sort(sortDiscussionsByViews);\r\n    const mostLikedCD = [...createdDiscussions].sort(sortDiscussionsByLikes);\r\n\r\n\r\n\r\n    const mostRecentJD = [...joinedDiscussions].sort(sortDiscussionsByDate);\r\n    const mostViewedJD = [...joinedDiscussions].sort(sortDiscussionsByViews);\r\n    const mostLikedJD = [...joinedDiscussions].sort(sortDiscussionsByLikes);\r\n\r\n    const handleOptionSelect = (option) => {\r\n        const discussionSets = activeTab === 0\r\n            ? {\r\n                'most recent': mostRecentCD,\r\n                'most viewed': mostViewedCD,\r\n                'most liked': mostLikedCD\r\n            }\r\n            : {\r\n                'most recent': mostRecentJD,\r\n                'most viewed': mostViewedJD,\r\n                'most liked': mostLikedJD\r\n            };\r\n\r\n        const selectedDiscussions = discussionSets[option.value];\r\n        if (selectedDiscussions) {\r\n            if (activeTab === 0) {\r\n                setSortCD(selectedDiscussions);\r\n            } else {\r\n                setSortJD(selectedDiscussions);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const unreadNotifications = notifications?.filter(\r\n        (notification) => (notification.read === false)\r\n    )\r\n\r\n    const markAsRead = async (notificationId) => {\r\n        try {\r\n            await axios.put(`/api/read-forum-notification/${notificationId}`, { read: true });\r\n            // Update the state to reflect the change\r\n            setNotifications(notifications.map(notification =>\r\n                notification.id === notificationId ? { ...notification, read: true } : notification\r\n            ));\r\n        } catch (error) {\r\n            console.error('Error marking notification as read:', error);\r\n        }\r\n    };\r\n\r\n    const markAllAsRead = async () => {\r\n        try {\r\n            await axios.put('/api/read-all-forum-notifications', { read: true });\r\n            // Update the state to reflect the change\r\n            setNotifications(notifications.map(notification => ({ ...notification, read: true })));\r\n        } catch (error) {\r\n            console.error('Error marking all notifications as read:', error);\r\n        }\r\n    }\r\n\r\n    const deleteNotification = async (notificationId) => {\r\n        try {\r\n            await axios.delete(`/api/delete-forum-notification/${notificationId}`)\r\n            // Update the state to reflect the change\r\n            setNotifications(notifications.filter(notification => notification.id !== notificationId));\r\n        } catch (error) {\r\n            console.error('Error deleting notification:', error);\r\n        }\r\n    }\r\n\r\n    const deleteAllNotifications = async () => {\r\n        try {\r\n            await axios.delete('/api/delete-all-forum-notifications')\r\n            setNotifications([])\r\n        } catch (err) {\r\n            console.error('Error deleting all notifications', err)\r\n        }\r\n    }\r\n\r\n    const openContent = (tabIndex) => {\r\n        setActiveTab(tabIndex);\r\n    };\r\n\r\n    const openNotifList = (tabIndex) => {\r\n        setActiveNotifTab(tabIndex);\r\n    };\r\n\r\n\r\n    const createNewDiscussion = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!user) {\r\n            setLoginModalOpen(true)\r\n        }\r\n\r\n        // Basic validation\r\n        if (!categoryId || !title || !content) {\r\n            console.error('Category, title, and content are required.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Dispatch loader before making the API call\r\n            dispatch(Setloader(true));\r\n\r\n            // Make the API call\r\n            const response = await axios.post('/api/create/newdiscussion', {\r\n                forum_category_id: categoryId,\r\n                title: title,\r\n                content: content,\r\n                discussionTags: tags.map(tag => ({\r\n                    tag_id: tag.tag_id\r\n                }))\r\n            });\r\n\r\n            // Clear the form fields\r\n            setTitle('');\r\n            setCategoryId('');\r\n            setSelectedSubCategory('');\r\n            setContent('');\r\n            setTags([]);\r\n\r\n            // Redirect to the new discussion page\r\n            const discussionId = response.data.discussion_id;\r\n            window.location.href = `/forum/discussion/${discussionId}`;\r\n        } catch (error) {\r\n            // Handle errors and dispatch loader as false\r\n            console.error('Error adding the discussion:', error);\r\n            // Optionally, set an error state to display a message to the user\r\n        } finally {\r\n            // Ensure loader is hidden in both success and failure cases\r\n            dispatch(Setloader(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleCategorySelect = (id, name) => {\r\n        setCategoryId(id);\r\n        setSelectedSubCategory(name)\r\n        setSelectCategoryOpen(false);\r\n    }\r\n\r\n\r\n    const handleTagInputChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        setInputTags(inputValue);\r\n\r\n        if (inputValue.trim() !== '') {\r\n            // Create a set of tag IDs that are already selected\r\n            const selectedTagIds = new Set(tags.map(tag => tag.tag_id));\r\n\r\n            // Filter available tags based on the input and exclude already selected tags\r\n            setFilteredTags(\r\n                allTags\r\n                    .filter(tag =>\r\n                        tag.name.toLowerCase().includes(inputValue.toLowerCase()) &&\r\n                        !selectedTagIds.has(tag.id)\r\n                    )\r\n            );\r\n            setShowDropdownTags(true);\r\n        } else {\r\n            setFilteredTags([]);\r\n            setShowDropdownTags(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleTagClick = (id, name) => {\r\n        if (!tags.some(t => t.tag_id === id)) {\r\n            setTags([...tags, { tag_id: id, tag_name: name }]);\r\n            setInputTags(''); // Clear input after tag selection\r\n            setShowDropdownTags(false);\r\n        }\r\n    };\r\n\r\n    // Handle removing a tag\r\n    const handleRemoveTag = (tagToRemove) => {\r\n        setTags(tags.filter((tag) => tag.tag_id !== tagToRemove.tag_id));\r\n    };\r\n\r\n    const clearForm = (e) => {\r\n        e.preventDefault();\r\n        setTitle('')\r\n        setCategoryId('')\r\n        setSelectedSubCategory('')\r\n        setContent('')\r\n        setTags([])\r\n    }\r\n\r\n    const toggleSelectCategory = () => {\r\n        setSelectCategoryOpen(!selectCategoryOpen)\r\n    }\r\n\r\n    const toggleLoginModal = () => {\r\n        setLoginModalOpen((prevLoginModalOpen) => !prevLoginModalOpen)\r\n    }\r\n\r\n    const toggleNotifThreeDotsOptions = () => {\r\n        setNotifThreeDotsOptions(!notifThreeDotsOptions)\r\n    }\r\n\r\n    const handleCreatedDiscussions = () => {\r\n        navigate(`/forum/profile/${paramsUser?.id}/created_discussions`);\r\n        setActiveTab(0);\r\n    };\r\n    const handleJoinedDiscussions = () => {\r\n        navigate(`/forum/profile/${paramsUser?.id}/joined_discussions`);\r\n        setActiveTab(1);\r\n    };\r\n    const handleUserActivity = () => {\r\n        navigate(`/forum/profile/${paramsUser?.id}/user_activity`);\r\n        setActiveTab(2);\r\n    };\r\n    const handleForumNotifications = () => {\r\n        navigate(`/forum/profile/${paramsUser?.id}/notifications`);\r\n        setActiveTab(3);\r\n    };\r\n\r\n    const originalDate = user?.createdAt || '';\r\n    const formattedDate = new Date(originalDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long' });\r\n\r\n    return (\r\n        <>\r\n            {loginModalOpen && <LoginModal onClick={toggleLoginModal} />}\r\n            <div className='forum-page-container'>\r\n                <Header />\r\n                <div className=\"forum-profile-container\">\r\n                    <FilterNavigation\r\n                        paramsUserData={setParamsUser}\r\n                        createdDiscussionsTab={() => openContent(0)}\r\n                        joinedDiscussionsTab={() => openContent(1)}\r\n                        userActivityTab={() => openContent(2)}\r\n                        forumNotificationsTab={() => openContent(3)}\r\n                        addDiscussionsBtn={() => openContent(4)}\r\n                        discussionFilter={discussionFilter}\r\n                        createdDiscussionsData={setCreatedDiscussions}\r\n                        joinedDiscussionsData={setJoinedDiscussions}\r\n                        activitiesData={setActivities}\r\n                        sortOptions={filterDiscussionOptions}\r\n                        onOptionSelect={handleOptionSelect}\r\n                        notifications={notifications}\r\n                        className='profile-filter-navigation'\r\n                    />\r\n                    <div className='forum-profile-page-col2'>\r\n                        <div className='language-selector-container'>\r\n                            <GTranslate />\r\n                        </div>\r\n                        <div className='profile-page-search-box-container'>\r\n                            {activeTab !== 4 && <SearchDiscussionBox />}\r\n                        </div>\r\n                        <div className='smallscreennavmenu-container'>\r\n                            {activeTab !== 4 && <SmallScreenNavMenu />}\r\n                        </div>\r\n                        {activeTab !== 4 &&\r\n                            <div className='profile-info-and-tab'>\r\n                                <div className='profile-info-and-tab-row1'>\r\n                                    <img src={paramsUser?.profile_pic || DefaultAvatar} alt=\"\" className='forum-profile-pic' />\r\n                                    <div className='user-display-name'>\r\n                                        <p>{paramsUser?.display_name}</p>\r\n                                        <small>Joined in {formattedDate}</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='profile-info-and-tab-row2'>\r\n                                    <button onClick={handleCreatedDiscussions} className={activeTab === 0 && 'active'}>Created Discussions</button>\r\n                                    <button onClick={handleJoinedDiscussions} className={activeTab === 1 && 'active'}>Joined Discussions</button>\r\n                                    <button onClick={handleUserActivity} className={activeTab === 2 && 'active'}>Activities</button>\r\n                                    {paramsUser?.id === user?.id &&\r\n                                        <button onClick={handleForumNotifications} className={activeTab === 3 && 'active'} style={{ display: 'flex' }}>\r\n                                            Notifications  {totalUnreadNotifications > 0 && <div className='forum-notification-counter'>{totalUnreadNotifications}</div>}\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div className=\"discussions-container\">\r\n                            <div className=\"tab-content\" style={{ display: activeTab === 0 ? 'flex' : 'none' }}>\r\n                                <div className=\"forum-profile-tab-title\">\r\n                                    <h4>Created Discussions ({createdDiscussions?.length})</h4>\r\n                                    <div className='start-discussion-btn-container'>\r\n                                        <NewDiscussionBtn label='Start a discussion' />\r\n                                    </div>\r\n                                </div>\r\n                                {sortCD && sortCD.length > 0 ? (\r\n                                    <ProfileDiscussionCard\r\n                                        data={sortCD}\r\n                                    />\r\n                                ) : (\r\n                                    <ProfileDiscussionCard\r\n                                        data={createdDiscussions}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='tab-content' style={{ display: activeTab === 1 ? 'flex' : 'none' }}>\r\n                                <div className=\"forum-profile-tab-title\">\r\n                                    <h4>Joined Discussions ({joinedDiscussions?.length})</h4>\r\n                                    <div className='start-discussion-btn-container'>\r\n                                        <NewDiscussionBtn label='Start a discussion' />\r\n                                    </div>\r\n                                </div>\r\n                                {sortJD && sortJD.length > 0 ? (\r\n                                    <ForumDiscussionCard\r\n                                        data={sortJD}\r\n                                    />\r\n                                ) : (\r\n                                    <ForumDiscussionCard\r\n                                        data={joinedDiscussions}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='tab-content' style={{ display: activeTab === 2 ? 'flex' : 'none' }}>\r\n                                <div className='forum-profile-tab-title'>\r\n                                    <h4>Latest Activity</h4>\r\n                                    <div className='start-discussion-btn-container'>\r\n                                        <NewDiscussionBtn label='Start a discussion' />\r\n                                    </div>\r\n                                </div>\r\n                                {activities?.length === 0 ? (\r\n                                    <div className='no-activity'>{paramsUser?.display_name} don't have any activity</div>\r\n                                ) : (\r\n                                    <ul>\r\n                                        {activities?.map(activity => (\r\n                                            <li key={activity?.id}>\r\n                                                <div className='activity-container'>\r\n                                                    <div className=\"user-avatar\">\r\n                                                        <img src={activity?.SubjectUser?.profile_pic || DefaultAvatar} alt=\"\" />\r\n                                                    </div>\r\n                                                    <div className=\"activity-info\">\r\n                                                        <div><span dangerouslySetInnerHTML={{ __html: activity.message }} /></div>\r\n                                                        <div className=\"date\">{formatDistanceToNow(new Date(activity.createdAt), { addSuffix: true, locale: enUS })}</div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                            <div className='tab-content' style={{ display: activeTab === 3 ? 'flex' : 'none' }}>\r\n                                <div className='forum-profile-tab-title'>\r\n                                    <h4>Notifications</h4>\r\n                                    <div className='start-discussion-btn-container'>\r\n                                        <NewDiscussionBtn label='Start a discussion' />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"notifications-tab\">\r\n                                    <div className=\"notifications-tab-container\">\r\n                                        <button className={`all-notif-tab ${activeNotifTab === 0 ? 'active' : ''}`} onClick={() => openNotifList(0)}>ALL</button>\r\n                                        <button className={`unread-notif-tab ${activeNotifTab === 1 ? 'active' : ''}`} onClick={() => openNotifList(1)}>UNREAD</button>\r\n                                    </div>\r\n                                    <div className='dots-container' onClick={toggleNotifThreeDotsOptions}>\r\n                                        <div className='three-dots'>\r\n                                            <ThreeDots />\r\n                                        </div>\r\n                                        {notifThreeDotsOptions && (\r\n                                            <div className=\"three-dots-dropdown-options\" ref={dropDownNotif}>\r\n                                                <ul>\r\n                                                    <li onClick={markAllAsRead}>\r\n                                                        <span>Mark All as Read</span>\r\n                                                    </li>\r\n                                                    <li onClick={deleteAllNotifications}>\r\n                                                        <span>Clear All Notifications</span>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                {notifications.length === 0 ? (\r\n                                    <div style={{ display: activeNotifTab === 0 ? 'block' : 'none' }} className='no-notif'>You don't have any notifications</div>\r\n                                ) : (\r\n                                    <div style={{ display: activeNotifTab === 0 ? 'block' : 'none' }}>\r\n                                        <ul>\r\n                                            {notifications.map((notification) => (\r\n                                                <li key={notification.id}>\r\n                                                    <div className=\"delete-notif-btn\" onClick={() => deleteNotification(notification.id)}>\r\n                                                        <i class=\"fa fa-times\"></i>\r\n                                                    </div>\r\n                                                    <div className=\"notification-container\" onClick={() => markAsRead(notification.id)}>\r\n                                                        <div className=\"user-avatar\">\r\n                                                            <img src={notification.subject_User.profile_pic} alt=\"\" />\r\n                                                        </div>\r\n                                                        <div className='notification-info'>\r\n                                                            <div><span dangerouslySetInnerHTML={{ __html: notification.message }} /></div>\r\n                                                            <div className=\"date\">{formatDistanceToNow(new Date(notification.createdAt), { addSuffix: true, locale: enUS })}</div>\r\n                                                        </div>\r\n                                                        {!notification.read && (\r\n                                                            <div className=\"circle-container\">\r\n                                                                <div className=\"circle\"></div>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                        {/* Trigger for the next page */}\r\n                                        {hasMore && !loading && (\r\n                                            <div ref={lastElementRef} style={{ height: '20px', backgroundColor: 'transparent' }}></div>\r\n                                        )}\r\n                                        {loading && <div className='infinite-scroll-loading-spinner'><LoadingSpinner /></div>}\r\n                                        {!hasMore && <div className='no-more-data'>No more data to load</div>}\r\n                                    </div>\r\n                                )}\r\n                                {unreadNotifications.length === 0 ? (\r\n                                    <div className='no-notif' style={{ display: activeNotifTab === 1 ? 'block' : 'none' }}>You don't have unread notifications</div>\r\n                                ) : (\r\n                                    <div style={{ display: activeNotifTab === 1 ? 'block' : 'none' }}>\r\n                                        <ul>\r\n                                            {unreadNotifications.map((notification) => (\r\n                                                <li key={notification.id} >\r\n                                                    <div className=\"delete-notif-btn\" onClick={() => deleteNotification(notification.id)}>\r\n                                                        <i class=\"fa fa-times\"></i>\r\n                                                    </div>\r\n                                                    <div className=\"notification-container\" onClick={() => markAsRead(notification.id)}>\r\n                                                        <div className=\"user-avatar\">\r\n                                                            <img src={notification.subject_User.profile_pic} alt=\"\" />\r\n                                                        </div>\r\n                                                        <div className='notification-info'>\r\n                                                            <div><span dangerouslySetInnerHTML={{ __html: notification.message }} /></div>\r\n                                                            <div className=\"date\">{formatDistanceToNow(new Date(notification.createdAt), { addSuffix: true, locale: enUS })}</div>\r\n                                                        </div>\r\n                                                        {!notification.read && (\r\n                                                            <div className=\"circle-container\">\r\n                                                                <div className=\"circle\"></div>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className='tab-content' style={{ display: activeTab === 4 ? 'flex' : 'none' }}>\r\n                                <div className='ss-add-new-discussion-nav-btns'>\r\n                                    <CategoryMenuBtn />\r\n                                    <FilterTagButton label='Popular Tags' />\r\n                                </div>\r\n                                <div className='forum-profile-tab-title'>\r\n                                    <h4>Add New Discussions</h4>\r\n                                </div>\r\n                                <form className='add-discussion-form'>\r\n                                    <div className='add-discussion-form-field-container'>\r\n                                        <label htmlFor=\"\">Title</label>\r\n                                        <Input\r\n                                            className=\"discussion-title-box\"\r\n                                            placeholder='Type discussion title'\r\n                                            value={title}\r\n                                            onChange={(e) => setTitle(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='add-discussion-form-field-container'>\r\n                                        <label htmlFor=\"\">Category</label>\r\n                                        <div className=\"wrapper\" ref={dropDownCategory}>\r\n                                            <div className={`drop-down-arrow ${selectCategoryOpen && 'active'}`} onClick={toggleSelectCategory}></div>\r\n                                            <div className=\"drop-down-forum-category\">\r\n                                                <input type=\"text\" className=\"discussion-select-box\" placeholder='Select category' value={selectedSubCategory} readOnly />\r\n                                            </div>\r\n                                            {selectCategoryOpen &&\r\n                                                <div className=\"drop-down-forum-category-container\">\r\n                                                    <ul className='drop-down-forum-category-options'>\r\n                                                        {categories?.categories?.map(category => (\r\n                                                            <li className='forum-main-category' key={category.id}>\r\n                                                                <div className=\"parent-forum-category\">{category.name}</div>\r\n                                                                <ul className='forum-subcategory'>\r\n                                                                    {category.subcategories.map(subcategory => (\r\n                                                                        <li key={subcategory.id} onClick={() => handleCategorySelect(subcategory.id, subcategory.name)}>\r\n                                                                            <div className=\"first-level-forum-subcategory\">{subcategory.name}</div>\r\n                                                                        </li>\r\n                                                                    ))}\r\n                                                                </ul>\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='add-discussion-form-field-container'>\r\n                                        <label htmlFor=\"\">Message</label>\r\n                                        <QuillEditor\r\n                                            id='newDiscussion'\r\n                                            name='newDiscussion'\r\n                                            className='new-discussion-message'\r\n                                            value={content}\r\n                                            onChange={(e) => setContent(e)}\r\n                                            rows={5}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='add-discussion-form-field-container'>\r\n                                        <label htmlFor=\"\">Tags</label>\r\n                                        <div className=\"tags-input-container\" ref={dropDownTags}>\r\n                                            <ul className=\"tags-list\">\r\n                                                {tags.map((tag, index) => (\r\n                                                    <li key={index} className=\"tag\">\r\n                                                        {tag.tag_name}\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => handleRemoveTag(tag)}\r\n                                                            className=\"remove-tag-button\"\r\n                                                        >\r\n                                                            &times;\r\n                                                        </button>\r\n                                                    </li>\r\n                                                ))}\r\n                                                <li className='input-tags-container'>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={inputTags}\r\n                                                        onChange={handleTagInputChange}\r\n                                                        placeholder=\"Search or select tags\"\r\n                                                        className=\"tags-input\"\r\n                                                    />\r\n                                                </li>\r\n                                            </ul>\r\n                                            {showDropdownTags && filteredTags.length > 0 && (\r\n                                                <ul className=\"dropdown-list\">\r\n                                                    {filteredTags.map((tag, index) => (\r\n                                                        <li key={index} onClick={() => handleTagClick(tag.id, tag.name)}>\r\n                                                            {tag.name}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='add-discussion-button-container'>\r\n                                        <BtnGreen label='Post Discussion' onClick={createNewDiscussion} />\r\n                                        <BtnClear label='Clear' onClick={clearForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer className='forum-profile-footer' />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForumProfile;","import { setTags, setError } from '../reducer/forumTagsSlice';\r\nimport axios from '../../apicalls/axios';\r\n\r\n\r\n// Get Forum Tags\r\nexport const getAllForumTags = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('/api/fetchforumtags');\r\n    if (response.status === 200) {\r\n      const forumTagsData = response.data;\r\n      dispatch(setTags(forumTagsData));\r\n    } \r\n  } catch (error) {\r\n    console.error('Error fetching forum tags:', error);\r\n\r\n    // Handle the error and update the error state in the Redux store\r\n    dispatch(setError('Error fetching forum tags.'));\r\n  }\r\n};\r\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgThreeDots","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","id","d","ForwardRef","label","onClick","className","active","_jsx","concat","children","name","value","type","style","placeholder","onChange","onKeyDown","onKeyPress","onFocus","disabled","defaultValue","readOnly","_Fragment","isHtmlMode","setIsHtmlMode","useState","ReactQuill","theme","modules","toolbar","header","font","size","list","indent","menus","Array","fill","map","_","Skeleton","height","width","_categories$categorie","createdDiscussionsTab","joinedDiscussionsTab","userActivityTab","forumNotificationsTab","addDiscussionsBtn","discussionFilter","createdDiscussionsData","joinedDiscussionsData","activitiesData","paramsUserData","notifications","sortOptions","onOptionSelect","emptySortDiscussions","dispatch","useDispatch","authUser","useSelector","state","user","data","categories","forumcategories","tags","forumtags","userId","tab","useParams","userIdNumber","Number","authUserIdNumber","navigate","useNavigate","location","useLocation","showFilter","setShowFilter","activeCategory","setActiveCategory","selectedTags","setSelectedTags","isArray","filterTagModalOpen","setFilterTagModalOpen","setUser","totalCreatedDiscussions","setTotalCreatedDiscussions","totalJoinedDiscussions","setTotalJoinedDiscussions","totalUnreadNotifications","setTotalUnreadNotifications","loadingCategories","setLoadingCategories","loadingTags","setLoadingTags","loginModalOpen","setLoginModalOpen","useEffect","getForumCategories","getAllForumTags","async","response","axios","get","display_name","profile_pic","createdAt","error","console","log","fetchUserData","descendingCD","sort","a","b","Date","created_at","err","fetchCreatedDiscussions","descendingJD","fetchJoinedDiscussions","sortedActivities","fetchForumActivities","getTotalUnreadNotifications","handleCreatedDiscussions","handleJoinedDiscussions","handleUserActivity","handleForumNotifications","handleSelectedCategory","toggleLoginModal","prevLoginModalOpen","toggleTagModal","prev","originalDate","formattedDate","toLocaleDateString","year","month","_jsxs","LoginModal","FilterTagModal","tagsData","src","DefaultAvatar","alt","totalCount","Link","to","CustomSelect","display","flexWrap","gap","SideNavCategoriesSkeleton","category","NavLink","activeclassname","slice","tag","BtnCategory","toggleTag","tag_id","prevSelectedTags","updatedTags","includes","filter","t","justifyContent","clearAllTags","getFormattedDate","dateString","date","isNaN","getTime","formatDistanceToNow","addSuffix","locale","enUS","discussion","_discussion$discussio","_discussion$discussio2","_discussion$post","user_id","discussionStarter","discussion_id","post","_discussion$post$","dangerouslySetInnerHTML","__html","content","post_id","Like","likes","MsgIcon","totalReplies","EyeIcon","views","ForumProfile","allTags","paramsUser","setParamsUser","setNotifications","activities","setActivities","activeTab","setActiveTab","createdDiscussions","setCreatedDiscussions","joinedDiscussions","setJoinedDiscussions","setDiscussionFilter","selectCategoryOpen","setSelectCategoryOpen","selectedSubCategory","setSelectedSubCategory","setTags","inputTags","setInputTags","filteredTags","setFilteredTags","showDropdownTags","setShowDropdownTags","setTitle","setContent","categoryId","setCategoryId","activeNotifTab","setActiveNotifTab","notifThreeDotsOptions","setNotifThreeDotsOptions","page","setPage","limit","loading","setLoading","hasMore","setHasMore","observer","useRef","dropDownCategory","dropDownTags","dropDownNotif","sortCD","setSortCD","sortJD","setSortJD","filterDiscussionOptions","option","toLowerCase","getUser","handleGlobalClick","event","current","contains","closest","document","addEventListener","removeEventListener","newNotification","prevData","uniqueData","item","some","existingItem","fetchForumNotifications","sortDiscussionsByDate","sortDiscussionsByViews","viewsA","reduce","acc","sortDiscussionsByLikes","likesA","mostRecentCD","mostViewedCD","mostLikedCD","mostRecentJD","mostViewedJD","mostLikedJD","unreadNotifications","notification","read","markAsRead","put","notificationId","deleteNotification","delete","openContent","tabIndex","openNotifList","Header","FilterNavigation","selectedDiscussions","GTranslate","SearchDiscussionBox","SmallScreenNavMenu","NewDiscussionBtn","ProfileDiscussionCard","ForumDiscussionCard","activity","_activity$SubjectUser","SubjectUser","message","toggleNotifThreeDotsOptions","ThreeDots","class","subject_User","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","backgroundColor","LoadingSpinner","CategoryMenuBtn","FilterTagButton","htmlFor","Input","e","toggleSelectCategory","subcategories","subcategory","handleCategorySelect","QuillEditor","rows","index","tag_name","handleRemoveTag","tagToRemove","inputValue","trim","selectedTagIds","Set","has","handleTagClick","BtnGreen","preventDefault","Setloader","forum_category_id","discussionTags","discussionId","window","href","BtnClear","Footer","status","forumTagsData","setError"],"sourceRoot":""}