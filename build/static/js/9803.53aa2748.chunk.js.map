{"version":3,"file":"static/js/9803.53aa2748.chunk.js","mappings":"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","sources":["layouts/Footer/index.jsx","layouts/ManageAccountNav/index.jsx","pages/Settings/SetPassword.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './style.scss'\r\nimport Logo from '../../assets/images/yogeek-logo-white.png';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <footer>\r\n                <div className=\"container\">\r\n                    <div className='footer-row1'>\r\n                        <div className='footer-col1'>\r\n                            <Link to='/'>\r\n                                <img src={Logo} alt=\"\" />\r\n                            </Link>\r\n                            <p>Our Purpose Is To Sustainable Make The Pleasure and Benefits of Marketplace to the Many.</p>\r\n                        </div>\r\n                        <div className='footer-col2'>\r\n                            <h5>Company</h5>\r\n                            <ul>\r\n                                <li>About Us</li>\r\n                                <li>Delivery Information</li>\r\n                                <li>Terms & Conditions</li>\r\n                                <li>Customer Service</li>\r\n                                <li>Privacy Policy</li>\r\n                                <li>Return Policy</li>\r\n                                <li>Join Affiliate</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className='footer-col3'>\r\n                            <h5>Services</h5>\r\n                            <ul>\r\n                                <li>Payment</li>\r\n                                <li>Feedback</li>\r\n                                <li>Contact Us</li>\r\n                                <li>Our Services</li>\r\n                                <li>FAQ</li>\r\n                                <li>Sitemap</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className='footer-col4'>\r\n                            <h5>Useful Links</h5>\r\n                            <ul>\r\n                                <li><Link to={'/forum'}>Community</Link></li>\r\n                                <li>Blog Post</li>\r\n                                <li>Return Policy</li>\r\n                                <li>Join Affiliate</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='copyright'>\r\n                    <span>Copyright 2023 - Yogeek</span>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './style.scss'\r\nimport SmallScreenHeader from '../Header/SmallScreenHeader'\r\n\r\nconst ManageAccountNav = () => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"manage-account-nav-container\">\r\n        <div className='row1'>\r\n          <div className='nav-title'>Manage Account</div>\r\n          <div><NavLink activeClassName=\"active\" to='/editprofile'>Account Information</NavLink></div>\r\n          <div><NavLink activeClassName=\"active\" to='/notificationlist'>Notification List</NavLink></div>\r\n        </div>\r\n        <div className='row2'>\r\n          <div className='nav-title'>Settings</div>\r\n          <div><NavLink activeClassName=\"active\" to='/deactivateaccount'>Account</NavLink></div>\r\n          <div><NavLink activeClassName=\"active\" to='/setpassword'>Security</NavLink></div>\r\n        </div>\r\n        <div className='row3'>\r\n          <div className='nav-title'><NavLink to='/wishlist'>Wishlist & Favorites</NavLink></div>\r\n        </div>\r\n        <div className='row4'>\r\n          <NavLink to='/addlisting' className='nav-title'>Sell Now</NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageAccountNav\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from '../../apicalls/axios';\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport './style.scss'\r\nimport Header from '../../layouts/Header';\r\nimport Footer from '../../layouts/Footer';\r\nimport ManageAccountNav from '../../layouts/ManageAccountNav';\r\nimport BtnGreen from '../../components/Button/BtnGreen'\r\nimport AlertMessage from '../../components/AlertMessage';\r\n\r\nconst SetPassword = () => {\r\n\r\n    const PWD_REGEX = /^.{8,24}$/;\r\n\r\n    const [successAlert, setSuccessAlert] = useState(false);\r\n    const [errorAlert, setErrorAlert] = useState(false);\r\n    const [oldPassword, setOldPassword] = useState('');\r\n\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [alertMsg, setAlertMsg] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(newPassword);\r\n        console.log(result);\r\n        console.log(newPassword);\r\n        setValidPwd(result);\r\n        const match = newPassword === confirmPassword;\r\n        setValidMatch(match);\r\n    }, [oldPassword, newPassword, confirmPassword])\r\n\r\n\r\n    const handleChangePassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Make API request to change the password\r\n            const response = await axios.post('/api/change-password', {\r\n                oldPassword,\r\n                newPassword,\r\n            });\r\n\r\n            // Log the entire response for debugging\r\n            console.log('Server response:', response);\r\n\r\n            // Handle the response from the server\r\n            if (response.status === 200 && response.data.success) {\r\n\r\n                setAlertMsg('Password changed successfully!');\r\n                setSuccessAlert(true);\r\n                setOldPassword('')\r\n                setNewPassword('')\r\n                setConfirmPassword('')\r\n            }\r\n\r\n        } catch (error) {\r\n            // Log the catch error for debugging\r\n            console.error('Error in catch block:', error);\r\n\r\n            if (error.response?.status === 401) {\r\n                setAlertMsg('Old password is incorrect.');\r\n                setErrorAlert(true);\r\n            } else {\r\n                if (error.response?.status === 400) {\r\n                    setAlertMsg('New password is required.');\r\n                    setErrorAlert(true);\r\n                } else {\r\n                    // Show an alert for the catch error\r\n                    setAlertMsg('An error occurred while changing the password.');\r\n                    setErrorAlert(true);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const openManageAccountNav = () => {\r\n        window.location.href = '/manage-account'\r\n    }\r\n\r\n    return (\r\n        <>{successAlert && <AlertMessage type='success' message={alertMsg} />}\r\n            {errorAlert && <AlertMessage type='error' message={alertMsg} />}\r\n            <Header />\r\n            <div className=\"set-password-body\">\r\n                <div className=\"container\">\r\n                    <h3>Settings</h3>\r\n                    <div className=\"box\">\r\n                        <div className=\"col-left\"><ManageAccountNav /></div>\r\n                        <div className=\"col-right\">\r\n                            <form className='set-password-form' onSubmit={handleChangePassword}>\r\n                                <div className='label-btn'>\r\n                                    <div className=\"back-arrow\" onClick={openManageAccountNav}></div>\r\n                                    <span>SET PASSWORD</span>\r\n                                </div>\r\n                                <hr />\r\n                                <div className='form-field'>\r\n                                    <label>Old Password <span className='asterisk'>*</span></label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"password-input-field\"\r\n                                        value={oldPassword}\r\n                                        onChange={(e) => setOldPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className='form-field'>\r\n                                    <label htmlFor=\"password\">\r\n                                        New Password <span className='asterisk'>*</span>\r\n                                        <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                                        <FontAwesomeIcon icon={faTimes} className={validPwd || !newPassword ? \"hide\" : \"invalid\"} />\r\n                                    </label>\r\n                                    <div style={{ width: \"100%\", maxWidth: \"557px\" }}>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            onChange={(e) => {\r\n                                                setNewPassword(e.target.value);\r\n                                            }}\r\n                                            value={newPassword}\r\n                                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                                            aria-describedby=\"pwdnote\"\r\n                                            onFocus={() => setPwdFocus(true)}\r\n                                            onBlur={() => setPwdFocus(false)}\r\n                                            className=\"password-input-field\"\r\n                                        />\r\n                                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                                            <span> Must be 8 to 24 characters.</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='form-field'>\r\n                                    <label htmlFor=\"confirm_pwd\">\r\n                                        Confirm Password <span className='asterisk'>*</span>\r\n                                        <FontAwesomeIcon icon={faCheck} className={validMatch && confirmPassword ? \"valid\" : \"hide\"} />\r\n                                        <FontAwesomeIcon icon={faTimes} className={validMatch || !confirmPassword ? \"hide\" : \"invalid\"} />\r\n                                    </label>\r\n                                    <div style={{ width: \"100%\", maxWidth: \"557px\" }}>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"confirm_pwd\"\r\n                                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                            value={confirmPassword}\r\n\r\n                                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                                            aria-describedby=\"confirmnote\"\r\n                                            onFocus={() => setMatchFocus(true)}\r\n                                            onBlur={() => setMatchFocus(false)}\r\n                                            className=\"password-input-field\"\r\n                                        />\r\n                                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                                            <span> Must match the first password input field.</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div><BtnGreen label=\"Save Changes\" onClick={() => { setSuccessAlert(false); setErrorAlert(false); }} disabled={!validPwd || !validMatch} className='save-password' /></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SetPassword;"],"names":["Footer","_jsx","_Fragment","children","_jsxs","className","Link","to","src","alt","ManageAccountNav","NavLink","activeClassName","SetPassword","PWD_REGEX","successAlert","setSuccessAlert","useState","errorAlert","setErrorAlert","oldPassword","setOldPassword","newPassword","setNewPassword","validPwd","setValidPwd","pwdFocus","setPwdFocus","confirmPassword","setConfirmPassword","validMatch","setValidMatch","matchFocus","setMatchFocus","alertMsg","setAlertMsg","useEffect","result","test","console","log","AlertMessage","type","message","Header","onSubmit","async","e","preventDefault","response","axios","post","status","data","success","error","_error$response","_error$response2","onClick","openManageAccountNav","window","location","href","value","onChange","target","htmlFor","FontAwesomeIcon","icon","faCheck","faTimes","style","width","maxWidth","id","name","onFocus","onBlur","faInfoCircle","BtnGreen","label","disabled"],"sourceRoot":""}