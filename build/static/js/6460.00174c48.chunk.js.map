{"version":3,"file":"static/js/6460.00174c48.chunk.js","mappings":"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","sources":["assets/images/magnifying-glass.svg","components/Button/BtnClear.jsx","components/Button/BtnGreen.jsx","components/ResponsiveManageAccountNav/index.jsx","hooks/authHook.js","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMagnifyingGlass(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 75 75\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.6021 47.1698H50.2144L49.0137 46.012C53.2161 41.1235 55.7461 34.777 55.7461 27.8731C55.7461 12.4786 43.2676 0 27.8731 0C12.4786 0 0 12.4786 0 27.8731C0 43.2676 12.4786 55.7461 27.8731 55.7461C34.777 55.7461 41.1235 53.2161 46.012 49.0137L47.1698 50.2144V53.6021L68.6106 75L75 68.6106L53.6021 47.1698ZM27.8731 47.1698C17.1955 47.1698 8.57633 38.5506 8.57633 27.8731C8.57633 17.1955 17.1955 8.57633 27.8731 8.57633C38.5506 8.57633 47.1698 17.1955 47.1698 27.8731C47.1698 38.5506 38.5506 47.1698 27.8731 47.1698Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMagnifyingGlass);\nexport default __webpack_public_path__ + \"static/media/magnifying-glass.74c349b806aa1f8099a3029100d6b969.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport './Button.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst BtnClear = ({ to, label, onClick, className, disabled, type }) => {\r\n\r\n  // If `to` is defined, render a Link component; otherwise, render a regular button\r\n  if (to) {\r\n    return (\r\n      <Link to={to} className={`clear-button ${className}`}>\r\n        {label}\r\n      </Link>\r\n    );\r\n  } else {\r\n  return (\r\n    <button type={type} to={to} className={`clear-button ${className}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n  }\r\n};\r\n\r\nexport default BtnClear;","import React from 'react';\r\nimport './Button.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BtnGreen = ({ to, label, onClick, className, disabled }) => {\r\n\r\n   // Determine the button class based on whether it is disabled or not\r\n   const buttonClass = `green-button ${className} ${disabled ? 'disabled-button' : ''}`;\r\n\r\n  // If `to` is defined, render a Link component; otherwise, render a regular button\r\n  if (to) {\r\n    return (\r\n      <Link to={to} className={buttonClass}>\r\n        {label}\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <button to={to} className={buttonClass} onClick={onClick} disabled={disabled}>\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n  };\r\n\r\n  export default BtnGreen;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './style.scss'\r\nimport SmallScreenHeader from '../../layouts/Header/SmallScreenHeader'\r\n\r\nconst ResponsiveManageAccountNav = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"manage-account-container-small-screen\">\r\n                <div className=\"mac-row1\">\r\n                    <SmallScreenHeader />\r\n                </div>\r\n                <div className=\"mac-row2\">\r\n                    <h5>MANAGE ACCOUNT</h5>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink to='/editprofile'>Account Information</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to='/notificationlist'>Notification List</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <h5>SETTINGS</h5>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink to='/deactivateaccount'>Account</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to='/setpassword'>Security</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <NavLink to='/wishlist'><h5>MY WISHLIST</h5></NavLink>\r\n                    <NavLink to='/addlisting'><h5>SELL</h5></NavLink>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResponsiveManageAccountNav\r\n","import { useState, useEffect, useMemo } from 'react';\r\nimport { GetCurrentUser } from '../apicalls/users';\r\n\r\nconst useAuthentication = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await GetCurrentUser();\r\n                setUser(response.data.user);\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error);\r\n            }\r\n        };\r\n\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    // Memoize user to maintain a stable reference\r\n    const memoizedUser = useMemo(() => user, [user]);\r\n\r\n    return { user: memoizedUser };\r\n};\r\n\r\nexport default useAuthentication;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgMagnifyingGlass","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","id","d","ForwardRef","to","label","onClick","className","disabled","type","_jsx","Link","concat","children","buttonClass","ResponsiveManageAccountNav","_Fragment","_jsxs","SmallScreenHeader","NavLink","useAuthentication","user","setUser","useState","useEffect","async","response","GetCurrentUser","data","error","console","fetchUserData","useMemo","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","_ref2","count","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","value","entries","styleOptions","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el"],"sourceRoot":""}