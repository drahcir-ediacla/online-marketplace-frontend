{"version":3,"file":"static/js/3079.5e9d8a6d.chunk.js","mappings":"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","sources":["components/Button/FilterBy.jsx","components/Cards/ProductCard.jsx","components/FormField/Input.jsx","components/FormField/RadioButton.jsx","pages/SearchResult/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nconst FilterBy = ({onClick, className, label, arrowStyle}) => {\r\n  return (\r\n    <>\r\n        <button className={`custom-filterby-button ${className}`} onClick={onClick}>\r\n            <span>{label}</span><div className='filterby-arrow-down' style={arrowStyle}></div>\r\n        </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FilterBy\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\nimport { Link } from 'react-router-dom'\r\nimport './style.scss'\r\nimport { ReactComponent as ClockIcon } from '../../assets/images/clock-regular.svg'\r\nimport { ReactComponent as HeartRegular } from '../../assets/images/heart-regular.svg';\r\nimport { ReactComponent as HeartSolid } from '../../assets/images/heart-solid.svg';\r\nimport NoImage from '../../assets/images/no-image-available.png'\r\n\r\nconst ProductCard = ({ data, addToWishlist, removeFromWishlist, userId, wishlistCount, setWishlistCount, getWishlistCount }) => {\r\n\r\n\r\n  const [productStates, setProductStates] = useState({});\r\n  const [showSignInMessage, setShowSignInMessage] = useState({});\r\n  const signInRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Function to handle clicks outside the add-wishlist-sign-in element\r\n    const handleClickOutside = (event) => {\r\n      if (signInRef.current && !signInRef.current.contains(event.target) && !event.target.classList.contains('heart-icon')) {\r\n        // Hide the sign-in message for all products when clicked outside\r\n        setShowSignInMessage({});\r\n      }\r\n    };\r\n\r\n    // Add event listener to detect clicks on the document\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    // Cleanup: Remove event listener when component unmounts\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n\r\n  // Initialize productStates based on initial wishlist data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // ... (fetching data logic)\r\n\r\n        // Set productStates after fetching data\r\n        const initialProductStates = {};\r\n        data.forEach((product) => {\r\n          const isProductInWishlist = Array.isArray(product.wishlist) && product.wishlist.some((entry) => String(entry.user_id) === String(userId));\r\n          initialProductStates[product.id] = isProductInWishlist;\r\n        });\r\n\r\n        setProductStates(initialProductStates);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [data, userId]);\r\n\r\n\r\n\r\n  // Check if data is null or undefined or not an array\r\n  if (!data || !Array.isArray(data) || data.length === 0) {\r\n    return null; // or return some default content or loading indicator\r\n  }\r\n\r\n  // Function to format price with commas and decimals\r\n  const formatPrice = (price) => {\r\n    const formattedPrice = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'PHP', // Change to your desired currency code\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(price);\r\n\r\n    return formattedPrice.replace(/\\.00$/, ''); // Remove '.00' if the fractional part is zero\r\n  };\r\n\r\n  // Function to limit the number of characters\r\n  const limitCharacters = (text, maxLength) => {\r\n    if (!text) {\r\n      return ''; // or return some default value\r\n    }\r\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {data.map((product, index) => {\r\n\r\n        // Ensure product.createdAt is a valid date before using it\r\n        const createdAtDate = new Date(product.createdAt);\r\n        if (isNaN(createdAtDate.getTime())) {\r\n          console.error('Invalid date value:', product.createdAt);\r\n          return null; // or handle the invalid date value in some way\r\n        }\r\n\r\n        const handleWishlistClick = async (productId) => {\r\n          try {\r\n            const isAdded = productStates[productId] || false;\r\n\r\n            if (!userId) { // If user is not authenticated\r\n              setShowSignInMessage(prevState => ({\r\n                ...prevState,\r\n                [productId]: !prevState[productId], // Toggle the sign-in message for this specific product\r\n              }));\r\n              return; // Exit the function without adding/removing from wishlist\r\n            }\r\n\r\n            if (isAdded) {\r\n              await removeFromWishlist(productId);\r\n            } else {\r\n              await addToWishlist(productId);\r\n            }\r\n\r\n            // Update the local state immediately after the action is dispatched\r\n            setProductStates((prevStates) => ({\r\n              ...prevStates,\r\n              [productId]: !prevStates[productId],\r\n            }));\r\n\r\n\r\n\r\n            // Update wishlist count for all products after state changes\r\n            const updatedWishlistCounts = {};\r\n            data.forEach((prod) => {\r\n              updatedWishlistCounts[prod.id] = getWishlistCount(prod.id);\r\n            });\r\n\r\n            // Set the updated wishlist counts\r\n            setWishlistCount(updatedWishlistCounts);\r\n            // Force re-render by updating state with a dummy value\r\n\r\n          } catch (error) {\r\n            console.error('Error updating wishlist:', error);\r\n          }\r\n        };\r\n\r\n        return (\r\n          <div key={index} className=\"thumbnail-container\">\r\n            <Link to={`/productdetails/${product.id}/${encodeURIComponent(product.product_name)}`} >\r\n              <div className='image-holder'>\r\n                {product.images && product.images[0] && (\r\n                  <img src={product.images[0].image_url || NoImage} alt={`Product ${index}`} className='product-img' />\r\n                )}\r\n                {!product.images && (\r\n                  <img src={NoImage} alt={`No Images Available`} className='product-img' />\r\n                )}\r\n              </div>\r\n            </Link>\r\n            <div className='product-info'>\r\n              <Link to={`/productdetails/${product.id}/${encodeURIComponent(product.product_name)}`} className='product-name'><p>{limitCharacters(product.product_name, 55)}</p></Link>\r\n              {product.seller && (\r\n                <small>{product.seller.city || ''}, {limitCharacters(product.seller.region, 15) || ''}</small>\r\n              )}\r\n              <div className=\"date-post\">\r\n                <div className=\"small-clock\"><ClockIcon /></div>\r\n                <small>{formatDistanceToNow(new Date(product.createdAt), { addSuffix: true, locale: enUS })}</small>\r\n              </div>\r\n            </div>\r\n            <div className='prod-condition-price'>\r\n              <div className='col-price'>\r\n                <small>{product.product_condition}</small>\r\n                <div className=\"price\">{formatPrice(product.price)}</div>\r\n              </div>\r\n              <div className='col-wishlist'>\r\n                {showSignInMessage[product.id] && !userId && (\r\n                  <div ref={signInRef} className='add-wishlist-sign-in'>\r\n                    <h6>You like this item?</h6>\r\n                    <p>Sign in to add this item to your wishlist</p>\r\n                    <Link to={'/loginemail'}>Sign in</Link>\r\n                  </div>\r\n                )}\r\n                <div className='wishlist-counter'>{wishlistCount[product.id] || ''}</div>\r\n                <button onClick={() => handleWishlistClick(product.id)} className='heart-icon'>\r\n                  {productStates[product.id] ? <HeartSolid /> : <HeartRegular />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react'\r\nimport './style.css'\r\n\r\nconst Input = ({ id, name, value, type, ref, className, style, placeholder, onChange, onKeyDown, onKeyPress, onFocus, disabled, defaultValue, readOnly }) => {\r\n  return (\r\n    <>\r\n      <input \r\n      type={type} \r\n      id={id} \r\n      name={name} \r\n      value={value} \r\n      ref={ref} \r\n      onChange={onChange} \r\n      onKeyDown={onKeyDown} \r\n      onKeyPress={onKeyPress} \r\n      onFocus={onFocus} \r\n      disabled={disabled} \r\n      defaultValue={defaultValue} \r\n      readOnly={readOnly} \r\n      className={`custom-input ${className}`} \r\n      style={style}\r\n      placeholder={placeholder} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport './style.css'\r\n\r\nfunction RadioButton(props) {\r\n\r\n    const { id, name, value, label, checked, className, onChange, onClick } = props;\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor={id} className=\"radio-container\">{label}\r\n                <input\r\n                    type=\"radio\"\r\n                    id={id}\r\n                    name={name}\r\n                    value={value}\r\n                    checked={checked}\r\n                    className={className}\r\n                    onChange={onChange}\r\n                    onClick={onClick}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioButton\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss'\r\nimport axios from '../../apicalls/axios'\r\nimport { AddWishlist, RemoveWishlist } from '../../apicalls/products';\r\nimport Header from '../../layouts/Header'\r\nimport Footer from '../../layouts/Footer'\r\nimport SearchResultFilter from '../../components/ProductFilter/SearchResultFilter'\r\nimport ProductCard from '../../components/Cards/ProductCard'\r\nimport FilterBy from '../../components/Button/FilterBy'\r\nimport CheckBox from '../../components/FormField/CheckBox/CheckBox'\r\nimport Input from '../../components/FormField/Input'\r\nimport BtnClear from '../../components/Button/BtnClear'\r\nimport BtnGreen from '../../components/Button/BtnGreen'\r\nimport RadioButton from '../../components/FormField/RadioButton'\r\n\r\nconst SearchResult = () => {\r\n\r\n  const location = useLocation();\r\n  const containerRef = useRef(null);\r\n  const user = useSelector((state) => state.user.data);\r\n\r\n  const searchTerm = new URLSearchParams(location.search).get('keyword');\r\n  const searchFilterLocation = new URLSearchParams(location.search).get('location');\r\n  const latitude = new URLSearchParams(location.search).get('latitude');\r\n  const longitude = new URLSearchParams(location.search).get('longitude');\r\n  const radius = new URLSearchParams(location.search).get('radius');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [totalProducts, setTotalProducts] = useState(null)\r\n  const [limit] = useState(30);\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeFilter, setActiveFilter] = useState(null);\r\n  const [filtersApplied, setFiltersApplied] = useState(false);\r\n  const [sortBy, setSortBy] = useState('Most Recent');\r\n  const [filters, setFilters] = useState({\r\n    condition: [],\r\n    sort: '',\r\n  });\r\n\r\n  const [filterPrice, setFilterPrice] = useState({\r\n    minPrice: '',\r\n    maxPrice: '',\r\n  })\r\n  const [products, setProducts] = useState([]);\r\n\r\n  // const [productStates, setProductStates] = useState({});\r\n  const [wishlistCount, setWishlistCount] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    // Reset filters when the category changes\r\n    setFilters({\r\n      condition: [],\r\n      sort: '',\r\n    });\r\n    setFilterPrice({\r\n      minPrice: '',\r\n      maxPrice: '',\r\n    });\r\n    setFiltersApplied(false);\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (containerRef.current && !containerRef.current.contains(event.target)) {\r\n        setActiveFilter(null);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  // Perform API call with the selected filters and sorting option\r\n  const fetchSearchResults = async (page = 1) => {\r\n    try {\r\n      const params = {\r\n        ...filters,\r\n        ...filterPrice,\r\n        keyword: searchTerm,\r\n        location: searchFilterLocation,\r\n        sort: filters.sort,\r\n        latitude: searchFilterLocation === 'Listings Nearby' ? latitude : undefined,\r\n        longitude: searchFilterLocation === 'Listings Nearby' ? longitude : undefined,\r\n        radius: searchFilterLocation === 'Listings Nearby' ? radius : undefined,\r\n        page,\r\n        limit,\r\n      };\r\n\r\n      const response = await axios.get(`/api/search`, { params });\r\n\r\n      setProducts(response.data.products);\r\n      setTotalProducts(response.data.totalProducts);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {\r\n      console.error('Error fetching search results:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSearchResults(currentPage);\r\n  }, [currentPage, location.search, searchTerm, searchFilterLocation, filters, filtersApplied]);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page);\r\n    }\r\n  };\r\n\r\n\r\n  const toggleFilterVisibility = (filter) => {\r\n    setActiveFilter(activeFilter === filter ? null : filter);\r\n  };\r\n\r\n\r\n  const handleSortByChange = (event) => {\r\n    const selectedSortBy = event.target.value;\r\n    setSortBy(selectedSortBy); // Update the local state\r\n    setFilters((prevFilters) => ({ ...prevFilters, sort: selectedSortBy }));\r\n  };\r\n\r\n\r\n  const handleFilterChange = (event) => {\r\n    const { name, value, checked } = event.target;\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      [name]: name === 'condition'\r\n        ? checked\r\n          ? [...prevFilters.condition, value] // Add the value to the array if checked\r\n          : prevFilters.condition.filter((condition) => condition !== value) // Remove the value if unchecked\r\n        : value,\r\n    }));\r\n  };\r\n\r\n\r\n  const handlePriceChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFilterPrice((prevFilters) => ({ ...prevFilters, [name]: value }));\r\n  };\r\n\r\n\r\n  const applyFilters = () => {\r\n    setFiltersApplied(true);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilterPrice({\r\n      minPrice: '',\r\n      maxPrice: '',\r\n    });\r\n\r\n    setFiltersApplied(false);\r\n\r\n    // Reset the input fields\r\n    const minPriceInput = document.querySelector('input[name=\"minPrice\"]');\r\n    const maxPriceInput = document.querySelector('input[name=\"maxPrice\"]');\r\n\r\n    if (minPriceInput && maxPriceInput) {\r\n      minPriceInput.value = '';\r\n      maxPriceInput.value = '';\r\n    }\r\n  };\r\n\r\n\r\n  const handleEnterKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      applyFilters();\r\n    }\r\n  };\r\n\r\n\r\n  // Add and remove wishlist function\r\n  const addToWishlist = async (productId) => {\r\n    try {\r\n      const response = await AddWishlist(productId, {});\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error adding item to wishlist:', error);\r\n    }\r\n  };\r\n\r\n  const removeFromWishlist = async (productId) => {\r\n    try {\r\n      const response = await RemoveWishlist(productId, {});\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error removing item from wishlist:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Use useCallback to memoize the function\r\n  const getWishlistCount = useCallback((productId) => {\r\n    const productData = products.find((product) => product.id === productId);\r\n    return productData ? (productData.wishlist ? productData.wishlist.length : 0) : 0;\r\n  }, [products]);\r\n\r\n  // Use useEffect to update wishlist count after state changes\r\n  useEffect(() => {\r\n    // Update wishlist count for all products\r\n    const updatedWishlistCounts = {};\r\n    products.forEach((product) => {\r\n      updatedWishlistCounts[product.id] = getWishlistCount(product.id);\r\n    });\r\n\r\n    // Set the updated wishlist counts\r\n    setWishlistCount(updatedWishlistCounts);\r\n\r\n    console.log('Wishlist count updated:', updatedWishlistCounts);\r\n  }, [products, getWishlistCount]);\r\n\r\n\r\n\r\n  // Initialize productStates based on initial wishlist data\r\n  // useEffect(() => {\r\n  //   const initialProductStates = {};\r\n  //   products.forEach((product) => {\r\n  //     const isProductInWishlist = Array.isArray(product.wishlist) && product.wishlist.some((entry) => String(entry.user_id) === String(userId));\r\n  //     initialProductStates[product.id] = isProductInWishlist;\r\n  //   });\r\n  //   console.log('Initial Product States:', initialProductStates);\r\n  //   setProductStates(initialProductStates);\r\n  // }, [products, userId]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='container'>\r\n        <div className='search-result-body'>\r\n          <div className=\"row2 search-result-banner\">Your ADS Here</div>\r\n          <div className=\"row3 search-result-newly-listed\">\r\n            <div className=\"search-result-newly-listed-row1\">\r\n              <div className='product-section-title'>\r\n                <h4>Search Results for \"{searchTerm}\" in {searchFilterLocation}</h4>\r\n                <h5>Total Results: {totalProducts}</h5>\r\n              </div>\r\n            </div>\r\n            <div className='search-result-newly-listed-row2'>\r\n              <div className='prod-filter-container' ref={containerRef}>\r\n                <div className='group-filterby'>\r\n                  <div className='filter-sortby'>\r\n                    <FilterBy\r\n                      label='Sort By'\r\n                      arrowStyle={activeFilter === 'sortByFilter' ? { transform: 'rotate(-180deg)', transition: '0.5s ease' } : { transform: 'none', transition: '0.5s ease' }}\r\n                      onClick={() => toggleFilterVisibility('sortByFilter')} />\r\n                    {activeFilter === 'sortByFilter' && (\r\n                      <ul className='filter-sortby-options'>\r\n                        <li>\r\n                          <RadioButton\r\n                            id=\"mostRecent\"\r\n                            name=\"sort\"\r\n                            value=\"recent\"\r\n                            label=\"Most Recent\"\r\n                            checked={sortBy === 'Most Recent' || filters.sort.includes('recent')}\r\n                            onChange={handleSortByChange}\r\n                          />\r\n                        </li>\r\n                        <li>\r\n                          <RadioButton\r\n                            id=\"priceHighToLow\"\r\n                            name=\"sort\"\r\n                            value=\"highToLow\"\r\n                            label=\"Price - High to Low\"\r\n                            checked={sortBy === 'Price - High to Low' || filters.sort.includes('highToLow')}\r\n                            onChange={handleSortByChange}\r\n                          />\r\n                        </li>\r\n                        <li>\r\n                          <RadioButton\r\n                            id=\"priceLowtoHigh\"\r\n                            name=\"sort\"\r\n                            value=\"lowToHigh\"\r\n                            label=\"Price - Low to High\"\r\n                            checked={sortBy === 'Price - Low to High' || filters.sort.includes('lowToHigh')}\r\n                            onChange={handleSortByChange}\r\n                          />\r\n                        </li>\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                  <div className='filter-condition'>\r\n                    <FilterBy\r\n                      label='Condition'\r\n                      arrowStyle={activeFilter === 'condition' ? { transform: 'rotate(-180deg)', transition: '0.5s ease' } : { transform: 'none', transition: '0.5s ease' }}\r\n                      onClick={() => toggleFilterVisibility('condition')} />\r\n                    {activeFilter === 'condition' && (\r\n                      <ul className='filter-condition-options'>\r\n                        <li>\r\n                          <CheckBox\r\n                            name='condition'\r\n                            label='Brand New'\r\n                            value='Brand New'\r\n                            checked={filters.condition.includes('Brand New')}\r\n                            onChange={handleFilterChange}\r\n                          />\r\n                        </li>\r\n                        <li>\r\n                          <CheckBox\r\n                            name='condition'\r\n                            label='Like New'\r\n                            value='Like New'\r\n                            checked={filters.condition.includes('Like New')}\r\n                            onChange={handleFilterChange}\r\n                          />\r\n                        </li>\r\n                        <li>\r\n                          <CheckBox\r\n                            name='condition'\r\n                            label='Lightly Used'\r\n                            value='Lightly Used'\r\n                            checked={filters.condition.includes('Lightly Used')}\r\n                            onChange={handleFilterChange}\r\n                          />\r\n                        </li>\r\n                        <li>\r\n                          <CheckBox\r\n                            name='condition'\r\n                            label='Well Used'\r\n                            value='Well Used'\r\n                            checked={filters.condition.includes('Well Used')}\r\n                            onChange={handleFilterChange}\r\n                          />\r\n                        </li>\r\n                        <li>\r\n                          <CheckBox\r\n                            name='condition'\r\n                            label='Heavily Used'\r\n                            value='Heavily Used'\r\n                            checked={filters.condition.includes('Heavily Used')}\r\n                            onChange={handleFilterChange}\r\n                          />\r\n                        </li>\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                  <div className='filter-deal-option'>\r\n                    <FilterBy\r\n                      label='Deal Option'\r\n                      arrowStyle={activeFilter === 'dealOption' ? { transform: 'rotate(-180deg)', transition: '0.5s ease' } : { transform: 'none', transition: '0.5s ease' }}\r\n                      onClick={() => toggleFilterVisibility('dealOption')} />\r\n                    {activeFilter === 'dealOption' && (\r\n                      <ul className='filter-deal-options'>\r\n                        <li><CheckBox label='Meet Up' value='Meet Up' /></li>\r\n                        <li><CheckBox label='Mailing and Delivery' value='Mailing and Delivery' /></li>\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                  <div className='filter-price'>\r\n                    <FilterBy\r\n                      label='Price'\r\n                      arrowStyle={activeFilter === 'priceFilter' ? { transform: 'rotate(-180deg)', transition: '0.5s ease' } : { transform: 'none', transition: '0.5s ease' }}\r\n                      onClick={() => toggleFilterVisibility('priceFilter')} />\r\n                    {activeFilter === 'priceFilter' && (\r\n                      <div className='filter-price-input'>\r\n                        <p>Show item price from</p>\r\n                        <div className='filter-price-row1'>\r\n                          <div className='input-price-filter-container'>\r\n                            <span className='php-symbol'>₱</span>\r\n                            <Input\r\n                              type='number'\r\n                              name=\"minPrice\"\r\n                              value={filterPrice.minPrice}\r\n                              onChange={handlePriceChange}\r\n                              onKeyPress={handleEnterKeyPress}\r\n                              className='input-price-filter'\r\n                              placeholder='Minimum'\r\n                            />\r\n                          </div>\r\n                          -\r\n                          <div className='input-price-filter-container'>\r\n                            <span className='php-symbol'>₱</span>\r\n                            <Input\r\n                              type='number'\r\n                              name=\"maxPrice\"\r\n                              value={filterPrice.maxPrice}\r\n                              onChange={handlePriceChange}\r\n                              onKeyPress={handleEnterKeyPress}\r\n                              className='input-price-filter'\r\n                              placeholder='Maximum'\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className='filter-price-row2'>\r\n                          <BtnClear label='Reset' onClick={resetFilters} />\r\n                          <BtnGreen label='Apply' onClick={applyFilters} className='apply-price-range' />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='search-result-newly-listed-row3'>\r\n              <ProductCard\r\n                data={products || []}\r\n                addToWishlist={addToWishlist}\r\n                removeFromWishlist={removeFromWishlist}\r\n                userId={user?.id}\r\n                wishlistCount={wishlistCount}\r\n                setWishlistCount={setWishlistCount}\r\n                getWishlistCount={getWishlistCount}\r\n              />\r\n            </div>\r\n            {totalProducts > 30 &&\r\n              <div className=\"pagination\">\r\n                <li className='page-item'>\r\n                  <button\r\n                    onClick={() => handlePageChange(currentPage - 1)}\r\n                    disabled={currentPage === 1}\r\n                    className='page-link'\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </li>\r\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\r\n                  <li key={page} className='page-item'>\r\n                    <button\r\n                      onClick={() => handlePageChange(page)}\r\n                      className={page === currentPage ? 'active page-link' : 'page-link'}\r\n                    >\r\n                      {page}\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n                <li className='page-item'>\r\n                  <button\r\n                    onClick={() => handlePageChange(currentPage + 1)}\r\n                    disabled={currentPage === totalPages}\r\n                    className='page-link'\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </li>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchResult"],"names":["_ref","onClick","className","label","arrowStyle","_jsx","_Fragment","children","_jsxs","concat","style","data","addToWishlist","removeFromWishlist","userId","wishlistCount","setWishlistCount","getWishlistCount","productStates","setProductStates","useState","showSignInMessage","setShowSignInMessage","signInRef","useRef","useEffect","handleClickOutside","event","current","contains","target","classList","document","addEventListener","removeEventListener","async","initialProductStates","forEach","product","isProductInWishlist","Array","isArray","wishlist","some","entry","String","user_id","id","error","console","fetchData","length","limitCharacters","text","maxLength","substring","map","index","createdAtDate","Date","createdAt","isNaN","getTime","Link","to","encodeURIComponent","product_name","images","src","image_url","NoImage","alt","seller","city","region","ClockIcon","formatDistanceToNow","addSuffix","locale","enUS","product_condition","price","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","replace","ref","isAdded","productId","prevState","prevStates","updatedWishlistCounts","prod","handleWishlistClick","HeartSolid","HeartRegular","name","value","type","placeholder","onChange","onKeyDown","onKeyPress","onFocus","disabled","defaultValue","readOnly","props","checked","htmlFor","SearchResult","location","useLocation","containerRef","user","useSelector","state","searchTerm","URLSearchParams","search","get","searchFilterLocation","latitude","longitude","radius","currentPage","setCurrentPage","totalPages","setTotalPages","totalProducts","setTotalProducts","limit","loading","setLoading","activeFilter","setActiveFilter","filtersApplied","setFiltersApplied","sortBy","setSortBy","filters","setFilters","condition","sort","filterPrice","setFilterPrice","minPrice","maxPrice","products","setProducts","page","arguments","undefined","params","keyword","response","axios","fetchSearchResults","handlePageChange","toggleFilterVisibility","filter","handleSortByChange","selectedSortBy","prevFilters","handleFilterChange","handlePriceChange","applyFilters","handleEnterKeyPress","key","useCallback","productData","find","log","Header","FilterBy","transform","transition","RadioButton","includes","CheckBox","Input","BtnClear","resetFilters","minPriceInput","querySelector","maxPriceInput","BtnGreen","ProductCard","AddWishlist","RemoveWishlist","from","_","Footer"],"sourceRoot":""}