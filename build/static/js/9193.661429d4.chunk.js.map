{"version":3,"file":"static/js/9193.661429d4.chunk.js","mappings":"wNAUA,MAiLA,EAjLoBA,IAA6G,IAA5G,KAAEC,EAAI,cAAEC,EAAa,mBAAEC,EAAkB,OAAEC,EAAM,cAAEC,EAAa,iBAAEC,EAAgB,iBAAEC,GAAkBP,EAGzH,MAAOQ,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CAAC,IAC7CC,EAAmBC,IAAwBF,EAAAA,EAAAA,UAAS,CAAC,GACtDG,GAAYC,EAAAA,EAAAA,QAAO,MA8CzB,IA5CAC,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAsBC,KACtBJ,EAAUK,SAAYL,EAAUK,QAAQC,SAASF,EAAMG,SAAYH,EAAMG,OAAOC,UAAUF,SAAS,eAErGP,EAAqB,CAAC,EACxB,EAOF,OAHAU,SAASC,iBAAiB,YAAaP,GAGhC,KACLM,SAASE,oBAAoB,YAAaR,EAAmB,CAC9D,GACA,KAIHD,EAAAA,EAAAA,YAAU,KACUU,WAChB,IAIE,MAAMC,EAAuB,CAAC,EAC9BzB,EAAK0B,SAASC,IACZ,MAAMC,EAAsBC,MAAMC,QAAQH,EAAQI,WAAaJ,EAAQI,SAASC,MAAMC,GAAUC,OAAOD,EAAME,WAAaD,OAAO/B,KACjIsB,EAAqBE,EAAQS,IAAMR,CAAmB,IAGxDpB,EAAiBiB,EACnB,CAAE,MAAOY,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGFE,EAAW,GACV,CAACvC,EAAMG,KAKLH,IAAS6B,MAAMC,QAAQ9B,IAAyB,IAAhBA,EAAKwC,OACxC,OAAO,KAIT,MAYMC,EAAkBA,CAACC,EAAMC,IACxBD,EAGEA,EAAKF,OAASG,EAAYD,EAAKE,UAAU,EAAGD,GAAa,MAAQD,EAF/D,GAOX,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG/C,EAAKgD,KAAI,CAACrB,EAASsB,KAGlB,MAAMC,EAAgB,IAAIC,KAAKxB,EAAQyB,WACvC,GAAIC,MAAMH,EAAcI,WAEtB,OADAhB,QAAQD,MAAM,sBAAuBV,EAAQyB,WACtC,KA4CT,OACEG,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,sBAAqBT,SAAA,EAC9CF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,mBAAAC,OAAqBhC,EAAQS,GAAE,KAAAuB,OAAIC,mBAAmBjC,EAAQkC,eAAgBd,UACpFQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcT,SAAA,CAC1BpB,EAAQmC,QAAUnC,EAAQmC,OAAO,KAChCjB,EAAAA,EAAAA,KAAA,OAAKkB,IAAKpC,EAAQmC,OAAO,GAAGE,WAAaC,EAASC,IAAG,WAAAP,OAAaV,GAASO,UAAU,iBAErF7B,EAAQmC,SACRjB,EAAAA,EAAAA,KAAA,OAAKkB,IAAKE,EAASC,IAAG,sBAAyBV,UAAU,sBAI/DD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcT,SAAA,EAC3BF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,mBAAAC,OAAqBhC,EAAQS,GAAE,KAAAuB,OAAIC,mBAAmBjC,EAAQkC,eAAiBL,UAAU,eAAcT,UAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAIN,EAAgBd,EAAQkC,aAAc,QACzJlC,EAAQwC,SACPZ,EAAAA,EAAAA,MAAA,SAAAR,SAAA,CAAQpB,EAAQwC,OAAOC,MAAQ,GAAG,KAAG3B,EAAgBd,EAAQwC,OAAOE,OAAQ,KAAO,OAErFd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWT,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKW,UAAU,cAAaT,UAACF,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,OACvCzB,EAAAA,EAAAA,KAAA,SAAAE,UAAQwB,EAAAA,EAAAA,GAAoB,IAAIpB,KAAKxB,EAAQyB,WAAY,CAAEoB,WAAW,EAAMC,OAAQC,EAAAA,aAGxFnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBT,SAAA,EACnCQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWT,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAAE,SAAQpB,EAAQgD,qBAChB9B,EAAAA,EAAAA,KAAA,OAAKW,UAAU,QAAOT,UAlGf6B,EAkG6BjD,EAAQiD,MAjGjC,IAAIC,KAAKC,aAAa,QAAS,CACpDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOP,GAEYQ,QAAQ,QAAS,WA4F7B7B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcT,SAAA,CAC1BrC,EAAkBiB,EAAQS,MAAQjC,IACjCoD,EAAAA,EAAAA,MAAA,OAAK8B,IAAKzE,EAAW4C,UAAU,uBAAsBT,SAAA,EACnDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+CACHF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAI,cAAcX,SAAC,gBAG7BF,EAAAA,EAAAA,KAAA,OAAKW,UAAU,mBAAkBT,SAAE3C,EAAcuB,EAAQS,KAAO,MAChES,EAAAA,EAAAA,KAAA,UAAQyC,QAASA,IA7EG9D,WAC1B,IACE,MAAM+D,EAAUhF,EAAciF,KAAc,EAE5C,IAAKrF,EAKH,YAJAQ,GAAqB8E,IAAS,IACzBA,EACH,CAACD,IAAaC,EAAUD,OAKxBD,QACIrF,EAAmBsF,SAEnBvF,EAAcuF,GAItBhF,GAAkBkF,IAAU,IACvBA,EACH,CAACF,IAAaE,EAAWF,OAM3B,MAAMG,EAAwB,CAAC,EAC/B3F,EAAK0B,SAASkE,IACZD,EAAsBC,EAAKxD,IAAM9B,EAAiBsF,EAAKxD,GAAG,IAI5D/B,EAAiBsF,EAGnB,CAAE,MAAOtD,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAuC6BwD,CAAoBlE,EAAQS,IAAKoB,UAAU,aAAYT,SAC3ExC,EAAcoB,EAAQS,KAAMS,EAAAA,EAAAA,KAACiD,EAAAA,EAAU,KAAMjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAY,cApCzD9C,GA1EG2B,KAkHP,KAGT,C,+JC3KP,MA2MA,EA3MiB7E,IAAiB,IAAhB,OAAEI,GAAQJ,EAExB,MAAMiG,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,KAAKhG,QACxC+B,EAAUoE,IAAe1F,EAAAA,EAAAA,UAAS,KAClCT,EAAMoG,IAAW3F,EAAAA,EAAAA,UAAS,KAC1B4F,EAAKC,IAAU7F,EAAAA,EAAAA,WAAS,GACzB8F,GAAWC,EAAAA,EAAAA,OAEVjG,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CAAC,IAC7CL,EAAeC,IAAoBI,EAAAA,EAAAA,UAAS,CAAC,IAC7CgG,EAAaC,IAAkBjG,EAAAA,EAAAA,UAAS,IACxCkG,EAAYC,IAAiBnG,EAAAA,EAAAA,UAAS,IACtCoG,EAAeC,IAAoBrG,EAAAA,EAAAA,UAAS,OAC5CsG,IAAStG,EAAAA,EAAAA,UAAS,KAIzBK,EAAAA,EAAAA,YAAU,KACNyB,EAAUkE,EAAY,GACvB,CAACF,EAAUE,IAGd,MAAMlE,EAAYf,iBAAqB,IAAdwF,EAAIC,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC5BV,GAASY,EAAAA,EAAAA,IAAU,IAEnB,IACI,MAAMC,EAAS,CACXJ,OACAD,SAGEM,QAAiBC,EAAAA,EAAMC,IAAI,uBAAwB,CAAEH,WACvDC,EAASrH,KAAK+B,UAAYF,MAAMC,QAAQuF,EAASrH,KAAK+B,WACtDoE,EAAYkB,EAASrH,KAAK+B,UAC1B+E,EAAiBO,EAASrH,KAAK6G,eAC/BD,EAAcS,EAASrH,KAAK2G,aAG5BrE,QAAQD,MAAM,kCAAmCgF,EAASrH,KAAK+B,UAKnE,MAAMyF,QAAqBC,EAAAA,EAAAA,MAC3BrB,EAAQoB,EAAaxH,MACrBuG,GAASY,EAAAA,EAAAA,IAAU,GAEvB,CAAE,MAAO9E,GAKL,GAJAkE,GAASY,EAAAA,EAAAA,IAAU,IACnB7E,QAAQD,MAAM,gCAAiCA,GAG3CA,EAAMgF,UAAsC,MAA1BhF,EAAMgF,SAASK,OACjC,OAAOrF,EAAMsF,QAIbrB,GAAO,EAEf,CACJ,EAEMsB,EAAoBZ,IAClBA,GAAQ,GAAKA,GAAQL,GACrBD,EAAeM,EACnB,EAwBEa,GAAaC,EAAAA,EAAAA,UAAQ,IAAMjG,MAAMC,QAAQC,GAAYA,EAAW,IAAI,CAACA,IAIrEzB,GAAmByH,EAAAA,EAAAA,cAAavC,IAClC,MAAMwC,EAAchI,EAAKiI,MAAMtG,GAAYA,EAAQS,KAAOoD,IAC1D,OAAOwC,GAAeA,EAAYjG,SAAWiG,EAAYjG,SAASS,OAAc,CAAC,GAClF,CAACxC,IAgCJ,OA5BAc,EAAAA,EAAAA,YAAU,KAEN,MAAM6E,EAAwB,CAAC,EAC/BkC,EAAWnG,SAASC,IAChBgE,EAAsBhE,EAAQS,IAAM9B,EAAiBqB,EAAQS,GAAG,IAIpE/B,EAAiBsF,GAEjBrD,QAAQ4F,IAAI,0BAA2BvC,EAAsB,GAC9D,CAACpF,EAAesH,EAAYvH,KAK/BQ,EAAAA,EAAAA,YAAU,KACN,MAAMW,EAAuB,CAAC,EAC9BoG,EAAWnG,SAASC,IAChB,MAAMC,EAAsBC,MAAMC,QAAQH,EAAQI,WAAaJ,EAAQI,SAASC,MAAMC,GAAUC,OAAOD,EAAME,WAAaD,OAAO/B,KACjIsB,EAAqBE,EAAQS,IAAMR,CAAmB,IAE1DU,QAAQ4F,IAAI,0BAA2BzG,GACvCjB,EAAiBiB,EAAqB,GACvC,CAACoG,EAAY1H,KAKZoD,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAACsF,EAAAA,EAAM,KACP5E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBT,SAAA,EACpCF,EAAAA,EAAAA,KAAA,OAAKW,UAAU,gBAAeT,UAC1BQ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYT,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAG,IAAGX,SAAC,YACjBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAGZQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeT,SAAA,EAC1BQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBT,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJQ,EAAAA,EAAAA,MAAA,MAAAR,SAAA,CAAI,YAAU8D,EAAc,kCAEb,IAAlBA,GAAuBtD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBT,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKkB,IAAKqE,EAAUlE,IAAI,QAE5BrB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+BAGJF,EAAAA,EAAAA,KAAA,OAAKW,UAAU,iBAAgBT,UAC3BF,EAAAA,EAAAA,KAACwF,EAAAA,EAAW,CACRrI,KAAM6H,GAAc,GACpB5H,cAnFNuB,UAClB,IACI,MAAM6F,QAAiBiB,EAAAA,EAAAA,IAAY9C,EAAW,CAAC,GAC/ClD,QAAQ4F,IAAIb,EAASrH,KACzB,CAAE,MAAOqC,GACLC,QAAQD,MAAM,iCAAkCA,EACpD,GA8EwBnC,mBA3EDsB,UACvB,IACI,MAAM6F,QAAiBkB,EAAAA,EAAAA,IAAe/C,EAAW,CAAC,GAClDlD,QAAQ4F,IAAIb,EAASrH,KACzB,CAAE,MAAOqC,GACLC,QAAQD,MAAM,qCAAsCA,EACxD,GAsEwBlC,OAAY,OAAJ6F,QAAI,IAAJA,OAAI,EAAJA,EAAM5D,GACd7B,cAAeA,EACfC,iBAAkBA,EAClBJ,cAAeA,EACfC,iBAAkBA,EAClBC,iBAAkBA,MAI7BuG,EAAgB,KACbtD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYT,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIW,UAAU,YAAWT,UACrBF,EAAAA,EAAAA,KAAA,UACIyC,QAASA,IAAMsC,EAAiBnB,EAAc,GAC9C+B,SAA0B,IAAhB/B,EACVjD,UAAU,YAAWT,SACxB,eAIJlB,MAAM4G,KAAK,CAAEjG,OAAQmE,IAAc,CAAC+B,EAAGzF,IAAUA,EAAQ,IAAGD,KAAKgE,IAC9DnE,EAAAA,EAAAA,KAAA,MAAeW,UAAU,YAAWT,UAChCF,EAAAA,EAAAA,KAAA,UACIyC,QAASA,IAAMsC,EAAiBZ,GAChCxD,UAAWwD,IAASP,EAAc,mBAAqB,YAAY1D,SAElEiE,KALAA,MASbnE,EAAAA,EAAAA,KAAA,MAAIW,UAAU,YAAWT,UACrBF,EAAAA,EAAAA,KAAA,UACIyC,QAASA,IAAMsC,EAAiBnB,EAAc,GAC9C+B,SAAU/B,IAAgBE,EAC1BnD,UAAU,YAAWT,SACxB,qBAQrBF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,MACR,C","sources":["components/Cards/ProductCard.jsx","pages/Wishlist/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\nimport { Link } from 'react-router-dom'\r\nimport './style.scss'\r\nimport { ReactComponent as ClockIcon } from '../../assets/images/clock-regular.svg'\r\nimport { ReactComponent as HeartRegular } from '../../assets/images/heart-regular.svg';\r\nimport { ReactComponent as HeartSolid } from '../../assets/images/heart-solid.svg';\r\nimport NoImage from '../../assets/images/no-image-available.png'\r\n\r\nconst ProductCard = ({ data, addToWishlist, removeFromWishlist, userId, wishlistCount, setWishlistCount, getWishlistCount }) => {\r\n\r\n\r\n  const [productStates, setProductStates] = useState({});\r\n  const [showSignInMessage, setShowSignInMessage] = useState({});\r\n  const signInRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Function to handle clicks outside the add-wishlist-sign-in element\r\n    const handleClickOutside = (event) => {\r\n      if (signInRef.current && !signInRef.current.contains(event.target) && !event.target.classList.contains('heart-icon')) {\r\n        // Hide the sign-in message for all products when clicked outside\r\n        setShowSignInMessage({});\r\n      }\r\n    };\r\n\r\n    // Add event listener to detect clicks on the document\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    // Cleanup: Remove event listener when component unmounts\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n\r\n  // Initialize productStates based on initial wishlist data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // ... (fetching data logic)\r\n\r\n        // Set productStates after fetching data\r\n        const initialProductStates = {};\r\n        data.forEach((product) => {\r\n          const isProductInWishlist = Array.isArray(product.wishlist) && product.wishlist.some((entry) => String(entry.user_id) === String(userId));\r\n          initialProductStates[product.id] = isProductInWishlist;\r\n        });\r\n\r\n        setProductStates(initialProductStates);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [data, userId]);\r\n\r\n\r\n\r\n  // Check if data is null or undefined or not an array\r\n  if (!data || !Array.isArray(data) || data.length === 0) {\r\n    return null; // or return some default content or loading indicator\r\n  }\r\n\r\n  // Function to format price with commas and decimals\r\n  const formatPrice = (price) => {\r\n    const formattedPrice = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'PHP', // Change to your desired currency code\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(price);\r\n\r\n    return formattedPrice.replace(/\\.00$/, ''); // Remove '.00' if the fractional part is zero\r\n  };\r\n\r\n  // Function to limit the number of characters\r\n  const limitCharacters = (text, maxLength) => {\r\n    if (!text) {\r\n      return ''; // or return some default value\r\n    }\r\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {data.map((product, index) => {\r\n\r\n        // Ensure product.createdAt is a valid date before using it\r\n        const createdAtDate = new Date(product.createdAt);\r\n        if (isNaN(createdAtDate.getTime())) {\r\n          console.error('Invalid date value:', product.createdAt);\r\n          return null; // or handle the invalid date value in some way\r\n        }\r\n\r\n        const handleWishlistClick = async (productId) => {\r\n          try {\r\n            const isAdded = productStates[productId] || false;\r\n\r\n            if (!userId) { // If user is not authenticated\r\n              setShowSignInMessage(prevState => ({\r\n                ...prevState,\r\n                [productId]: !prevState[productId], // Toggle the sign-in message for this specific product\r\n              }));\r\n              return; // Exit the function without adding/removing from wishlist\r\n            }\r\n\r\n            if (isAdded) {\r\n              await removeFromWishlist(productId);\r\n            } else {\r\n              await addToWishlist(productId);\r\n            }\r\n\r\n            // Update the local state immediately after the action is dispatched\r\n            setProductStates((prevStates) => ({\r\n              ...prevStates,\r\n              [productId]: !prevStates[productId],\r\n            }));\r\n\r\n\r\n\r\n            // Update wishlist count for all products after state changes\r\n            const updatedWishlistCounts = {};\r\n            data.forEach((prod) => {\r\n              updatedWishlistCounts[prod.id] = getWishlistCount(prod.id);\r\n            });\r\n\r\n            // Set the updated wishlist counts\r\n            setWishlistCount(updatedWishlistCounts);\r\n            // Force re-render by updating state with a dummy value\r\n\r\n          } catch (error) {\r\n            console.error('Error updating wishlist:', error);\r\n          }\r\n        };\r\n\r\n        return (\r\n          <div key={index} className=\"thumbnail-container\">\r\n            <Link to={`/productdetails/${product.id}/${encodeURIComponent(product.product_name)}`} >\r\n              <div className='image-holder'>\r\n                {product.images && product.images[0] && (\r\n                  <img src={product.images[0].image_url || NoImage} alt={`Product ${index}`} className='product-img' />\r\n                )}\r\n                {!product.images && (\r\n                  <img src={NoImage} alt={`No Images Available`} className='product-img' />\r\n                )}\r\n              </div>\r\n            </Link>\r\n            <div className='product-info'>\r\n              <Link to={`/productdetails/${product.id}/${encodeURIComponent(product.product_name)}`} className='product-name'><p>{limitCharacters(product.product_name, 55)}</p></Link>\r\n              {product.seller && (\r\n                <small>{product.seller.city || ''}, {limitCharacters(product.seller.region, 15) || ''}</small>\r\n              )}\r\n              <div className=\"date-post\">\r\n                <div className=\"small-clock\"><ClockIcon /></div>\r\n                <small>{formatDistanceToNow(new Date(product.createdAt), { addSuffix: true, locale: enUS })}</small>\r\n              </div>\r\n            </div>\r\n            <div className='prod-condition-price'>\r\n              <div className='col-price'>\r\n                <small>{product.product_condition}</small>\r\n                <div className=\"price\">{formatPrice(product.price)}</div>\r\n              </div>\r\n              <div className='col-wishlist'>\r\n                {showSignInMessage[product.id] && !userId && (\r\n                  <div ref={signInRef} className='add-wishlist-sign-in'>\r\n                    <h6>You like this item?</h6>\r\n                    <p>Sign in to add this item to your wishlist</p>\r\n                    <Link to={'/loginemail'}>Sign in</Link>\r\n                  </div>\r\n                )}\r\n                <div className='wishlist-counter'>{wishlistCount[product.id] || ''}</div>\r\n                <button onClick={() => handleWishlistClick(product.id)} className='heart-icon'>\r\n                  {productStates[product.id] ? <HeartSolid /> : <HeartRegular />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from '../../apicalls/axios';\r\nimport { Setloader } from '../../redux/reducer/loadersSlice'\r\nimport { GetAllProducts, AddWishlist, RemoveWishlist } from '../../apicalls/products';\r\nimport './style.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../../layouts/Header'\r\nimport Footer from '../../layouts/Footer'\r\nimport ProductCard from '../../components/Cards/ProductCard'\r\nimport SadImage from '../../assets/images/page-not-found-image.png'\r\n\r\nconst Wishlist = ({ userId }) => {\r\n\r\n    const user = useSelector((state) => state.user.data)\r\n    const [wishlist, setwishlist] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [err, setErr] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const [productStates, setProductStates] = useState({});\r\n    const [wishlistCount, setWishlistCount] = useState({});\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [totalWishList, setTotalWishList] = useState(null)\r\n    const [limit] = useState(30);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData(currentPage)\r\n    }, [dispatch, currentPage])\r\n\r\n\r\n    const fetchData = async (page = 1) => {\r\n        dispatch(Setloader(true));\r\n\r\n        try {\r\n            const params = {\r\n                page,\r\n                limit\r\n            }\r\n            // Fetch the user's wishlist\r\n            const response = await axios.get('/api/getuserwishlist', { params });\r\n            if (response.data.wishlist && Array.isArray(response.data.wishlist)) {\r\n                setwishlist(response.data.wishlist);\r\n                setTotalWishList(response.data.totalWishList);\r\n                setTotalPages(response.data.totalPages);\r\n            } else {\r\n                // Handle the case where the data is not an array\r\n                console.error('Received invalid wishlist data:', response.data.wishlist);\r\n            }\r\n\r\n\r\n            // Fetch all products\r\n            const prodResponse = await GetAllProducts();\r\n            setData(prodResponse.data)\r\n            dispatch(Setloader(false));\r\n\r\n        } catch (error) {\r\n            dispatch(Setloader(false));\r\n            console.error('Error fetching wishlist data:', error);\r\n\r\n            // Check if the error is due to unauthorized access\r\n            if (error.response && error.response.status === 500) {\r\n                return error.message\r\n                // Handle unauthorized access, e.g., redirect to login\r\n            } else {\r\n                // Handle other errors\r\n                setErr(true); // Depending on your requirements\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePageChange = (page) => {\r\n        if (page >= 1 && page <= totalPages) {\r\n            setCurrentPage(page);\r\n        }\r\n    };\r\n\r\n\r\n    // Add and remove wishlist function\r\n    const addToWishlist = async (productId) => {\r\n        try {\r\n            const response = await AddWishlist(productId, {});\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            console.error('Error adding item to wishlist:', error);\r\n        }\r\n    };\r\n\r\n    const removeFromWishlist = async (productId) => {\r\n        try {\r\n            const response = await RemoveWishlist(productId, {});\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            console.error('Error removing item from wishlist:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const mywishlist = useMemo(() => Array.isArray(wishlist) ? wishlist : [], [wishlist]);\r\n\r\n\r\n    // Use useCallback to memoize the function\r\n    const getWishlistCount = useCallback((productId) => {\r\n        const productData = data.find((product) => product.id === productId);\r\n        return productData ? (productData.wishlist ? productData.wishlist.length : 0) : 0;\r\n    }, [data]);\r\n\r\n\r\n    // Use useEffect to update wishlist count after state changes\r\n    useEffect(() => {\r\n        // Update wishlist count for all products\r\n        const updatedWishlistCounts = {};\r\n        mywishlist.forEach((product) => {\r\n            updatedWishlistCounts[product.id] = getWishlistCount(product.id);\r\n        });\r\n\r\n        // Set the updated wishlist counts\r\n        setWishlistCount(updatedWishlistCounts);\r\n\r\n        console.log('Wishlist count updated:', updatedWishlistCounts);\r\n    }, [productStates, mywishlist, getWishlistCount]);\r\n\r\n\r\n\r\n    // Initialize productStates based on initial wishlist data\r\n    useEffect(() => {\r\n        const initialProductStates = {};\r\n        mywishlist.forEach((product) => {\r\n            const isProductInWishlist = Array.isArray(product.wishlist) && product.wishlist.some((entry) => String(entry.user_id) === String(userId));\r\n            initialProductStates[product.id] = isProductInWishlist;\r\n        });\r\n        console.log('Initial Product States:', initialProductStates);\r\n        setProductStates(initialProductStates);\r\n    }, [mywishlist, userId]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className='container wishlist-body'>\r\n                <div className=\"wishlist-row1\">\r\n                    <ul className='breadcrumb'>\r\n                        <li><Link to='/'>Home</Link></li>\r\n                        <li>Wishlist</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"wishlist-row2\">\r\n                    <div className='wishlist-title'>\r\n                        <h3>My Wishlist</h3>\r\n                        <h5>You have {totalWishList} item(s) on your wishlist</h5>\r\n                    </div>\r\n                    {totalWishList === 0 ? (<div className='wishlist-empty'>\r\n                        <div>\r\n                            <img src={SadImage} alt=\"\" />\r\n                        </div>\r\n                        <h4>Your Wishlist is Empty</h4>\r\n                    </div>\r\n                    ) : (\r\n                        <div className='wishlist-items'>\r\n                            <ProductCard\r\n                                data={mywishlist || []}\r\n                                addToWishlist={addToWishlist}\r\n                                removeFromWishlist={removeFromWishlist}\r\n                                userId={user?.id}\r\n                                productStates={productStates}\r\n                                setProductStates={setProductStates}\r\n                                wishlistCount={wishlistCount}\r\n                                setWishlistCount={setWishlistCount}\r\n                                getWishlistCount={getWishlistCount}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {totalWishList > 30 &&\r\n                        <div className=\"pagination\">\r\n                            <li className='page-item'>\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage - 1)}\r\n                                    disabled={currentPage === 1}\r\n                                    className='page-link'\r\n                                >\r\n                                    Previous\r\n                                </button>\r\n                            </li>\r\n                            {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\r\n                                <li key={page} className='page-item'>\r\n                                    <button\r\n                                        onClick={() => handlePageChange(page)}\r\n                                        className={page === currentPage ? 'active page-link' : 'page-link'}\r\n                                    >\r\n                                        {page}\r\n                                    </button>\r\n                                </li>\r\n                            ))}\r\n                            <li className='page-item'>\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage + 1)}\r\n                                    disabled={currentPage === totalPages}\r\n                                    className='page-link'\r\n                                >\r\n                                    Next\r\n                                </button>\r\n                            </li>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wishlist"],"names":["_ref","data","addToWishlist","removeFromWishlist","userId","wishlistCount","setWishlistCount","getWishlistCount","productStates","setProductStates","useState","showSignInMessage","setShowSignInMessage","signInRef","useRef","useEffect","handleClickOutside","event","current","contains","target","classList","document","addEventListener","removeEventListener","async","initialProductStates","forEach","product","isProductInWishlist","Array","isArray","wishlist","some","entry","String","user_id","id","error","console","fetchData","length","limitCharacters","text","maxLength","substring","_jsx","_Fragment","children","map","index","createdAtDate","Date","createdAt","isNaN","getTime","_jsxs","className","Link","to","concat","encodeURIComponent","product_name","images","src","image_url","NoImage","alt","seller","city","region","ClockIcon","formatDistanceToNow","addSuffix","locale","enUS","product_condition","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","replace","ref","onClick","isAdded","productId","prevState","prevStates","updatedWishlistCounts","prod","handleWishlistClick","HeartSolid","HeartRegular","user","useSelector","state","setwishlist","setData","err","setErr","dispatch","useDispatch","currentPage","setCurrentPage","totalPages","setTotalPages","totalWishList","setTotalWishList","limit","page","arguments","undefined","Setloader","params","response","axios","get","prodResponse","GetAllProducts","status","message","handlePageChange","mywishlist","useMemo","useCallback","productData","find","log","Header","SadImage","ProductCard","AddWishlist","RemoveWishlist","disabled","from","_","Footer"],"sourceRoot":""}