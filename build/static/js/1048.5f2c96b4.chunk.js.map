{"version":3,"file":"static/js/1048.5f2c96b4.chunk.js","mappings":"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","sources":["components/RegisterAccountForm/RegisterByEmailForm.jsx","pages/Auth/RegisterAccount/RegisterByEmail.jsx"],"sourcesContent":["import { useRef, useState, useEffect } from 'react'\r\nimport axios from \"../../apicalls/axios\";\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom'\r\nimport './style.scss'\r\nimport SuccessRegistrationModal from '../../components/Modal/SuccessRegistrationModal'\r\nimport LogoGray from '../../assets/images/Yogeek-logo.png'\r\nimport LoginBtn from '../../components/Button/LoginBtn'\r\nimport BtnClear from '../../components/Button/BtnClear'\r\nimport { ReactComponent as FBIcon } from '../../assets/images/facebook-icon.svg'\r\nimport { ReactComponent as GoogleIcon } from '../../assets/images/google-icon.svg'\r\nimport { ReactComponent as SendOtpSpinner } from '../../assets/images/loading-spinner.svg'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Setloader } from '../../redux/reducer/loadersSlice';\r\nimport AlertMessage from '../AlertMessage';\r\n\r\nconst EMAIL_REGEX = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\nconst PWD_REGEX = /^.{8,24}$/;\r\nconst REGISTER_URL = '/api/email-register';\r\n\r\nconst RegisterByEmailForm = () => {\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const emailRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [emailFocus, setEmailFocus] = useState(false);\r\n\r\n  const [otp, setOtp] = useState('')\r\n  const [validOtp, setValidOtp] = useState(false);\r\n\r\n  const [pwd, setPwd] = useState('');\r\n  const [validPwd, setValidPwd] = useState(false);\r\n  const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n  const [matchPwd, setMatchPwd] = useState('');\r\n  const [validMatch, setValidMatch] = useState(false);\r\n  const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [otpTimer, setOtpTimer] = useState(0);\r\n  const [otpSpinner, setOtpSpinner] = useState(false);\r\n\r\n  const [resendOTP, setResendOTP] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    emailRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const result = EMAIL_REGEX.test(email);\r\n    console.log(result);\r\n    console.log(email);\r\n    setValidEmail(result);\r\n  }, [email])\r\n\r\n  useEffect(() => {\r\n    const result = PWD_REGEX.test(pwd);\r\n    console.log(result);\r\n    console.log(pwd);\r\n    setValidPwd(result);\r\n    const match = pwd === matchPwd;\r\n    setValidMatch(match);\r\n  }, [pwd, matchPwd])\r\n\r\n  useEffect(() => {\r\n    setErrMsg('');\r\n  }, [email, pwd, matchPwd])\r\n\r\n  useEffect(() => {\r\n    setValidOtp(otp.length > 0)\r\n  }, [otp])\r\n\r\n  useEffect(() => {\r\n    if (otpTimer > 0) {\r\n      const timer = setTimeout(() => {\r\n        setOtpTimer(otpTimer - 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [otpTimer]);\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    otp: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n\r\n  const sendOTPCode = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setShowAlert(false);\r\n      setOtpSpinner(true)\r\n      const response = await axios.post('/api/send-email-registration-otp', formData)\r\n\r\n      if (response.status === 201) {\r\n        setOtpSpinner(false)\r\n        setResendOTP(true)\r\n        setOtpTimer(120); // Start the OTP expiration timer\r\n      }\r\n\r\n    } catch (err) {\r\n      if (err.response.status === 409) {\r\n        setErrMsg('Account already exists for this email.')\r\n        setSuccess(false);\r\n        setOtpSpinner(false)\r\n        setShowAlert(true);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const createAccount = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if button enabled with JS hack\r\n    const isEmailValid = EMAIL_REGEX.test(email);\r\n    const isPasswordValid = PWD_REGEX.test(pwd);\r\n    if (!isEmailValid || !isPasswordValid) {\r\n      setErrMsg(\"Invalid Entry\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      dispatch(Setloader(true))\r\n      const response = await axios.post(REGISTER_URL, formData);\r\n\r\n      if (response.status === 201) {\r\n        dispatch(Setloader(false))\r\n        // User registration was successful\r\n        setSuccess(true);\r\n        // Clear state and controlled inputs\r\n        // Need value attrib on inputs for this\r\n        setEmail('');\r\n        setPwd('');\r\n        setMatchPwd('');\r\n        setOtp('');\r\n      }\r\n    } catch (err) {\r\n      dispatch(Setloader(false))\r\n      let errorMessage = 'An error occurred during registration';\r\n\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 409:\r\n            errorMessage = 'Account already exists for this email.';\r\n            break;\r\n          case 401:\r\n            errorMessage = 'Invalid or expired verification code.';\r\n            break;\r\n          case 404:\r\n            errorMessage = 'Invalid verification code.';\r\n            break;\r\n          default:\r\n            console.error('Error:', err);\r\n        }\r\n      } else {\r\n        console.error('Error:', err);\r\n      }\r\n\r\n      setSuccess(false);\r\n      setErrMsg(errorMessage);\r\n      setShowAlert(true);\r\n    }\r\n    if (errRef.current) {\r\n      errRef.current.focus();\r\n    }\r\n  };\r\n\r\n\r\n  //SOCIAL LOGIN REDIRECT PAGE\r\n  const google = () => {\r\n    const BaseUrl = process.env.REACT_APP_BASE_URL;\r\n    const googleAuthPath = '/auth/google';\r\n\r\n    const googleCallback = `${BaseUrl}${googleAuthPath}`;\r\n\r\n    window.open(googleCallback, '_self');\r\n  };\r\n\r\n  const facebook = () => {\r\n    const BaseUrl = process.env.REACT_APP_BASE_URL;\r\n    const facebookAuthPath = '/auth/facebook/callback';\r\n\r\n    const facebookCallback = `${BaseUrl}${facebookAuthPath}`;\r\n\r\n    window.open(facebookCallback, '_self');\r\n  };\r\n\r\n  const NavigateLogin = () => {\r\n    console.log(\"Navigating to LoginPhone\");\r\n    window.location.href = '/LoginEmail';\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {success && <SuccessRegistrationModal onClick={NavigateLogin} />}\r\n        <>{showAlert && <AlertMessage type=\"error\" message={errMsg} />}\r\n          <div className='register-form-container'>\r\n            <form className='register-form' onSubmit={createAccount}>\r\n              <div className='row1'>\r\n                <div className='col1'><Link to='/'><img src={LogoGray} alt=\"\" className='auth-form-logo' /></Link></div>\r\n                <div className='col2'><h4>Create an account</h4></div>\r\n              </div>\r\n\r\n              <div className='row2'>\r\n                <div className='col1 input-container'>\r\n                  <div className='row1'>\r\n                    <label htmlFor='emailAddress'>\r\n                      Email\r\n                      <FontAwesomeIcon icon={faCheck} className={validEmail ? \"valid\" : \"hide\"} />\r\n                      <FontAwesomeIcon icon={faTimes} className={validEmail || !email ? \"hide\" : \"invalid\"} />\r\n                    </label>\r\n                    <Link to=\"/RegisterByPhone\">Verify with phone number</Link>\r\n                  </div>\r\n                  <div className='row2'>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"emailAddress\"\r\n                      name=\"email\"\r\n                      ref={emailRef}\r\n                      autoComplete=\"off\"\r\n                      onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                        handleChange(e); // Assuming handleChange is another function you want to call\r\n                      }}\r\n                      value={email}\r\n                      required\r\n                      aria-invalid={validEmail ? \"false\" : \"true\"}\r\n                      aria-describedby=\"uidnote\"\r\n                      onFocus={() => setEmailFocus(true)}\r\n                      onBlur={() => setEmailFocus(false)}\r\n                      placeholder='Enter your email address'\r\n                    />\r\n                    <p id=\"uidnote\" className={emailFocus && email && !validEmail ? \"instructions\" : \"offscreen\"}>\r\n                      <FontAwesomeIcon icon={faInfoCircle} color='red' />\r\n                      <span> Invalid email address format!</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className='col2 input-container'>\r\n                  <div className='row1'><b>Verification Code</b></div>\r\n                  <div className='row2'>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder='Enter the verification code'\r\n                      name=\"otp\"\r\n                      value={otp}\r\n                      onChange={(e) => {\r\n                        setOtp(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                    {otpTimer > 0 && (\r\n                      <div className='instructions'>\r\n                        <span>OTP sent to your email expires in: {otpTimer}s</span>\r\n                      </div>\r\n                    )}\r\n                    {otpSpinner ? (\r\n                      <div className='send-otp-spinner'>\r\n                        <SendOtpSpinner />\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <BtnClear type=\"button\" label={!resendOTP ? 'Send Code' : 'Resend Code'} onClick={sendOTPCode} className='send-code' disabled={!validEmail || otpTimer} />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='row3'>\r\n                <div className='col1 input-container'>\r\n                  <div className='row1'>\r\n                    <label htmlFor=\"password\">Password\r\n                      <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                      <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\r\n                    </label>\r\n                  </div>\r\n                  <div className='row2'>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      onChange={(e) => {\r\n                        setPwd(e.target.value);\r\n                        handleChange(e); // Assuming handleChange is another function you want to call\r\n                      }}\r\n                      value={pwd}\r\n\r\n                      aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                      aria-describedby=\"pwdnote\"\r\n                      onFocus={() => setPwdFocus(true)}\r\n                      onBlur={() => setPwdFocus(false)}\r\n                      placeholder='Enter your password'\r\n                    />\r\n                    <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                      <FontAwesomeIcon icon={faInfoCircle} />\r\n                      <span> Must be 8 to 24 characters.</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className='col2 input-container'>\r\n                  <div className='row1'>\r\n                    <label htmlFor=\"confirm_pwd\">\r\n                      Confirm Password\r\n                      <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? \"valid\" : \"hide\"} />\r\n                      <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? \"hide\" : \"invalid\"} />\r\n                    </label>\r\n                  </div>\r\n                  <div className='row2'>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"confirm_pwd\"\r\n                      onChange={(e) => setMatchPwd(e.target.value)}\r\n                      value={matchPwd}\r\n\r\n                      aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                      aria-describedby=\"confirmnote\"\r\n                      onFocus={() => setMatchFocus(true)}\r\n                      onBlur={() => setMatchFocus(false)}\r\n                      placeholder='Re-enter your password'\r\n                    />\r\n                    <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                      <FontAwesomeIcon icon={faInfoCircle} />\r\n                      <span> Must match the first password input field.</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='row4'><LoginBtn onClick={() => setShowAlert(false)} label=\"Continue\" className='reset-pswrd-btn' disabled={!validEmail || !validOtp || !validPwd || !validMatch} /></div>\r\n            </form>\r\n            <div className='row5'><div className='horizontal-line'></div><small>or</small><div className='horizontal-line'></div></div>\r\n            <div className='row6'><LoginBtn icon={<FBIcon />} label='Continue with Facebook' className='facebook-btn' IconclassName='fb-icon' onClick={facebook} /></div>\r\n            <div className='row7'><LoginBtn icon={<GoogleIcon />} label='Continue with Google' className='google-btn' IconclassName='google-icon' onClick={google} /></div>\r\n            <div className='row8'><small>By continuing, you agree to Yogeek <Link to=\"#\">Conditions of Use</Link> and <Link to=\"#\">Privacy Notice</Link>.</small></div>\r\n            <div className=\"row9\"><small>Already have an account? <Link to=\"/LoginEmail\">Sign in here!</Link></small></div>\r\n          </div>\r\n        </>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterByEmailForm\r\n","import React from 'react'\r\nimport RegisterByEmailForm from '../../../components/RegisterAccountForm/RegisterByEmailForm'\r\nimport LoginFooter from '../../../layouts/LoginFooter'\r\nimport './style.scss'\r\n\r\nconst RegisterByEmail = () => {\r\n  return (\r\n    <>\r\n      <div className='form-body'>\r\n        <div className=\"container\">\r\n          <div className=\"form-box\">\r\n            <RegisterByEmailForm />\r\n          </div>\r\n        </div>\r\n        <LoginFooter />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterByEmail\r\n"],"names":["EMAIL_REGEX","PWD_REGEX","RegisterByEmailForm","showAlert","setShowAlert","useState","emailRef","useRef","errRef","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","otp","setOtp","validOtp","setValidOtp","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","otpTimer","setOtpTimer","otpSpinner","setOtpSpinner","resendOTP","setResendOTP","dispatch","useDispatch","useEffect","current","focus","result","test","console","log","length","timer","setTimeout","clearTimeout","formData","setFormData","password","handleChange","e","name","value","target","_jsxs","_Fragment","children","_jsx","SuccessRegistrationModal","onClick","NavigateLogin","window","location","href","AlertMessage","type","message","className","onSubmit","async","preventDefault","isEmailValid","isPasswordValid","Setloader","axios","post","status","err","errorMessage","response","error","Link","to","src","LogoGray","alt","htmlFor","FontAwesomeIcon","icon","faCheck","faTimes","id","ref","autoComplete","onChange","required","onFocus","onBlur","placeholder","faInfoCircle","color","SendOtpSpinner","BtnClear","label","disabled","LoginBtn","FBIcon","IconclassName","facebook","facebookCallback","concat","process","open","GoogleIcon","google","googleCallback","RegisterByEmail","LoginFooter"],"sourceRoot":""}