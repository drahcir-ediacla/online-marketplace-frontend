{"version":3,"file":"static/js/4822.5d2df95e.chunk.js","mappings":"gSAkBA,MA6JA,EA7J6BA,KAEzB,MAAM,GAAEC,EAAE,KAAEC,IAASC,EAAAA,EAAAA,MACfC,GAAWC,EAAAA,EAAAA,WACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,CAAC,IAC3CC,IAAoBD,EAAAA,EAAAA,WAAS,IAC7BE,EAAiBC,IAAsBH,EAAAA,EAAAA,UAAS,KAChDI,EAAaC,IAAkBL,EAAAA,EAAAA,UAAS,KACxCM,EAAMC,IAAWP,EAAAA,EAAAA,UAAS,IAC1BQ,IAASR,EAAAA,EAAAA,UAAS,KAClBS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,IAChCW,EAASC,IAAcZ,EAAAA,EAAAA,WAAS,GACjCa,EAA0B,CAAC,cAAe,cAAe,cAAcC,KAAIC,IAAM,CAE/EC,MAAOD,EACPE,MAAOF,EAAOG,mBAGtBC,EAAAA,EAAAA,YAAU,KACoBC,WACtB,IAAIX,GAAYE,EAAhB,CAEAD,GAAW,GACX,IACI,MAAMW,QAAiBC,EAAAA,EAAMC,IAAI,sBAADC,OAAuB/B,EAAE,KAAA+B,OAAI9B,EAAI,UAAA8B,OAASlB,EAAI,WAAAkB,OAAUhB,IACxFT,EAAgBsB,EAASI,MAEzB,MAAMC,EAAgBL,EAASI,KAAKE,eACpCtB,GAAgBuB,IACZ,MAAMC,EAAaH,EAAcI,QAC5BC,IAAUH,EAASI,MAAMC,GAAiBA,EAAaC,gBAAkBH,EAAKG,kBAEnF,MAAO,IAAIN,KAAaC,EAAW,IAEvCjB,EAAWc,EAAcS,OAAS,EACtC,CAAE,MAAOC,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,CAAC,QACG1B,GAAW,EACf,CAnB+B,CAmB/B,EAEJ4B,EAAmB,GACpB,CAAC7C,EAAIC,IAGR,MAcM6C,EAAgBC,MAAMC,QAAoB,OAAZ3C,QAAY,IAAZA,OAAY,EAAZA,EAAcyC,eAA6B,OAAZzC,QAAY,IAAZA,OAAY,EAAZA,EAAcyC,cAAgB,GAC3FG,EAAwB,IAAItC,GAAauC,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEE,YAAc,IAAID,KAAKF,EAAEG,cAC5FC,EAAa,IAAI5C,GAAauC,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEE,YAAc,IAAID,KAAKF,EAAEG,cAEjFE,EAAa,IAAI7C,GAAauC,MAAK,CAACC,EAAGC,KACzC,MAAMK,EAASN,EAAEO,KAAKC,QAAO,CAACC,EAAKF,IAASE,GAAOF,EAAKG,OAAS,IAAI,GAErE,OADeT,EAAEM,KAAKC,QAAO,CAACC,EAAKF,IAASE,GAAOF,EAAKG,OAAS,IAAI,GACrDJ,CAAM,IAIpBK,EAAY,IAAInD,GAAauC,MAAK,CAACC,EAAGC,KACxC,MAAMW,EAASZ,EAAEO,KAAKC,QAAO,CAACC,EAAKF,IAASE,GAAOF,EAAKM,MAAQN,EAAKM,MAAMtB,OAAS,IAAI,GAExF,OADeU,EAAEM,KAAKC,QAAO,CAACC,EAAKF,IAASE,GAAOF,EAAKM,MAAQN,EAAKM,MAAMtB,OAAS,IAAI,GACxEqB,CAAM,IAGpBE,EAAsB3C,IAEH,gBAAjBA,EAAOE,OACPd,EAAmB6C,GAGF,gBAAjBjC,EAAOE,OACPd,EAAmB8C,GAGF,eAAjBlC,EAAOE,OACPd,EAAmBoD,EACvB,EAKJ,OACII,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACjCF,EAAAA,EAAAA,KAACK,EAAAA,EAAM,KACPL,EAAAA,EAAAA,KAAA,OAAAE,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BF,SAAA,EAC1CF,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,CACbC,YAAarD,EACbZ,iBAAkBA,EAClBkE,eAAgBT,KAEpBI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,8BAA6BF,UACxCF,EAAAA,EAAAA,KAACS,EAAAA,EAAU,OAEfT,EAAAA,EAAAA,KAACU,EAAAA,EAAmB,CAACN,UAAU,6BAC/BJ,EAAAA,EAAAA,KAACW,EAAAA,EAAkB,KACnBR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBF,SAAA,EAClCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBF,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAK/D,EAAaJ,QAClBiE,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iCAAgCF,UAC3CF,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAACvD,MAAM,0BAE5B2C,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CACT/C,KAAMZ,EACNsD,eAAgBT,EAChBK,UAAU,yCAGjBxB,GAAiBA,EAAcJ,OAAS,IACrCwB,EAAAA,EAAAA,KAACc,EAAAA,EAAgB,CACbhD,KAAM3B,QAIlB6D,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,SAC3B3D,GAAmBA,EAAgBiC,OAAS,GACzCwB,EAAAA,EAAAA,KAACe,EAAAA,EAAmB,CAChBjD,KAAMvB,KAGVyD,EAAAA,EAAAA,KAACe,EAAAA,EAAmB,CAChBjD,KAAMiB,MAKjB/B,IAAYF,IACTkD,EAAAA,EAAAA,KAAA,OAAKgB,IAjGbC,IAChBnE,IAEAb,EAASiF,SAASjF,EAASiF,QAAQC,aAEvClF,EAASiF,QAAU,IAAIE,sBAAsBC,IACrCA,EAAQ,GAAGC,gBACX1E,GAAS2E,GAAaA,EAAW,GACrC,IAGAN,GAAMhF,EAASiF,QAAQM,QAAQP,GAAK,EAsFcQ,MAAO,CAAEC,OAAQ,OAAQC,gBAAiB,iBAEvE7E,IAAWkD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kCAAiCF,UAACF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAc,OAC1E5E,IAAWgD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,SAAC,qCAK3DF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACzB,UAAU,8BAEvB,C","sources":["pages/Forum/ForumCategoryPage/SubCategory.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from '../../../apicalls/axios';\r\nimport './style.scss'\r\nimport Header from '../../../layouts/Forum/Header'\r\nimport Footer from '../../../layouts/Forum/Footer'\r\nimport GTranslate from '../../../components/GTranslate';\r\nimport NewDiscussionBtn from '../../../components/Button/NewDiscussionBtn'\r\nimport ForumSubCategory from '../../../components/Forum/ForumSubCategoryCard'\r\nimport ForumDiscussionCard from '../../../components/Forum/ForumDiscussionCard'\r\nimport FilterNavigation from '../../../layouts/Forum/FilterNavigation'\r\nimport SearchDiscussionBox from '../../../components/SearchDiscussionBox'\r\nimport CustomSelect from '../../../components/FormField/CustomSelect';\r\nimport { ReactComponent as LoadingSpinner } from '../../../assets/images/loading-spinner.svg'\r\nimport SmallScreenNavMenu from '../../../components/Forum/SmallScreenNavMenu';\r\n\r\n\r\n\r\nconst ForumSubCategoryPage = () => {\r\n\r\n    const { id, name } = useParams()\r\n    const observer = useRef();\r\n    const [categoryData, setCategoryData] = useState({})\r\n    const [discussionFilter] = useState(true)\r\n    const [sortDiscussions, setSortDiscussions] = useState([])\r\n    const [discussions, setDiscussions] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [limit] = useState(10);\r\n    const [loading, setLoading] = useState(false);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const filterDiscussionOptions = ['Most Recent', 'Most Viewed', 'Most Liked'].map(option => (\r\n        {\r\n            label: option,\r\n            value: option.toLowerCase()\r\n        }));\r\n\r\n    useEffect(() => {\r\n        const fetchCategoryData = async () => {\r\n            if (loading || !hasMore) return; // Don't fetch if already loading or no more data\r\n\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.get(`/api/forumcategory/${id}/${name}?page=${page}&limit=${limit}`);\r\n                setCategoryData(response.data);\r\n\r\n                const newDiscussion = response.data.allDiscussions\r\n                setDiscussions((prevData) => {\r\n                    const uniqueData = newDiscussion.filter(\r\n                        (item) => !prevData.some((existingItem) => existingItem.discussion_id === item.discussion_id)\r\n                    );\r\n                    return [...prevData, ...uniqueData];\r\n                });\r\n                setHasMore(newDiscussion.length > 0);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchCategoryData()\r\n    }, [id, name])\r\n\r\n    // Intersection Observer callback\r\n    const lastElementRef = (node) => {\r\n        if (loading) return; // Don't observe if loading\r\n\r\n        if (observer.current) observer.current.disconnect(); // Disconnect previous observer\r\n\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            if (entries[0].isIntersecting) {\r\n                setPage((prevPage) => prevPage + 1); // Load next page\r\n            }\r\n        });\r\n\r\n        if (node) observer.current.observe(node); // Observe the last element\r\n    };\r\n\r\n    const subcategories = Array.isArray(categoryData?.subcategories) ? categoryData?.subcategories : [];\r\n    const descendingDiscussions = [...discussions].sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n    const mostRecent = [...discussions].sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n    // Sort by most viewed (descending by total views)\r\n    const mostViewed = [...discussions].sort((a, b) => {\r\n        const viewsA = a.post.reduce((acc, post) => acc + (post.views || 0), 0);\r\n        const viewsB = b.post.reduce((acc, post) => acc + (post.views || 0), 0);\r\n        return viewsB - viewsA;\r\n    });\r\n\r\n    // Sort by most liked (descending by total likes)\r\n    const mostLiked = [...discussions].sort((a, b) => {\r\n        const likesA = a.post.reduce((acc, post) => acc + (post.likes ? post.likes.length : 0), 0);\r\n        const likesB = b.post.reduce((acc, post) => acc + (post.likes ? post.likes.length : 0), 0);\r\n        return likesB - likesA;\r\n    });\r\n\r\n    const handleOptionSelect = (option) => {\r\n\r\n        if (option.value === 'most recent') {\r\n            setSortDiscussions(mostRecent);\r\n        }\r\n\r\n        if (option.value === 'most viewed') {\r\n            setSortDiscussions(mostViewed);\r\n        }\r\n\r\n        if (option.value === 'most liked') {\r\n            setSortDiscussions(mostLiked);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='forum-page-container'>\r\n                <Header />\r\n                <div>\r\n                    <div className=\"forum-category-page-container\">\r\n                        <FilterNavigation\r\n                            sortOptions={filterDiscussionOptions}\r\n                            discussionFilter={discussionFilter}\r\n                            onOptionSelect={handleOptionSelect}\r\n                        />\r\n                        <div className='forum-category-page-col2'>\r\n                            <div className='language-selector-container'>\r\n                                <GTranslate />\r\n                            </div>\r\n                            <SearchDiscussionBox className='custom-forum-search-box' />\r\n                            <SmallScreenNavMenu />\r\n                            <div className=\"discussions-container\">\r\n                                <div className=\"category-container\">\r\n                                    <div className=\"category-name\">\r\n                                        <h4>{categoryData.name}</h4>\r\n                                        <div className='start-discussion-btn-container'>\r\n                                            <NewDiscussionBtn label='Start a discussion' />\r\n                                        </div>\r\n                                        <CustomSelect\r\n                                            data={filterDiscussionOptions}\r\n                                            onOptionSelect={handleOptionSelect}\r\n                                            className='discussion-sortby-dropdown-select'\r\n                                        />\r\n                                    </div>\r\n                                    {subcategories && subcategories.length > 0 && (\r\n                                        <ForumSubCategory\r\n                                            data={categoryData}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                                <div className='discussion-list'>\r\n                                    {sortDiscussions && sortDiscussions.length > 0 ? (\r\n                                        <ForumDiscussionCard\r\n                                            data={sortDiscussions}\r\n                                        />\r\n                                    ) : (\r\n                                        <ForumDiscussionCard\r\n                                            data={descendingDiscussions}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                                {/* Trigger for the next page */}\r\n                                {hasMore && !loading && (\r\n                                    <div ref={lastElementRef} style={{ height: '20px', backgroundColor: 'transparent' }}></div>\r\n                                )}\r\n                                {loading && <div className='infinite-scroll-loading-spinner'><LoadingSpinner /></div>}\r\n                                {!hasMore && <div className='no-more-data'>No more data to load</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer className='forum-category-footer' />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ForumSubCategoryPage;"],"names":["ForumSubCategoryPage","id","name","useParams","observer","useRef","categoryData","setCategoryData","useState","discussionFilter","sortDiscussions","setSortDiscussions","discussions","setDiscussions","page","setPage","limit","loading","setLoading","hasMore","setHasMore","filterDiscussionOptions","map","option","label","value","toLowerCase","useEffect","async","response","axios","get","concat","data","newDiscussion","allDiscussions","prevData","uniqueData","filter","item","some","existingItem","discussion_id","length","error","console","fetchCategoryData","subcategories","Array","isArray","descendingDiscussions","sort","a","b","Date","created_at","mostRecent","mostViewed","viewsA","post","reduce","acc","views","mostLiked","likesA","likes","handleOptionSelect","_jsx","_Fragment","children","_jsxs","className","Header","FilterNavigation","sortOptions","onOptionSelect","GTranslate","SearchDiscussionBox","SmallScreenNavMenu","NewDiscussionBtn","CustomSelect","ForumSubCategory","ForumDiscussionCard","ref","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","style","height","backgroundColor","LoadingSpinner","Footer"],"sourceRoot":""}