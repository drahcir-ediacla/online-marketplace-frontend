{"version":3,"file":"static/js/3110.28cef7dd.chunk.js","mappings":"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","sources":["assets/images/group-message-icon.svg","assets/images/three-dots.svg","components/Button/BtnCategory.jsx","assets/images/burger-btn_v2.svg","components/Forum/CategoryMenuBtn/index.jsx","assets/images/tags-icon.svg","components/Forum/FilterTagButton/index.jsx","components/Forum/SmallScreenNavMenu/index.jsx","components/QuillEditor/index.jsx","components/Forum/SkeletonLoading/SideNavCategoriesSkeleton.jsx","layouts/Forum/FilterNavigation/index.jsx","assets/images/link-icon.svg","assets/images/reply-icon.svg","components/Button/BtnReply.jsx","pages/Forum/Discussion/index.jsx","redux/actions/forumTagsActions.js"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgGroupMessageIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.96087 3.68213H3.8358C3.62759 3.68213 3.42739 3.69014 3.2352 3.71416C1.08107 3.89834 0 5.1716 0 7.51793V10.7211C0 13.9243 1.28127 14.5569 3.8358 14.5569H4.15612C4.33229 14.5569 4.56452 14.677 4.66862 14.8132L5.62957 16.0944C6.05399 16.663 6.74268 16.663 7.1671 16.0944L8.12805 14.8132C8.24817 14.653 8.44036 14.5569 8.64056 14.5569H8.96087C11.3072 14.5569 12.5805 13.4838 12.7646 11.3217C12.7887 11.1295 12.7967 10.9293 12.7967 10.7211V7.51793C12.7967 4.9634 11.5154 3.68213 8.96087 3.68213ZM3.60357 10.0885C3.15512 10.0885 2.80278 9.72812 2.80278 9.28768C2.80278 8.84724 3.16313 8.48689 3.60357 8.48689C4.044 8.48689 4.40436 8.84724 4.40436 9.28768C4.40436 9.72812 4.044 10.0885 3.60357 10.0885ZM6.39834 10.0885C5.94989 10.0885 5.59754 9.72812 5.59754 9.28768C5.59754 8.84724 5.9579 8.48689 6.39834 8.48689C6.83877 8.48689 7.19913 8.84724 7.19913 9.28768C7.19913 9.72812 6.84678 10.0885 6.39834 10.0885ZM9.20111 10.0885C8.75267 10.0885 8.40032 9.72812 8.40032 9.28768C8.40032 8.84724 8.76068 8.48689 9.20111 8.48689C9.64155 8.48689 10.0019 8.84724 10.0019 9.28768C10.0019 9.72812 9.64155 10.0885 9.20111 10.0885Z\",\n    fill: \"#404040\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 4.3148V7.51798C16 9.11956 15.5035 10.2086 14.5105 10.8092C14.2703 10.9534 13.99 10.7612 13.99 10.4809L13.998 7.51798C13.998 4.3148 12.1642 2.48099 8.96105 2.48099L4.08426 2.48899C3.80399 2.48899 3.6118 2.20872 3.75594 1.96848C4.35653 0.975496 5.44561 0.479004 7.03915 0.479004H12.1642C14.7188 0.479004 16 1.76027 16 4.3148Z\",\n    fill: \"#404040\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGroupMessageIcon);\nexport default __webpack_public_path__ + \"static/media/group-message-icon.f133430c24a2f4cfee34ce9844b38f82.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgThreeDots(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 4 15\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.0263 11.1111C3.11535 11.1111 3.99998 11.9826 3.99998 13.0556C3.99998 14.1285 3.11535 15 2.0263 15C0.937246 15 0.0526123 14.1285 0.0526123 13.0556C0.0526123 11.9826 0.937246 11.1111 2.0263 11.1111ZM2.0263 5.55556C3.11535 5.55556 3.99998 6.42708 3.99998 7.5C3.99998 8.57292 3.11535 9.44444 2.0263 9.44444C0.937246 9.44444 0.0526123 8.57292 0.0526123 7.5C0.0526123 6.42708 0.937246 5.55556 2.0263 5.55556ZM3.99998 1.94444C3.99998 3.01736 3.11535 3.88889 2.0263 3.88889C0.937246 3.88889 0.0526123 3.01736 0.0526123 1.94444C0.0526123 0.871528 0.937246 0 2.0263 0C3.11535 0 3.99998 0.871528 3.99998 1.94444Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.89fe5f0798e41e6623600554c61f5be1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst BtnCategory = ({ label, onClick, className, active }) => {\r\n  return (\r\n    <button className={`category-button ${active ? 'active' : ''} ${className}`} onClick={onClick} >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnCategory;","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBurgerBtnV2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 17,\n    viewBox: \"0 0 22 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.57143 15.6429H21M1 8.50003H21M9.57143 1.35718H21\",\n    stroke: \"#222222\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBurgerBtnV2);\nexport default __webpack_public_path__ + \"static/media/burger-btn_v2.d2d10c8a29a31722f1f8113e433cc870.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from '../../../apicalls/axios'\r\nimport './style.scss'\r\nimport { ReactComponent as CategoryBurgerBtn } from '../../../assets/images/burger-btn_v2.svg'\r\nimport { ReactComponent as GroupMsgIcon } from '../../../assets/images/group-message-icon.svg'\r\n\r\n\r\nconst CategoryMenuBtn = ({ data }) => {\r\n    const navigate = useNavigate()\r\n    const [categoriesMenuOpen, setCategoriesMenuOpen] = useState(false)\r\n    const [forumCategories, setForumCategories] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchForumCategories = async () => {\r\n            try {\r\n                const response = await axios.get('/api/fetchforumcategories')\r\n                setForumCategories(response.data)\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        }\r\n        fetchForumCategories();\r\n    }, [])\r\n\r\n    const toggleSsNavByCategory = () => {\r\n        setCategoriesMenuOpen((prev) => !prev)\r\n    }\r\n\r\n    const goToCategoryPage = (id, name) => {\r\n        navigate(`/forum/category/${id}/${name}`)\r\n        setCategoriesMenuOpen(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className='brwse-category-btn' onClick={toggleSsNavByCategory}><CategoryBurgerBtn /><span>Browse by Category</span></button>\r\n            {categoriesMenuOpen &&\r\n                <div className=\"ss-nav-category-container\">\r\n                    <div className=\"ss-nav-category-row1\">\r\n                        <span>Browse by Category</span>\r\n                        <button className=\"close-btn\" onClick={toggleSsNavByCategory}>\r\n                            <i className=\"fa fa-times\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"ss-nav-category-row2\">\r\n                        <ul className='forum-category-list'>\r\n                            {forumCategories?.categories?.map((category) => (\r\n                                <li className='forum-main-category' key={category.id}>\r\n                                    <button className='parent-forum-category' onClick={() => goToCategoryPage(category.id, category.name)}><div className='group-msg-icon'><GroupMsgIcon /></div>{category.name}</button>\r\n                                    {category.subcategories.map((subcategory) => (\r\n                                        <ul className='forum-subcategory' key={subcategory.id}>\r\n                                            <li>\r\n                                                <button onClick={() => goToCategoryPage(subcategory.id, subcategory.name)} className='first-level-forum-subcategory'>{subcategory.name}</button>\r\n                                            </li>\r\n                                        </ul>\r\n                                    ))}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"ss-nav-category-row3\"></div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryMenuBtn;","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTagsIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 17,\n    viewBox: \"0 0 20 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.6471 8.99751L11.1716 0.522071C11.0588 0.411268 10.9252 0.323891 10.7784 0.264978C10.6317 0.206064 10.4747 0.176779 10.3166 0.17881H9.01221L18.7671 9.82133L12.1952 16.4494C12.307 16.5613 12.4398 16.6501 12.586 16.7106C12.7322 16.7712 12.8889 16.8024 13.0471 16.8024C13.2053 16.8024 13.362 16.7712 13.5082 16.7106C13.6543 16.6501 13.7871 16.5613 13.899 16.4494L19.6471 10.7013C19.759 10.5895 19.8477 10.4567 19.9083 10.3105C19.9689 10.1643 20 10.0076 20 9.84942C20 9.69119 19.9689 9.53452 19.9083 9.38835C19.8477 9.24217 19.759 9.10936 19.6471 8.99751Z\",\n    fill: \"#404040\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.82592 4.8408C4.28435 4.8408 4.65599 4.46917 4.65599 4.01073C4.65599 3.5523 4.28435 3.18066 3.82592 3.18066C3.36748 3.18066 2.99585 3.5523 2.99585 4.01073C2.99585 4.46917 3.36748 4.8408 3.82592 4.8408Z\",\n    fill: \"#404040\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.2893 9.02237L7.81388 0.540696C7.7026 0.426511 7.56966 0.33568 7.42285 0.273522C7.27603 0.211365 7.11828 0.179132 6.95884 0.178711H1.20454C0.885073 0.178711 0.578694 0.305617 0.3528 0.531511C0.126906 0.757405 0 1.06378 0 1.38325V7.13755C0.000432235 7.2955 0.0320844 7.4518 0.0931361 7.59746C0.154188 7.74313 0.243435 7.87529 0.355744 7.98635L8.83742 16.468C8.94928 16.5799 9.08209 16.6687 9.22826 16.7293C9.37443 16.7898 9.53111 16.821 9.68933 16.821C9.84756 16.821 10.0042 16.7898 10.1504 16.7293C10.2966 16.6687 10.4294 16.5799 10.5412 16.468L16.2893 10.72C16.5134 10.4943 16.6392 10.1892 16.6392 9.87116C16.6392 9.55314 16.5134 9.24802 16.2893 9.02237ZM9.72366 15.588L1.25446 7.13755V1.42693H6.93388L15.4093 9.83996L9.72366 15.588Z\",\n    fill: \"#404040\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTagsIcon);\nexport default __webpack_public_path__ + \"static/media/tags-icon.9f32dd0b48f9b297ee322b77a60eac84.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from \"react\";\r\nimport axios from \"../../../apicalls/axios\";\r\nimport \"./style.scss\"\r\nimport { ReactComponent as TagsIcon } from '../../../assets/images/tags-icon.svg'\r\nimport FilterTagModal from \"../../Modal/FilterTagModal\";\r\n\r\nconst FilterTagButton = ({ label }) => {\r\n    const [filterTagModalOpen, setFilterTagModalOpen] = useState(false);\r\n    const [tags, setTags] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchForumTags = async () => {\r\n            try {\r\n                const response = await axios.get('/api/fetchforumtags')\r\n                setTags(response.data)\r\n            } catch (err) {\r\n                console.log('Error fetching forum tags', err)\r\n            }\r\n        }\r\n        fetchForumTags()\r\n    }, [])\r\n\r\n    const toggleTagModal = () => {\r\n        setFilterTagModalOpen((prev) => !prev)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {filterTagModalOpen && <FilterTagModal onClick={toggleTagModal} tagsData={tags} />}\r\n            <button className='popular-tags-btn-label' onClick={toggleTagModal}><TagsIcon />{label}</button>\r\n            <button className='popular-tags-btn' onClick={toggleTagModal}><TagsIcon /></button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterTagButton;","import './style.scss'\r\nimport CategoryMenuBtn from '../CategoryMenuBtn'\r\nimport FilterTagButton from '../../../components/Forum/FilterTagButton'\r\nimport NewDiscussionBtn from '../../../components/Button/NewDiscussionBtn'\r\n\r\n\r\nconst SmallScreenNavMenu = ({ onClickBrwseByCategory }) => {\r\n\r\n    return (\r\n        <>\r\n            <div className='ss-nav-btn-container'>\r\n                <div className='ss-nav-btn-box'>\r\n                    <div className='ss-nav-btn-box-row1'>\r\n                        <CategoryMenuBtn />\r\n                        <FilterTagButton label='Popular Tags' />\r\n                    </div>\r\n                    <div className='start-discussion'><NewDiscussionBtn label='Start a discussion' /></div>\r\n                    <div className='new-discussion'><NewDiscussionBtn label='New' /></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SmallScreenNavMenu","import { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './style.scss'\r\n\r\n\r\n\r\n\r\nconst QuillEditor = ({ className, value, onChange, id, name, placeholder }) => {\r\n\r\n    // const [value, setValue] = useState('')\r\n    const [isHtmlMode, setIsHtmlMode] = useState(false);\r\n\r\n    const modules = {\r\n        toolbar: [\r\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n            [{ font: [] }],\r\n            [{ size: [] }],\r\n            ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n            [\r\n                { list: 'ordered' },\r\n                { list: 'bullet' },\r\n                { indent: '-1' },\r\n                { indent: '+1' },\r\n            ],\r\n            [\"link\", \"image\", \"video\"],\r\n            ['html'],\r\n        ]\r\n    }\r\n\r\n    const toggleHtmlMode = () => {\r\n        setIsHtmlMode(!isHtmlMode);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ReactQuill\r\n                id={id}\r\n                name={name}\r\n                theme=\"snow\"\r\n                value={value}\r\n                onChange={onChange}\r\n                modules={modules}\r\n                className={className}\r\n                placeholder={placeholder}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuillEditor","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport './style.scss'\r\n\r\nconst SideNavCategoriesSkeleton = ({ menus }) => {\r\n    return Array(menus)\r\n        .fill(0)\r\n        .map((_, i) => (\r\n                    <Skeleton height={35} width={205} className='side-nav-categories' />\r\n        ));\r\n};\r\n\r\nexport default SideNavCategoriesSkeleton;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../../../apicalls/axios'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { getUser } from '../../../redux/actions/userActions';\r\nimport { getForumCategories } from '../../../redux/actions/forumCategoriesActions';\r\nimport { getAllForumTags } from '../../../redux/actions/forumTagsActions';\r\nimport './style.scss'\r\nimport { Link, useParams, useNavigate, NavLink, useLocation } from 'react-router-dom'\r\nimport DefaultAvatar from '../../../assets/images/avatar-icon.png'\r\nimport CustomSelect from '../../../components/FormField/CustomSelect'\r\nimport BtnCategory from '../../../components/Button/BtnCategory'\r\nimport FilterTagModal from '../../../components/Modal/FilterTagModal'\r\nimport SideNavCategoriesSkeleton from '../../../components/Forum/SkeletonLoading/SideNavCategoriesSkeleton'\r\nimport LoginModal from '../../../components/Modal/LoginModal'\r\n\r\n\r\nconst FilterNavigation = ({\r\n    createdDiscussionsTab,\r\n    joinedDiscussionsTab,\r\n    userActivityTab,\r\n    forumNotificationsTab,\r\n    addDiscussionsBtn,\r\n    discussionFilter,\r\n    createdDiscussionsData,\r\n    joinedDiscussionsData,\r\n    activitiesData,\r\n    paramsUserData,\r\n    notifications,\r\n    sortOptions,\r\n    onOptionSelect,\r\n    emptySortDiscussions,\r\n    className,\r\n}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const authUser = useSelector((state) => state.user.data);\r\n    const categories = useSelector((state) => state.forumcategories.data);\r\n    const tags = useSelector((state) => state.forumtags.data);\r\n    const { userId, tab } = useParams();\r\n    const userIdNumber = Number(userId);\r\n    const authUserIdNumber = Number(authUser?.id)\r\n    const navigate = useNavigate();\r\n    const location = useLocation()\r\n    const [showFilter, setShowFilter] = useState(discussionFilter)\r\n    const [activeCategory, setActiveCategory] = useState([])\r\n    const [selectedTags, setSelectedTags] = useState(\r\n        Array.isArray(location.state) ? location.state : []\r\n    );\r\n    const [filterTagModalOpen, setFilterTagModalOpen] = useState(false);\r\n    const [user, setUser] = useState({})\r\n    const [totalCreatedDiscussions, setTotalCreatedDiscussions] = useState(0)\r\n    const [totalJoinedDiscussions, setTotalJoinedDiscussions] = useState(0);\r\n    const [totalUnreadNotifications, setTotalUnreadNotifications] = useState({})\r\n    const [loadingCategories, setLoadingCategories] = useState(true)\r\n    const [loadingTags, setLoadingTags] = useState(true)\r\n    const [loginModalOpen, setLoginModalOpen] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(getUser())\r\n    // }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!categories) {\r\n            setLoadingCategories(true)\r\n            dispatch(getForumCategories());\r\n        } else {\r\n            setLoadingCategories(false)\r\n        }\r\n    }, [dispatch, categories]);\r\n\r\n    useEffect(() => {\r\n        if (tags.length === 0) {\r\n            setLoadingTags(true)\r\n            dispatch(getAllForumTags());\r\n        } else {\r\n            setLoadingTags(false)\r\n        }\r\n    }, [dispatch, tags]);\r\n\r\n    useEffect(() => {\r\n        // If location.state is not null or undefined, update state\r\n        if (location.state && location.state.selectedTags) {\r\n            setSelectedTags(location.state.selectedTags);\r\n        }\r\n    }, [location.state]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/user/${userId}`)\r\n\r\n                // Destructure only the properties you want\r\n                const { id, display_name, profile_pic, createdAt } = response.data;\r\n                setUser({ id, display_name, profile_pic, createdAt })\r\n                paramsUserData(response.data)\r\n            } catch (error) {\r\n                console.log('Error fetching data:', error)\r\n            }\r\n        }\r\n        fetchUserData()\r\n    }, [userId, paramsUserData])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const fetchForumCategories = async () => {\r\n    //         try {\r\n    //             // setLoadingCategories(true)\r\n    //             // const responseCategories = await axios.get('/api/fetchforumcategories')\r\n    //             // setCategories(responseCategories.data)\r\n\r\n    //             // const responseTags = await axios.get('/api/fetchforumtags')\r\n    //             // setTags(responseTags.data)\r\n    //             // setLoadingCategories(false)\r\n\r\n    //             // Check if 'categoriesData' is a function before calling it\r\n    //             // 'categoriesData' is expected to be a function passed as a prop for handling the fetched data\r\n    //             // If 'categoriesData' is not a function, it logs a message in the console\r\n    //             if (typeof categoriesData === 'function') {\r\n    //                 categoriesData(categories);\r\n    //                 setLoadingCategories(false)\r\n    //             }\r\n    //             if (typeof tagsData === 'function') {\r\n    //                 tagsData(tags);\r\n    //                 setLoadingCategories(false)\r\n    //             } else {\r\n    //                 setLoadingCategories(false)\r\n    //                 console.log('categoriesData is not a function');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             setLoadingCategories(false)\r\n    //             console.log('Error fetching data:', error)\r\n    //         }\r\n    //     }\r\n    //     fetchForumCategories()\r\n    // }, [categoriesData, tagsData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (activeCategory === null) {\r\n            setActiveCategory(categories[0].id); // or categories[0].name based on your logic\r\n        }\r\n    }, [categories, activeCategory]);\r\n\r\n    useEffect(() => {\r\n        const fetchCreatedDiscussions = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/${userId}/created/discussion`)\r\n                const descendingCD = response.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n                setTotalCreatedDiscussions(response.data.length)\r\n                createdDiscussionsData(descendingCD)\r\n            } catch (err) {\r\n                console.log('Error fetching user created discussions:', err)\r\n            }\r\n        }\r\n        fetchCreatedDiscussions()\r\n    }, [userId, createdDiscussionsData])\r\n\r\n    useEffect(() => {\r\n        const fetchJoinedDiscussions = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/${userId}/joined/discussion`)\r\n                const descendingJD = response.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n                setTotalJoinedDiscussions(response.data.length)\r\n                joinedDiscussionsData(descendingJD)\r\n            } catch (err) {\r\n                console.log('Error fetching user created discussions:', err)\r\n            }\r\n        }\r\n        fetchJoinedDiscussions()\r\n    }, [userId, joinedDiscussionsData])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchForumActivities = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/forum-activities/${userId}`)\r\n                const sortedActivities = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n                activitiesData(sortedActivities)\r\n            } catch (err) {\r\n                console.log('Error fetching forum activities:', err)\r\n            }\r\n        }\r\n        fetchForumActivities()\r\n    }, [userId, activitiesData])\r\n\r\n    useEffect(() => {\r\n        const getTotalUnreadNotifications = async () => {\r\n            try {\r\n                const response = await axios.get('/api/total-forum-notifications')\r\n                setTotalUnreadNotifications(response.data)\r\n            } catch (error) {\r\n                console.log('Error fetching total unread notifications', error)\r\n            }\r\n        }\r\n        getTotalUnreadNotifications()\r\n    }, [notifications])\r\n\r\n\r\n    useEffect(() => {\r\n        switch (tab) {\r\n            case 'created_discussions':\r\n                createdDiscussionsTab();\r\n                setShowFilter(true);\r\n                break;\r\n            case 'joined_discussions':\r\n                joinedDiscussionsTab();\r\n                setShowFilter(true);\r\n                break;\r\n            case 'user_activity':\r\n                userActivityTab();\r\n                setShowFilter(false);\r\n                break;\r\n            case 'notifications':\r\n                forumNotificationsTab();\r\n                setShowFilter(false);\r\n                break;\r\n            case 'add_discussions':\r\n                addDiscussionsBtn();\r\n                setShowFilter(false);\r\n                break;\r\n            default:\r\n                // Optional: Handle unknown tabs\r\n                break;\r\n        }\r\n    }, [tab, navigate, createdDiscussionsTab, joinedDiscussionsTab, userActivityTab, forumNotificationsTab, addDiscussionsBtn]);\r\n\r\n\r\n\r\n    const handleCreatedDiscussions = () => {\r\n        navigate(`/forum/profile/${userId}/created_discussions`);\r\n        createdDiscussionsTab(); // Call the function\r\n    };\r\n    const handleJoinedDiscussions = () => {\r\n        navigate(`/forum/profile/${userId}/joined_discussions`);\r\n        joinedDiscussionsTab(); // Call the function\r\n    };\r\n    const handleUserActivity = () => {\r\n        navigate(`/forum/profile/${userId}/user_activity`);\r\n        userActivityTab(); // Call the function\r\n    };\r\n    const handleForumNotifications = () => {\r\n        navigate(`/forum/profile/${userId}/notifications`);\r\n        forumNotificationsTab(); // Call the function\r\n    };\r\n\r\n    const handleSelectedCategory = () => {\r\n        if (typeof emptySortDiscussions === 'function') {\r\n            emptySortDiscussions([]);\r\n        }\r\n    }\r\n\r\n    const toggleTag = (tag_id) => {\r\n        setSelectedTags((prevSelectedTags) => {\r\n            const updatedTags = prevSelectedTags.includes(tag_id)\r\n                ? prevSelectedTags.filter((t) => t !== tag_id)\r\n                : [...prevSelectedTags, tag_id];\r\n\r\n            if (typeof emptySortDiscussions === 'function') {\r\n                emptySortDiscussions([]);\r\n            }\r\n\r\n            // Navigate with the updatedTags directly\r\n            navigate('/forum/filtertags', { state: { selectedTags: updatedTags } });\r\n\r\n            return updatedTags;\r\n        });\r\n    };\r\n\r\n    const toggleLoginModal = () => {\r\n        setLoginModalOpen((prevLoginModalOpen) => !prevLoginModalOpen)\r\n    }\r\n\r\n    const toggleTagModal = () => {\r\n        setFilterTagModalOpen((prev) => !prev)\r\n    }\r\n\r\n    const clearAllTags = () => {\r\n        const updatedTags = []; // No tags selected\r\n        setSelectedTags(updatedTags);\r\n        navigate('/forum/filtertags', { state: { selectedTags: updatedTags } });\r\n    };\r\n\r\n\r\n    const originalDate = user?.createdAt || '';\r\n    const formattedDate = new Date(originalDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long' });\r\n\r\n    return (\r\n        <>\r\n            {loginModalOpen && <LoginModal onClick={toggleLoginModal} />}\r\n            {filterTagModalOpen && <FilterTagModal onClick={toggleTagModal} tagsData={tags} />}\r\n            <div className={`forum-category-page-filter-nav ${className}`}>\r\n                {!authUser ? (\r\n                    <>\r\n                        <div className='forum-category-page-row1 not-authenticated'>\r\n                            <p>Join our community, elevate your marketplace experience!</p>\r\n                            <button type='button' className='forum-login-btn' onClick={toggleLoginModal}>Sign In</button>\r\n                            <p>Don’t have a Yogeek account? <Link to='/registerbyemail'>Sign up</Link></p>\r\n                        </div>\r\n                        {userId && <div className='forum-category-page-row1'>\r\n                            <div className='forum-category-page-row1-row1'>\r\n                                <img src={user.profile_pic || DefaultAvatar} alt=\"\" className='forum-profile-pic' />\r\n                                <div className='user-display-name'>\r\n                                    <p>{user.display_name}</p>\r\n                                    <small>Joined in {formattedDate}</small>\r\n                                </div>\r\n                            </div>\r\n                            <ul className='forum-profile-menu'>\r\n                                <li onClick={handleCreatedDiscussions}>Created Discussions <span className='forum-activity-counter'>({totalCreatedDiscussions})</span></li>\r\n                                <li onClick={handleJoinedDiscussions}>Joined Discussions <span className='forum-activity-counter'>({totalJoinedDiscussions})</span></li>\r\n                                <li onClick={handleUserActivity}>Latest Activity</li>\r\n                                {authUserIdNumber === userIdNumber ? (\r\n                                    <li onClick={handleForumNotifications} className='forum-notifications'>Notifications {totalUnreadNotifications.totalCount > 0 && <div className='forum-notification-counter'>{totalUnreadNotifications.totalCount}</div>}</li>\r\n                                ) : (\r\n                                    null\r\n                                )}\r\n\r\n                            </ul>\r\n                        </div>\r\n                        }\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {userId && (\r\n                            <div className='forum-category-page-row1'>\r\n                                <div className='forum-category-page-row1-row1'>\r\n                                    <img src={user.profile_pic || DefaultAvatar} alt=\"\" className='forum-profile-pic' />\r\n                                    <div className='user-display-name'>\r\n                                        <p>{user.display_name}</p>\r\n                                        <small>Joined in {formattedDate}</small>\r\n                                    </div>\r\n                                </div>\r\n                                <ul className='forum-profile-menu'>\r\n                                    <li onClick={handleCreatedDiscussions}>Created Discussions <span className='forum-activity-counter'>({totalCreatedDiscussions})</span></li>\r\n                                    <li onClick={handleJoinedDiscussions}>Joined Discussions <span className='forum-activity-counter'>({totalJoinedDiscussions})</span></li>\r\n                                    <li onClick={handleUserActivity}>Latest Activity</li>\r\n                                    {authUserIdNumber === userIdNumber ? (\r\n                                        <li onClick={handleForumNotifications} className='forum-notifications'>Notifications {totalUnreadNotifications.totalCount > 0 && <div className='forum-notification-counter'>{totalUnreadNotifications.totalCount}</div>}</li>\r\n                                    ) : (\r\n                                        null\r\n                                    )}\r\n\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n                {showFilter && (\r\n                    <>\r\n                        <div className='forum-sortby'>\r\n                            <label>SORT BY</label>\r\n                            <CustomSelect\r\n                                data={sortOptions}\r\n                                onOptionSelect={onOptionSelect}\r\n                                className='forum-sortby-dropdown-select'\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <div className='forum-category-page-row2'>\r\n                    <div className='section-label-container'>\r\n                        <label>CATEGORIES</label>\r\n                    </div>\r\n                    <div className=\"forum-category-btn-container\">\r\n                        {loadingCategories &&\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '3px' }}>\r\n                                <SideNavCategoriesSkeleton menus={8} />\r\n                            </div>\r\n                        }\r\n                        {categories?.categories?.map(category => (\r\n                            <NavLink activeclassname=\"active\" key={category.id} className='forum-category-menu' to={`/forum/category/${category.id}/${category.name}`} onClick={handleSelectedCategory}>{category.name}</NavLink>\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='forum-category-page-row3'>\r\n                    <div className='section-label-container'>\r\n                        <label>POPULAR TAGS</label>\r\n                    </div>\r\n                    <div className=\"forum-category-btn-container\">\r\n                        {loadingTags &&\r\n                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '3px' }}>\r\n                                <SideNavCategoriesSkeleton menus={8} />\r\n                            </div>\r\n                        }\r\n                        {tags.slice(0, 10).map(tag => (\r\n                            <BtnCategory\r\n                                key={tag.id}\r\n                                onClick={() => toggleTag(tag.id)}\r\n                                label={tag.name}\r\n                                className={`tag-btn ${selectedTags.includes(tag.id) ? 'active' : ''}`}\r\n                            />\r\n                        ))}\r\n                        <div className='more-tags' style={{ justifyContent: selectedTags.length > 0 ? ('space-between') : ('end') }}>\r\n                            {selectedTags && selectedTags.length > 0 && <button onClick={clearAllTags}>Clear all</button>}\r\n                            <button onClick={toggleTagModal}>Select more tags</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default FilterNavigation;","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLinkIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 22 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.2222 1H15.4444C18.5127 1 21 3.46244 21 6.5C21 9.53754 18.5127 12 15.4444 12H13.2222M8.77778 1H6.55556C3.48731 1 1 3.46244 1 6.5C1 9.53754 3.48731 12 6.55556 12H8.77778M6.55556 6.5H15.4444\",\n    stroke: \"black\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLinkIcon);\nexport default __webpack_public_path__ + \"static/media/link-icon.0b0ee5be62d3f8bc1a00bfd0c8f25113.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgReplyIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 17,\n    viewBox: \"0 0 20 17\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.31424 4.76667V0.5L0.87793 7.96667L8.31424 15.4333V11.06C13.6259 11.06 17.3441 12.7667 19.9999 16.5C18.9376 11.1667 15.7506 5.83333 8.31424 4.76667Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgReplyIcon);\nexport default __webpack_public_path__ + \"static/media/reply-icon.765b5665fb6b19e59975b91d845fbaca.svg\";\nexport { ForwardRef as ReactComponent };","import './Button.css'\r\nimport { ReactComponent as ReplyIcon } from '../../assets/images/reply-icon.svg'\r\n\r\nconst ReplyBtn = ({ className, label, onClick }) => {\r\n    return (\r\n        <>\r\n            <button className={`default-reply-btn-style ${className}`} onClick={onClick}>\r\n                <div className='reply-icon-style'><ReplyIcon /></div>\r\n                <span>{label}</span>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReplyBtn;","import { useState, useEffect, useRef } from 'react'\r\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport './style.scss'\r\nimport axios from '../../../apicalls/axios'\r\n// import { getUser } from '../../../redux/actions/userActions';\r\nimport { enUS } from 'date-fns/locale';\r\nimport Header from '../../../layouts/Forum/Header'\r\nimport Footer from '../../../layouts/Forum/Footer';\r\nimport FilterNavigation from '../../../layouts/Forum/FilterNavigation'\r\nimport GTranslate from '../../../components/GTranslate';\r\nimport LoginModal from '../../../components/Modal/LoginModal';\r\nimport { Setloader } from '../../../redux/reducer/loadersSlice';\r\nimport QuillEditor from '../../../components/QuillEditor';\r\nimport { ReactComponent as Like } from '../../../assets/images/like-icon.svg'\r\nimport { ReactComponent as MsgIcon } from '../../../assets/images/message-icon.svg'\r\nimport { ReactComponent as EyeIcon } from '../../../assets/images/eye-solid.svg'\r\nimport { ReactComponent as ThreeDots } from '../../../assets/images/three-dots.svg';\r\nimport { ReactComponent as LinkIcon } from '../../../assets/images/link-icon.svg';\r\nimport DefaultAvatar from '../../../assets/images/avatar-icon.png'\r\nimport SearchDiscussionBox from '../../../components/SearchDiscussionBox'\r\nimport CustomSelect from '../../../components/FormField/CustomSelect';\r\nimport NewDiscussionBtn from '../../../components/Button/NewDiscussionBtn'\r\nimport BtnGreen from '../../../components/Button/BtnGreen';\r\nimport BtnClear from '../../../components/Button/BtnClear';\r\nimport BtnReply from '../../../components/Button/BtnReply';\r\nimport AlertMessage from '../../../components/AlertMessage';\r\nimport SmallScreenNavMenu from '../../../components/Forum/SmallScreenNavMenu';\r\n\r\n\r\n\r\nconst Discussion = () => {\r\n\r\n    const { discussionId } = useParams();\r\n    const location = useLocation();\r\n    const repliedPostId = new URLSearchParams(location.search).get('repliedPostId');\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n    const user = useSelector((state) => state.user.data);\r\n    const [openReply, setOpenReply] = useState({});\r\n    const [showMoreContent, setShowMoreContent] = useState({})\r\n    const [showMoreReplies, setShowMoreReplies] = useState({})\r\n    const [contentValue, setContentValue] = useState('')\r\n    const [activePostId, setActivePostId] = useState(null)\r\n    const [parentPostId, setParentPostId] = useState(null);\r\n    const [postId, setPostId] = useState(null)\r\n    const [discussionStarter, setDiscussionStarter] = useState(null)\r\n    const [allPost, setAllPost] = useState([]);\r\n    const [firstLevelReplies, setFirstLevelReplies] = useState([])\r\n    const [loginModalOpen, setLoginModalOpen] = useState(false)\r\n    const [threeDotsOption, setThreeDotsOption] = useState({})\r\n    const [alert, setAlert] = useState({ show: false, type: '', message: '' });\r\n    const [selectedSort, setSelectedSort] = useState('')\r\n    const [sortDiscussions, setSortDiscussions] = useState([])\r\n    const filterDiscussionOptions = ['Most Recent', 'Most Liked'].map(option => (\r\n        {\r\n            label: option,\r\n            value: option.toLowerCase()\r\n        }));\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(getUser())\r\n    // }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const fetchDiscussionData = async () => {\r\n            if (!discussionId) return;  // Prevent API call if discussionId is falsy\r\n\r\n            dispatch(Setloader(true));\r\n            try {\r\n                const response = await axios.get(`/api/discussions/${discussionId}/posts`);\r\n                setAllPost(response.data);\r\n\r\n                const replies = response.data[0].replies.length > 0 ? response.data[0].replies : [];\r\n                setFirstLevelReplies(replies)\r\n\r\n                const firstPostId = response.data.length > 0 ? response.data[0].post_id : null;\r\n                setPostId(firstPostId);\r\n\r\n                if (response.data[0].parent_post_id === null) {\r\n                    const discussionStarterUserId = response.data.length > 0 ? response.data[0].user_id : null;\r\n                    setDiscussionStarter(discussionStarterUserId)\r\n                }\r\n\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 404) {\r\n                    navigate('/404'); // Navigate to \"Page Not Found\" if 404\r\n                } else {\r\n                    console.error(\"Error fetching data:\", error);\r\n                }\r\n            } finally {\r\n                dispatch(Setloader(false));  // Ensure loader is turned off\r\n            }\r\n        }\r\n\r\n        fetchDiscussionData();\r\n\r\n    }, [discussionId, dispatch, navigate]);  // Added dispatch and navigate to dependencies\r\n\r\n    useEffect(() => {\r\n        const handleGlobalClick = (event) => {\r\n            if (event.target.closest('.three-dots') || event.target.closest('.three-dots-option')) {\r\n                return;\r\n            }\r\n\r\n            // Close the options for all products\r\n            setThreeDotsOption({});\r\n        };\r\n\r\n        document.addEventListener('click', handleGlobalClick);\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handleGlobalClick);\r\n        };\r\n    }, []);\r\n\r\n\r\n    // Set openReply based on totalReplies\r\n    useEffect(() => {\r\n        const newOpenReply = {};\r\n        allPost.forEach(post => {\r\n            if (post.replies.length === 0) {\r\n                newOpenReply[post.post_id] = true; // Set to true if no replies\r\n            }\r\n        });\r\n        setOpenReply(newOpenReply);\r\n    }, [allPost]); // Run when allPost changes\r\n\r\n\r\n    useEffect(() => {\r\n        const incrementViews = async () => {\r\n            try {\r\n                await axios.post(`/api/post/${postId}/view`);\r\n            } catch (error) {\r\n                console.error('Error updating post views:', error);\r\n            }\r\n        };\r\n\r\n        incrementViews();\r\n    }, [postId]);\r\n\r\n    useEffect(() => {\r\n        if (repliedPostId && allPost.length > 0) {\r\n            expandRepliesToPost(repliedPostId); // Expand replies on initial load\r\n        }\r\n    }, [repliedPostId, allPost]); // Ensure this runs when allPost and repliedPostId are ready\r\n\r\n\r\n\r\n    const expandRepliesToPost = (repliedPostId) => {\r\n        allPost.forEach(post => {\r\n            post?.replies?.forEach(levelOneReply => {\r\n                if (levelOneReply?.post_id === repliedPostId) {\r\n                    scrollToPostAfterExpand(levelOneReply.post_id); // Scroll to this reply\r\n                } else if (levelOneReply?.replies?.some(levelTwoReply =>\r\n                    levelTwoReply?.post_id === repliedPostId ||\r\n                    levelTwoReply?.replies?.some(levelThreeReply => levelThreeReply?.post_id === repliedPostId))) {\r\n\r\n                    // Expand levelOne replies only if they haven't been expanded yet\r\n                    if (!showMoreReplies[levelOneReply?.post_id]) {\r\n                        toggleShowMoreReplies(levelOneReply?.post_id); // Expand level 1 replies\r\n                    }\r\n\r\n                    // Expand levelTwo replies\r\n                    levelOneReply?.replies?.forEach(levelTwoReply => {\r\n                        if (levelTwoReply?.post_id === repliedPostId) {\r\n                            scrollToPostAfterExpand(levelTwoReply?.post_id); // Scroll to this reply\r\n                        } else if (levelTwoReply?.replies?.some(levelThreeReply => levelThreeReply?.post_id === repliedPostId)) {\r\n\r\n                            // Expand levelTwo replies only if they haven't been expanded yet\r\n                            if (!showMoreReplies[levelTwoReply?.post_id]) {\r\n                                toggleShowMoreReplies(levelTwoReply?.post_id); // Expand level 2 replies\r\n                            }\r\n\r\n                            levelTwoReply?.replies?.forEach(levelThreeReply => {\r\n                                if (levelThreeReply?.post_id === repliedPostId) {\r\n                                    scrollToPostAfterExpand(levelThreeReply?.post_id); // Scroll to level 3 reply\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    const scrollToPostAfterExpand = (repliedPostId) => {\r\n        setTimeout(() => {\r\n            const postElement = document.getElementById(repliedPostId);\r\n            if (postElement) {\r\n                window.scrollTo(0, postElement.offsetTop);\r\n            }\r\n        }, 500); // Small delay to ensure DOM update after expanding\r\n    };\r\n\r\n    const handleLikeChange = async (postId, userId, discussionTitle, postCreatorName) => {\r\n        if (!user) {\r\n            setLoginModalOpen(true); // Open login modal if the user is not authenticated\r\n            return;\r\n        }\r\n\r\n        // Save the current scroll position\r\n        const currentScrollY = window.scrollY;\r\n\r\n\r\n        try {\r\n            await axios.post('/api/forum/post/like', {\r\n                post_id: postId,\r\n                discussion_id: discussionId,\r\n                user_id: userId,\r\n                title: discussionTitle,\r\n                postCreatorName: postCreatorName,\r\n            });\r\n\r\n            // Fetch the updated posts\r\n            const response = await axios.get(`/api/discussions/${discussionId}/posts`);\r\n            setAllPost(response.data);\r\n\r\n            const replies = response.data[0].replies || [];\r\n            setFirstLevelReplies(replies)\r\n\r\n            setSortDiscussions(handleOptionSelect(selectedSort))\r\n\r\n            // Get the element of the liked post\r\n            const postElement = document.getElementById(`post-${postId}`);\r\n            if (postElement) {\r\n                // Calculate the vertical center position\r\n                const elementPosition = postElement.getBoundingClientRect().top + window.scrollY;\r\n                const offset = (window.innerHeight / 2) - (postElement.offsetHeight / 2);\r\n\r\n                // Scroll to the post, centered in the viewport\r\n                window.scrollTo({\r\n                    top: elementPosition - offset,\r\n                    behavior: 'smooth' // Optional for smooth scrolling\r\n                });\r\n            } else {\r\n                // If the post element is not found, restore the previous scroll position\r\n                window.scrollTo(0, currentScrollY);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating likes:', error);\r\n        }\r\n    };\r\n\r\n    const descendingReplies = [...firstLevelReplies].sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n    const mostRecent = [...firstLevelReplies].sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n    const allReplies = sortDiscussions && sortDiscussions.length > 0 ? sortDiscussions : descendingReplies || [];\r\n\r\n    // Another method to set allReplies value\r\n    // let allReplies;\r\n    // if (sortDiscussions && sortDiscussions.length > 0) {\r\n    //     allReplies = sortDiscussions;\r\n    // } else {\r\n    //     allReplies = descendingReplies;\r\n    // }\r\n\r\n\r\n    // Sort by most liked (descending by total likes)\r\n    const mostLiked = [...firstLevelReplies].sort((a, b) => {\r\n        const likesA = a.likes ? a.likes.length : 0; // Get the number of likes for post a\r\n        const likesB = b.likes ? b.likes.length : 0; // Get the number of likes for post b\r\n        return likesB - likesA; // Sort in descending order\r\n    });\r\n\r\n    const handleOptionSelect = async (option) => {\r\n\r\n        if (option.value === 'most recent') {\r\n            setSortDiscussions(mostRecent);\r\n            setSelectedSort('most recent')\r\n        }\r\n\r\n        if (option.value === 'most liked') {\r\n            setSortDiscussions(mostLiked);\r\n            setSelectedSort('most liked')\r\n        }\r\n    };\r\n\r\n\r\n    const toggleLoginModal = () => {\r\n        setLoginModalOpen((prev) => !prev)\r\n    }\r\n\r\n    const loginModal = () => {\r\n        setLoginModalOpen(true)\r\n    }\r\n\r\n    const toggleShowMoreReplies = (postId) => {\r\n        setShowMoreReplies((prev => ({ ...prev, [postId]: !prev[postId] })))\r\n    }\r\n\r\n\r\n    const toggleContent = (postId) => {\r\n        setShowMoreContent((prev => ({ ...prev, [postId]: !prev[postId] })))\r\n    }\r\n\r\n    const toggleThreeDotsOption = (postId) => {\r\n        setThreeDotsOption({})\r\n        setThreeDotsOption((prev => ({ ...prev, [postId]: true })))\r\n    }\r\n\r\n    const toggleReply = (postId) => {\r\n        // Close the previous open reply editor \r\n        setOpenReply({});\r\n        // Open the specific reply editor\r\n        setOpenReply((prev) => ({\r\n            ...prev,\r\n            [postId]: !prev[postId],\r\n        }));\r\n\r\n        if (!openReply[postId]) {\r\n            // Only set the parentPostId and clear input when opening\r\n            setContentValue('');\r\n            setParentPostId(postId);\r\n        }\r\n    };\r\n\r\n    const copyPostURL = async (postId) => {\r\n        try {\r\n            // Hide any existing alert\r\n            setAlert({ show: false, type: '', message: '' });\r\n\r\n            const postURL = `${window.location.origin}/forum/discussion/${discussionId}?repliedPostId=${postId}`;\r\n            await navigator.clipboard.writeText(postURL);\r\n\r\n            // Show success alert\r\n            setAlert({ show: true, type: 'success', message: 'URL copied to clipboard!' });\r\n        } catch (error) {\r\n            console.error('Failed to copy URL: ', error);\r\n\r\n            // Show error alert\r\n            setAlert({ show: true, type: 'error', message: 'Failed to copy the URL. Please try again.' });\r\n        }\r\n    };\r\n\r\n\r\n    const cancelReply = () => {\r\n        setOpenReply({});\r\n        setContentValue('');\r\n        setParentPostId(null);\r\n        setActivePostId(null)\r\n    }\r\n\r\n    const handleContentChange = (id, value) => {\r\n        setActivePostId(id)\r\n        setContentValue(value);\r\n        setParentPostId(id);\r\n    };\r\n\r\n\r\n    const getTotalReplies = (posts) => {\r\n        let totalReplies = 0;\r\n\r\n        const countReplies = (post) => {\r\n            totalReplies += post.replies.length;\r\n            post.replies.forEach(countReplies); // Recursively count replies\r\n        };\r\n\r\n        posts.forEach(countReplies);\r\n        return totalReplies;\r\n    };\r\n\r\n    // Usage\r\n    const totalReplies = getTotalReplies(allPost);\r\n\r\n\r\n    // Function to safely parse and format the date\r\n    const getFormattedDate = (dateString) => {\r\n        // Ensure dateString is a valid ISO string\r\n        if (typeof dateString !== 'string') {\r\n            return 'Invalid date';\r\n        }\r\n\r\n        const date = new Date(dateString);\r\n\r\n        // Check if date is valid\r\n        return isNaN(date.getTime())\r\n            ? 'Invalid date'\r\n            : formatDistanceToNow(date, { addSuffix: true, locale: enUS });\r\n    };\r\n\r\n    const handleNewDiscussionClick = () => {\r\n        if (!user) {\r\n            setLoginModalOpen(true)\r\n        } else {\r\n            navigate(`/forum/profile/${user.id}/add_discussions`);\r\n        }\r\n    };\r\n\r\n    const handleSubmitReply = async (postUserId, discussionTitle, postCreatorName) => {\r\n        if (!user) {\r\n            setLoginModalOpen(true)\r\n        }\r\n        try {\r\n            await axios.post('/api/post/create', {\r\n                user_id: postUserId,\r\n                title: discussionTitle,\r\n                content: contentValue,\r\n                discussion_id: discussionId,\r\n                parent_post_id: parentPostId,\r\n                postCreatorName: postCreatorName\r\n            });\r\n\r\n            // Optionally, refetch posts here if needed\r\n            const response = await axios.get(`/api/discussions/${discussionId}/posts`);\r\n            const replies = response.data[0].replies || [];\r\n            setFirstLevelReplies(replies)\r\n            setOpenReply({});\r\n            setContentValue('');\r\n            setParentPostId(null);\r\n            setAllPost(response.data)\r\n        } catch (error) {\r\n            console.error(\"Error submitting the reply:\", error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {loginModalOpen && <LoginModal onClick={toggleLoginModal} />}\r\n            {alert.show && <AlertMessage type={alert.type} message={alert.message} />}\r\n            <div className='discussion-container'>\r\n                <Header />\r\n                <div className=\"forum-discussion-page-container\">\r\n                    <FilterNavigation\r\n                        onClick={loginModal}\r\n                        className='sticky-filter-nav'\r\n                    />\r\n                    <div className='forum-discussion-page-container-col2'>\r\n                        <div className='language-selector-container'>\r\n                            <GTranslate />\r\n                        </div>\r\n                        <SearchDiscussionBox />\r\n                        <SmallScreenNavMenu />\r\n                        <div className=\"new-discussion-container\">\r\n                            <NewDiscussionBtn onClick={handleNewDiscussionClick} label='Start a discussion' />\r\n                        </div>\r\n                        {allPost.map(post => (\r\n                            <>\r\n                                <div className=\"started-discussion-container\" key={post?.post_id}>\r\n                                    <div className='started-discussion-container-row1'>\r\n                                        <div className='started-discussion-info'>\r\n                                            <Link to={`/forum/profile/${post?.postCreator?.id}/created_discussions`}>\r\n                                                <img src={post?.postCreator?.profile_pic || DefaultAvatar} alt=\"\" />\r\n                                            </Link>\r\n                                            <div className='started-forum-discussion-info'>\r\n                                                <div className='user-started-discussion'>\r\n                                                    <Link to={`/forum/profile/${post?.postCreator?.id}/created_discussions`}>\r\n                                                        {post?.postCreator?.display_name || 'Unknown'}\r\n                                                    </Link>\r\n                                                    <span className='started-discussion'>Started Discussion</span>\r\n                                                </div>\r\n                                                <small>Posted: {getFormattedDate(post.created_at)}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"post-action-option\">\r\n                                            <div className='three-dots'>\r\n                                                <ThreeDots onClick={() => toggleThreeDotsOption(post.post_id)} />\r\n                                            </div>\r\n                                            {threeDotsOption[post.post_id] &&\r\n                                                <div className='three-dots-option'>\r\n                                                    <ul>\r\n                                                        <li onClick={() => copyPostURL(post.post_id)}>\r\n                                                            <div className='link-icon'>\r\n                                                                <LinkIcon />\r\n                                                            </div>\r\n                                                            <span>Copy URL</span>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!post?.parent_post_id && (\r\n                                        <>\r\n                                            <div className='started-discussion-container-row2' key={post?.post_id}>\r\n                                                <label>{post?.discussion?.title}</label>\r\n                                                <div className={showMoreContent[post?.post_id] ? 'show-all-content' : 'show-less-content'} dangerouslySetInnerHTML={{ __html: post?.content }} />\r\n                                                {post?.content.length > 340 && (\r\n                                                    <div style={{ textAlign: 'center' }}>\r\n                                                        <div style={{ textAlign: 'center' }}>\r\n                                                            <button className='toggle-content-btn' onClick={() => toggleContent(post?.post_id)}>\r\n                                                                {showMoreContent[post?.post_id] ? 'Show less...' : 'Show more...'}\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className='started-discussion-container-row3'>\r\n                                                <div className='view-reply-like-counter'>\r\n                                                    <div className='like-counter'>\r\n                                                        <button className={(post?.likes?.some(like => like.user_id === user?.id)) ? 'like-msg-icon-blue' : 'like-msg-icon'} onClick={() => handleLikeChange(post?.post_id, post?.user_id, post?.discussion?.title, post?.postCreator?.display_name)}>\r\n                                                            <Like />\r\n                                                        </button>\r\n                                                        <span>{post?.likes?.length || 0} likes</span>\r\n                                                    </div>\r\n                                                    <div className='reply-counter'>\r\n                                                        <div className='reply-msg-icon'><MsgIcon /></div>\r\n                                                        <span>{totalReplies > 1 ? `${totalReplies} replies` : `${totalReplies} reply`}</span>\r\n                                                    </div>\r\n                                                    <div className='view-counter'>\r\n                                                        <div className='view-msg-icon'><EyeIcon /></div>\r\n                                                        <span>{post.views} views</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <BtnReply label='Reply' onClick={!user ? loginModal : () => toggleReply(post.post_id)} />\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                                {openReply[post.post_id] && (\r\n                                    <>\r\n                                        <QuillEditor\r\n                                            id='replyLevelZero'\r\n                                            name='replyLevelZero'\r\n                                            className='new-reply-message'\r\n                                            placeholder=\"Type your reply here...\"\r\n                                            value={activePostId === post?.post_id ? contentValue : ''}\r\n                                            onChange={(content) => handleContentChange(post?.post_id, content)}\r\n                                        />\r\n\r\n                                        <div className='add-reply-button-container'>\r\n                                            <BtnGreen label='Post Reply' onClick={() => handleSubmitReply(post?.user_id, post?.discussion?.title, post?.postCreator?.display_name)} />\r\n                                            <BtnClear label='Cancel' onClick={cancelReply} />\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                                {post.replies && post.replies.length > 0 &&\r\n                                    <div className=\"filter-replies\">\r\n                                        <span className='replies-counter'>{totalReplies > 1 ? `${totalReplies} Replies` : `${totalReplies} Reply`}</span>\r\n                                        <div className='replies-sortby-container' style={{ display: 'flex' }}>\r\n                                            <span style={{ flexShrink: '0' }}>Sort By:</span>\r\n                                            <CustomSelect\r\n                                                data={filterDiscussionOptions}\r\n                                                onOptionSelect={handleOptionSelect}\r\n                                                className='forum-sortby-dropdown-select'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {allReplies.map(levelOneReply => (\r\n                                    <>\r\n                                        <div id={levelOneReply.post_id} className=\"all-replies-container\" key={levelOneReply.post_id}>\r\n                                            <div className='reply-container'>\r\n                                                <div className=\"reply-box\">\r\n                                                    <div className=\"reply-row1\">\r\n                                                        <div className='posted-reply-info'>\r\n                                                            <Link to={`/forum/profile/${levelOneReply?.postCreator?.id}/created_discussions`}>\r\n                                                                <img src={levelOneReply?.postCreator?.profile_pic || DefaultAvatar} alt=\"\" />\r\n                                                            </Link>\r\n                                                            <div className=\"post-creator-info\">\r\n                                                                <div className='user-started-discussion'>\r\n                                                                    <Link to={`/forum/profile/${levelOneReply?.postCreator?.id}/created_discussions`}>\r\n                                                                        {levelOneReply.postCreator.display_name}\r\n                                                                    </Link>\r\n                                                                    {levelOneReply?.postCreator?.id === discussionStarter ? (\r\n                                                                        <>\r\n                                                                            <span className='started-discussion'>Started Discussion</span>\r\n                                                                        </>\r\n                                                                    ) : (\r\n                                                                        null\r\n                                                                    )}\r\n                                                                </div>\r\n                                                                <small>Posted: {getFormattedDate(levelOneReply.created_at)}</small>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"post-action-option\">\r\n                                                            <div className='three-dots'>\r\n                                                                <ThreeDots onClick={() => toggleThreeDotsOption(levelOneReply.post_id)} />\r\n                                                            </div>\r\n                                                            {threeDotsOption[levelOneReply.post_id] &&\r\n                                                                <div className='three-dots-option'>\r\n                                                                    <ul>\r\n                                                                        <li onClick={() => copyPostURL(levelOneReply.post_id)}>\r\n                                                                            <div className='link-icon'>\r\n                                                                                <LinkIcon />\r\n                                                                            </div>\r\n                                                                            <span>Copy URL</span>\r\n                                                                        </li>\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"reply-row2\">\r\n                                                        <div className={showMoreContent[levelOneReply?.post_id] ? 'show-all-content' : 'show-less-content'} dangerouslySetInnerHTML={{ __html: levelOneReply?.content }} />\r\n                                                        {levelOneReply?.content.length > 340 && (\r\n                                                            <div style={{ textAlign: 'center' }}>\r\n                                                                <div style={{ textAlign: 'center' }}>\r\n                                                                    <button className='toggle-content-btn' onClick={() => toggleContent(levelOneReply?.post_id)}>\r\n                                                                        {showMoreContent[levelOneReply?.post_id] ? 'Show less...' : 'Show more...'}\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                    <div className='reply-row3'>\r\n                                                        <div className='view-reply-like-counter'>\r\n                                                            <div className='like-counter'>\r\n                                                                <button className={levelOneReply.likes.some(like => like.user_id === user?.id) ? 'like-msg-icon-blue' : 'like-msg-icon'} onClick={() => handleLikeChange(levelOneReply?.post_id, levelOneReply?.user_id, post?.discussion?.title, levelOneReply?.postCreator?.display_name)}><Like /></button>\r\n                                                                <span>{levelOneReply?.likes?.length || 0} likes</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <BtnReply label='Reply' onClick={!user ? loginModal : () => toggleReply(levelOneReply.post_id)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                {openReply[levelOneReply.post_id] && (\r\n                                                    <>\r\n                                                        <QuillEditor\r\n                                                            id='replyLevelOne'\r\n                                                            name='replyLevelOne'\r\n                                                            className='new-reply-message'\r\n                                                            placeholder=\"Type your reply here...\"\r\n                                                            value={activePostId === levelOneReply?.post_id ? contentValue : ''}\r\n                                                            onChange={(content) => handleContentChange(levelOneReply?.post_id, content)}\r\n                                                        />\r\n\r\n                                                        <div className='add-reply-button-container'>\r\n                                                            <BtnGreen label='Post Reply' onClick={() => handleSubmitReply(levelOneReply?.user_id, post?.discussion?.title, levelOneReply?.postCreator?.display_name)} />\r\n                                                            <BtnClear label='Cancel' onClick={cancelReply} />\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                                <div className=\"toggle-hide-show-replies\">\r\n                                                    {levelOneReply.replies.length === 0 ? (''\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {!showMoreReplies[levelOneReply?.post_id] ? (\r\n                                                                <button className='show-replies-btn' onClick={() => toggleShowMoreReplies(levelOneReply?.post_id)}>Show {levelOneReply.replies.length > 1 ? `${levelOneReply.replies.length} replies` : `${levelOneReply.replies.length} reply`}</button>\r\n                                                            ) : (\r\n                                                                <button className='hide-replies-btn' onClick={() => toggleShowMoreReplies(levelOneReply?.post_id)}>{levelOneReply.replies.length > 1 ? 'Hide replies' : 'Hide reply'}</button>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                                {showMoreReplies[levelOneReply?.post_id] && (\r\n                                                    <>\r\n                                                        {\r\n                                                            levelOneReply.replies.map(levelTwoReply => (\r\n                                                                <div id={levelTwoReply.post_id} className=\"level2-replies-container\" key={levelTwoReply.post_id}>\r\n                                                                    <div className=\"reply-box\">\r\n                                                                        <div className=\"reply-row1\">\r\n                                                                            <div className='posted-reply-info'>\r\n                                                                                <Link to={`/forum/profile/${levelTwoReply?.postCreator?.id}/created_discussions`}>\r\n                                                                                    <img src={levelTwoReply?.postCreator?.profile_pic || DefaultAvatar} alt=\"\" />\r\n                                                                                </Link>\r\n                                                                                <div className=\"post-creator-info\">\r\n                                                                                    <div className='user-started-discussion'>\r\n                                                                                        <Link to={`/forum/profile/${levelTwoReply?.postCreator?.id}/created_discussions`}>\r\n                                                                                            {levelTwoReply.postCreator.display_name}\r\n                                                                                        </Link>\r\n                                                                                        {levelTwoReply?.postCreator?.id === discussionStarter ? (\r\n                                                                                            <>\r\n                                                                                                <span className='started-discussion'>Started Discussion</span>\r\n                                                                                            </>\r\n                                                                                        ) : (\r\n                                                                                            null\r\n                                                                                        )}\r\n                                                                                    </div>\r\n                                                                                    <small>Posted: {getFormattedDate(levelTwoReply.created_at)}</small>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"post-action-option\">\r\n                                                                                <div className='three-dots'>\r\n                                                                                    <ThreeDots onClick={() => toggleThreeDotsOption(levelTwoReply.post_id)} />\r\n                                                                                </div>\r\n                                                                                {threeDotsOption[levelTwoReply.post_id] &&\r\n                                                                                    <div className='three-dots-option'>\r\n                                                                                        <ul>\r\n                                                                                            <li onClick={() => copyPostURL(levelTwoReply.post_id)}>\r\n                                                                                                <div className='link-icon'>\r\n                                                                                                    <LinkIcon />\r\n                                                                                                </div>\r\n                                                                                                <span>Copy URL</span>\r\n                                                                                            </li>\r\n                                                                                        </ul>\r\n                                                                                    </div>\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"reply-row2\">\r\n                                                                            <div className={showMoreContent[levelTwoReply?.post_id] ? 'show-all-content' : 'show-less-content'} dangerouslySetInnerHTML={{ __html: levelTwoReply?.content }} />\r\n                                                                            {levelTwoReply?.content.length > 340 && (\r\n                                                                                <div style={{ textAlign: 'center' }}>\r\n                                                                                    <div style={{ textAlign: 'center' }}>\r\n                                                                                        <button className='toggle-content-btn' onClick={() => toggleContent(levelTwoReply?.post_id)}>\r\n                                                                                            {showMoreContent[levelTwoReply?.post_id] ? 'Show less...' : 'Show more...'}\r\n                                                                                        </button>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                        <div className='reply-row3'>\r\n                                                                            <div className='view-reply-like-counter'>\r\n                                                                                <div className='like-counter'>\r\n                                                                                    <button className={levelTwoReply.likes.some(like => like.user_id === user?.id) ? 'like-msg-icon-blue' : 'like-msg-icon'} onClick={() => handleLikeChange(levelTwoReply?.post_id, levelTwoReply?.user_id, post?.discussion?.title, levelTwoReply?.postCreator?.display_name)}><Like /></button>\r\n                                                                                    <span>{levelTwoReply?.likes?.length || 0} likes</span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <BtnReply label='Reply' onClick={!user ? loginModal : () => toggleReply(levelTwoReply.post_id)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {openReply[levelTwoReply.post_id] && (\r\n                                                                        <>\r\n                                                                            <QuillEditor\r\n                                                                                id='replyLevelTwo'\r\n                                                                                name='replyLevelTwo'\r\n                                                                                className='new-reply-message'\r\n                                                                                placeholder=\"Type your reply here...\"\r\n                                                                                value={activePostId === levelTwoReply?.post_id ? contentValue : ''}\r\n                                                                                onChange={(content) => handleContentChange(levelTwoReply?.post_id, content)}\r\n                                                                            />\r\n\r\n                                                                            <div className='add-reply-button-container'>\r\n                                                                                <BtnGreen label='Post Reply' onClick={() => handleSubmitReply(levelTwoReply?.user_id, post?.discussion?.title, levelTwoReply?.postCreator?.display_name)} />\r\n                                                                                <BtnClear label='Cancel' onClick={cancelReply} />\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                    <div className=\"toggle-hide-show-replies\">\r\n                                                                        {levelTwoReply.replies.length === 0 ? (''\r\n                                                                        ) : (\r\n                                                                            <>\r\n                                                                                {!showMoreReplies[levelTwoReply?.post_id] ? (\r\n                                                                                    <button className='show-replies-btn' onClick={() => toggleShowMoreReplies(levelTwoReply?.post_id)}>Show {levelTwoReply.replies.length > 1 ? `${levelTwoReply.replies.length} replies` : `${levelTwoReply.replies.length} reply`}</button>\r\n                                                                                ) : (\r\n                                                                                    <button className='hide-replies-btn' onClick={() => toggleShowMoreReplies(levelTwoReply?.post_id)}>{levelTwoReply.replies.length > 1 ? 'Hide replies' : 'Hide reply'}</button>\r\n                                                                                )}\r\n                                                                            </>\r\n                                                                        )}\r\n                                                                    </div>\r\n                                                                    {showMoreReplies[levelTwoReply?.post_id] && (\r\n                                                                        <>\r\n                                                                            {levelTwoReply.replies.map(levelThreeReply => (\r\n                                                                                <div id={levelThreeReply.post_id} className=\"level2-replies-container last-reply-container\" key={levelThreeReply.post_id}>\r\n                                                                                    <div className=\"reply-box\">\r\n                                                                                        <div className=\"reply-row1\">\r\n                                                                                            <div className='posted-reply-info'>\r\n                                                                                                <Link to={`/forum/profile/${levelThreeReply?.postCreator?.id}/created_discussions`}>\r\n                                                                                                    <img src={levelThreeReply?.postCreator?.profile_pic || DefaultAvatar} alt=\"\" />\r\n                                                                                                </Link>\r\n                                                                                                <div className=\"post-creator-info\">\r\n                                                                                                    <div className='user-started-discussion'>\r\n                                                                                                        <Link to={`/forum/profile/${levelThreeReply?.postCreator?.id}/created_discussions`}>\r\n                                                                                                            {levelThreeReply.postCreator.display_name}\r\n                                                                                                        </Link>\r\n                                                                                                        {levelThreeReply?.postCreator?.id === discussionStarter ? (\r\n                                                                                                            <>\r\n                                                                                                                <span className='started-discussion'>Started Discussion</span>\r\n                                                                                                            </>\r\n                                                                                                        ) : (\r\n                                                                                                            null\r\n                                                                                                        )}\r\n                                                                                                    </div>\r\n                                                                                                    <small>Posted: {getFormattedDate(levelThreeReply.created_at)}</small>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"post-action-option\">\r\n                                                                                                <div className='three-dots'>\r\n                                                                                                    <ThreeDots onClick={() => toggleThreeDotsOption(levelThreeReply.post_id)} />\r\n                                                                                                </div>\r\n                                                                                                {threeDotsOption[levelThreeReply.post_id] &&\r\n                                                                                                    <div className='three-dots-option'>\r\n                                                                                                        <ul>\r\n                                                                                                            <li onClick={() => copyPostURL(levelThreeReply.post_id)}>\r\n                                                                                                                <div className='link-icon'>\r\n                                                                                                                    <LinkIcon />\r\n                                                                                                                </div>\r\n                                                                                                                <span>Copy URL</span>\r\n                                                                                                            </li>\r\n                                                                                                        </ul>\r\n                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className='parent-post-container'>\r\n                                                                                            <div className='parent-post-container-row1'>\r\n                                                                                                <Link>{levelThreeReply.parentPostCreator.display_name} said:</Link>\r\n                                                                                                <div dangerouslySetInnerHTML={{ __html: levelThreeReply.parentPostContent }} />\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"reply-row2\">\r\n                                                                                            <div className={showMoreContent[levelThreeReply?.post_id] ? 'show-all-content' : 'show-less-content'} dangerouslySetInnerHTML={{ __html: levelThreeReply?.content }} />\r\n                                                                                            {levelThreeReply?.content.length > 340 && (\r\n                                                                                                <div style={{ textAlign: 'center' }}>\r\n                                                                                                    <div style={{ textAlign: 'center' }}>\r\n                                                                                                        <button className='toggle-content-btn' onClick={() => toggleContent(levelThreeReply?.post_id)}>\r\n                                                                                                            {showMoreContent[levelThreeReply?.post_id] ? 'Show less...' : 'Show more...'}\r\n                                                                                                        </button>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                        <div className='reply-row3'>\r\n                                                                                            <div className='view-reply-like-counter'>\r\n                                                                                                <div className='like-counter'>\r\n                                                                                                    <button className={levelThreeReply.likes.some(like => like.user_id === user?.id) ? 'like-msg-icon-blue' : 'like-msg-icon'} onClick={() => handleLikeChange(levelThreeReply?.post_id, levelThreeReply?.user_id, post?.discussion?.title, levelThreeReply?.postCreator?.display_name)}><Like /></button>\r\n                                                                                                    <span>{levelThreeReply?.likes?.length || 0} likes</span>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <BtnReply label='Reply' onClick={!user ? loginModal : () => toggleReply(levelThreeReply.post_id)} />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {openReply[levelThreeReply?.post_id] && (\r\n                                                                                        <>\r\n                                                                                            <QuillEditor\r\n                                                                                                id='replyLevelThree'\r\n                                                                                                name='replyLevelThree'\r\n                                                                                                className='new-reply-message'\r\n                                                                                                placeholder=\"Type your reply here...\"\r\n                                                                                                value={activePostId === levelThreeReply?.post_id ? contentValue : ''}\r\n                                                                                                onChange={(content) => handleContentChange(levelThreeReply?.post_id, content)}\r\n                                                                                            />\r\n\r\n                                                                                            <div className='add-reply-button-container'>\r\n                                                                                                <BtnGreen label='Post Reply' onClick={() => handleSubmitReply(levelThreeReply?.user_id, post?.discussion?.title, levelThreeReply?.postCreator?.display_name)} />\r\n                                                                                                <BtnClear label='Cancel' onClick={cancelReply} />\r\n                                                                                            </div>\r\n                                                                                        </>\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        }\r\n                                                    </>\r\n                                                )}\r\n                                            </div >\r\n                                        </div >\r\n                                    </>\r\n                                ))}\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                </div >\r\n                <Footer className='forum-discussion-page-footer' />\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Discussion;","import { setTags, setError } from '../reducer/forumTagsSlice';\r\nimport axios from '../../apicalls/axios';\r\n\r\n\r\n// Get Forum Tags\r\nexport const getAllForumTags = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('/api/fetchforumtags');\r\n    if (response.status === 200) {\r\n      const forumTagsData = response.data;\r\n      dispatch(setTags(forumTagsData));\r\n    } \r\n  } catch (error) {\r\n    console.error('Error fetching forum tags:', error);\r\n\r\n    // Handle the error and update the error state in the Redux store\r\n    dispatch(setError('Error fetching forum tags.'));\r\n  }\r\n};\r\n"],"names":["_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgGroupMessageIcon","_ref","svgRef","title","titleId","props","viewBox","fill","xmlns","ref","id","d","ForwardRef","SvgThreeDots","label","onClick","className","active","_jsx","concat","children","SvgBurgerBtnV2","width","height","stroke","strokeLinecap","strokeLinejoin","_forumCategories$cate","data","navigate","useNavigate","categoriesMenuOpen","setCategoriesMenuOpen","useState","forumCategories","setForumCategories","useEffect","async","response","axios","get","error","console","fetchForumCategories","toggleSsNavByCategory","prev","goToCategoryPage","name","_jsxs","_Fragment","CategoryBurgerBtn","categories","map","category","GroupMsgIcon","subcategories","subcategory","_path3","SvgTagsIcon","filterTagModalOpen","setFilterTagModalOpen","tags","setTags","err","log","fetchForumTags","toggleTagModal","FilterTagModal","tagsData","TagsIcon","onClickBrwseByCategory","CategoryMenuBtn","FilterTagButton","NewDiscussionBtn","value","onChange","placeholder","isHtmlMode","setIsHtmlMode","ReactQuill","theme","modules","toolbar","header","font","size","list","indent","menus","Array","_","Skeleton","_categories$categorie","createdDiscussionsTab","joinedDiscussionsTab","userActivityTab","forumNotificationsTab","addDiscussionsBtn","discussionFilter","createdDiscussionsData","joinedDiscussionsData","activitiesData","paramsUserData","notifications","sortOptions","onOptionSelect","emptySortDiscussions","dispatch","useDispatch","authUser","useSelector","state","user","forumcategories","forumtags","userId","tab","useParams","userIdNumber","Number","authUserIdNumber","location","useLocation","showFilter","setShowFilter","activeCategory","setActiveCategory","selectedTags","setSelectedTags","isArray","setUser","totalCreatedDiscussions","setTotalCreatedDiscussions","totalJoinedDiscussions","setTotalJoinedDiscussions","totalUnreadNotifications","setTotalUnreadNotifications","loadingCategories","setLoadingCategories","loadingTags","setLoadingTags","loginModalOpen","setLoginModalOpen","getForumCategories","getAllForumTags","display_name","profile_pic","createdAt","fetchUserData","descendingCD","sort","a","b","Date","created_at","fetchCreatedDiscussions","descendingJD","fetchJoinedDiscussions","sortedActivities","fetchForumActivities","getTotalUnreadNotifications","handleCreatedDiscussions","handleJoinedDiscussions","handleUserActivity","handleForumNotifications","handleSelectedCategory","toggleLoginModal","prevLoginModalOpen","originalDate","formattedDate","toLocaleDateString","year","month","LoginModal","src","DefaultAvatar","alt","totalCount","type","Link","to","CustomSelect","style","display","flexWrap","gap","SideNavCategoriesSkeleton","NavLink","activeclassname","slice","tag","BtnCategory","toggleTag","tag_id","prevSelectedTags","updatedTags","includes","filter","t","justifyContent","clearAllTags","SvgLinkIcon","SvgReplyIcon","ReplyIcon","Discussion","discussionId","repliedPostId","URLSearchParams","search","openReply","setOpenReply","showMoreContent","setShowMoreContent","showMoreReplies","setShowMoreReplies","contentValue","setContentValue","activePostId","setActivePostId","parentPostId","setParentPostId","postId","setPostId","discussionStarter","setDiscussionStarter","allPost","setAllPost","firstLevelReplies","setFirstLevelReplies","threeDotsOption","setThreeDotsOption","alert","setAlert","show","message","selectedSort","setSelectedSort","sortDiscussions","setSortDiscussions","filterDiscussionOptions","option","toLowerCase","Setloader","replies","firstPostId","post_id","parent_post_id","discussionStarterUserId","user_id","status","fetchDiscussionData","handleGlobalClick","event","closest","document","addEventListener","removeEventListener","newOpenReply","forEach","post","incrementViews","expandRepliesToPost","_post$replies","levelOneReply","_levelOneReply$replie","scrollToPostAfterExpand","some","levelTwoReply","_levelTwoReply$replie","levelThreeReply","_levelOneReply$replie2","toggleShowMoreReplies","_levelTwoReply$replie2","_levelTwoReply$replie3","setTimeout","postElement","getElementById","window","scrollTo","offsetTop","handleLikeChange","discussionTitle","postCreatorName","currentScrollY","scrollY","discussion_id","handleOptionSelect","elementPosition","getBoundingClientRect","top","offset","innerHeight","offsetHeight","behavior","descendingReplies","mostRecent","allReplies","mostLiked","likesA","likes","loginModal","toggleContent","toggleThreeDotsOption","toggleReply","copyPostURL","postURL","origin","navigator","clipboard","writeText","cancelReply","handleContentChange","totalReplies","posts","countReplies","getTotalReplies","getFormattedDate","dateString","date","isNaN","getTime","formatDistanceToNow","addSuffix","locale","enUS","handleSubmitReply","postUserId","content","AlertMessage","Header","FilterNavigation","GTranslate","SearchDiscussionBox","SmallScreenNavMenu","handleNewDiscussionClick","_post$postCreator","_post$postCreator2","_post$postCreator3","_post$postCreator4","_post$discussion","_post$likes","_post$likes2","postCreator","ThreeDots","LinkIcon","discussion","dangerouslySetInnerHTML","__html","textAlign","like","_post$discussion2","_post$postCreator5","Like","MsgIcon","EyeIcon","views","BtnReply","QuillEditor","BtnGreen","_post$discussion3","_post$postCreator6","BtnClear","flexShrink","_levelOneReply$postCr","_levelOneReply$postCr2","_levelOneReply$postCr3","_levelOneReply$postCr4","_levelOneReply$likes","_post$discussion4","_levelOneReply$postCr5","_post$discussion5","_levelOneReply$postCr6","_levelTwoReply$postCr","_levelTwoReply$postCr2","_levelTwoReply$postCr3","_levelTwoReply$postCr4","_levelTwoReply$likes","_post$discussion6","_levelTwoReply$postCr5","_post$discussion7","_levelTwoReply$postCr6","_levelThreeReply$post","_levelThreeReply$post2","_levelThreeReply$post3","_levelThreeReply$post4","_levelThreeReply$like","parentPostCreator","parentPostContent","_post$discussion8","_levelThreeReply$post5","_post$discussion9","_levelThreeReply$post6","Footer","forumTagsData","setError"],"sourceRoot":""}