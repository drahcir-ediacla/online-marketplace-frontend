{"version":3,"file":"static/js/4571.aa11c43f.chunk.js","mappings":"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","sources":["pages/Listing/UpdateListing.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from '../../apicalls/axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { GetAllCategories, GetProductsById } from '../../apicalls/products'\r\nimport { GetCurrentUser } from '../../apicalls/users';\r\nimport './style.scss';\r\nimport Header from '../../layouts/Header';\r\nimport Footer from '../../layouts/Footer';\r\nimport { Setloader } from '../../redux/reducer/loadersSlice';\r\nimport { ReactComponent as MagnifyingGlass } from \"../../assets/images/magnifying-glass.svg\";\r\nimport { ReactComponent as UploadImgIcon } from '../../assets/images/upload-img-icon.svg';\r\nimport { ReactComponent as UploadVidIcon } from '../../assets/images/upload-vid-icon.svg';\r\nimport Input from '../../components/FormField/Input';\r\nimport RadioButton from '../../components/FormField/RadioButton'\r\nimport CheckBox from '../../components/FormField/CheckBox/CheckBox'\r\nimport BtnGreen from '../../components/Button/BtnGreen'\r\nimport BtnClear from '../../components/Button/BtnClear';\r\nimport MeetUpSelector from '../../components/MeetUpSelector';\r\nimport QuillEditor from '../../components/QuillEditor';\r\n\r\nconst AddListing = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { id, product_name } = useParams();\r\n    const [productId, setProductId] = useState(null);\r\n    const [activeRadio, setActiveRadio] = useState(0);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n    const dropDownCategory = useRef(null);\r\n    const [delivery, setDelivery] = useState([]);\r\n    const [condition, setCondition] = useState('');\r\n    const [productDetails, setProductDetails] = useState({\r\n        product_name: '',\r\n        description: '',\r\n        price: 0, // You can set a default value\r\n        category_id: '', // Set the selected category's ID here\r\n        product_condition: '',\r\n        mailing_delivery: null,\r\n        youtube_link: '',\r\n    });\r\n    console.log('mailing_delivery:', productDetails.mailing_delivery);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const openContent = (radioIndex) => {\r\n        setActiveRadio(radioIndex);\r\n    };\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    }\r\n\r\n    const handleDescriptionChange = (content) => {\r\n        setProductDetails({ ...productDetails, description: content });\r\n    };\r\n\r\n    const handleConditionChange = (event) => {\r\n        const selectedCondition = event.target.value;\r\n        setCondition(selectedCondition); // Update the local state\r\n\r\n        setProductDetails({\r\n            ...productDetails,\r\n            product_condition: selectedCondition, // Set the product_condition in productDetails\r\n        });\r\n    };\r\n\r\n\r\n    // const selectedDelivery = delivery.join(' | ');\r\n    // console.log('selectedDelivery:', selectedDelivery)\r\n\r\n    const handleCheckboxDeliveryChange = (event) => {\r\n        const deliveryOption = event.target.value;\r\n        // Check if the delivery option is already selected\r\n        const isSelected = delivery.includes(deliveryOption);\r\n\r\n        // Toggle the delivery option based on its selection state\r\n        if (isSelected) {\r\n            // If already selected, remove it from the array\r\n            setDelivery((prevDelivery) =>\r\n                prevDelivery.filter((option) => option !== deliveryOption)\r\n            );\r\n        } else {\r\n            // If not selected, add it to the array\r\n            setDelivery((prevDelivery) => [...prevDelivery, deliveryOption]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update mailing_delivery directly with the new value of delivery\r\n        setProductDetails({\r\n            ...productDetails,\r\n            mailing_delivery: delivery.length > 0 ? delivery.join(' | ') : null, // Check if delivery is empty\r\n        });\r\n    }, [delivery]);\r\n\r\n\r\n    const getCategoryLabelById = (categoryId) => {\r\n        let selectedLabel = null;\r\n\r\n        // Iterate through categories and subcategories to find the matching label\r\n        for (const category of categories) {\r\n            if (category.id === categoryId) {\r\n                selectedLabel = category.label;\r\n                break;\r\n            }\r\n\r\n            for (const subcategory of category.subcategories) {\r\n                if (subcategory.id === categoryId) {\r\n                    selectedLabel = subcategory.label;\r\n                    break;\r\n                }\r\n\r\n                // Add handling for the second level of subcategories\r\n                for (const subsubcategory of subcategory.subcategories) {\r\n                    if (subsubcategory.id === categoryId) {\r\n                        selectedLabel = subsubcategory.label;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (selectedLabel) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (selectedLabel) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return selectedLabel;\r\n    };\r\n\r\n    // In your component, you can use this function to get the label for productDetails.category_id\r\n    const selectedLabel = getCategoryLabelById(productDetails.category_id);\r\n\r\n    useEffect(() => {\r\n        if (selectedLabel) {\r\n            // Find the corresponding category or subcategory based on selectedLabel\r\n            const foundCategory = findCategoryByLabel(selectedLabel, categories);\r\n\r\n            if (foundCategory) {\r\n                setSelectedOption(selectedLabel);\r\n                // Optionally, you can also set the category_id in productDetails if needed\r\n                // setProductDetails({\r\n                //   ...productDetails,\r\n                //   category_id: foundCategory.id,\r\n                // });\r\n            }\r\n        }\r\n    }, [selectedLabel, categories]);\r\n\r\n    // Recursive function to find category by label within categories and subcategories\r\n    const findCategoryByLabel = (label, categoryList) => {\r\n        for (const category of categoryList) {\r\n            if (category.label === label) {\r\n                return category;\r\n            }\r\n\r\n            const foundSubcategory = findCategoryByLabel(label, category.subcategories);\r\n\r\n            if (foundSubcategory) {\r\n                return foundSubcategory;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleOptionClick = (option) => {\r\n        let selectedCategory = null;\r\n\r\n        // Find the category or subcategory object based on the selectedOption\r\n        for (const category of categories) {\r\n            if (category.label === option) {\r\n                selectedCategory = category;\r\n                break;\r\n            }\r\n\r\n            for (const subcategory of category.subcategories) {\r\n                if (subcategory.label === option) {\r\n                    selectedCategory = subcategory;\r\n                    break;\r\n                }\r\n\r\n                // Add handling for the second level of subcategories\r\n                for (const subsubcategory of subcategory.subcategories) {\r\n                    if (subsubcategory.label === option) {\r\n                        selectedCategory = subsubcategory;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (selectedCategory) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (selectedCategory) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (selectedCategory) {\r\n            setSelectedOption(option);\r\n            setProductDetails({\r\n                ...productDetails,\r\n                category_id: selectedCategory.id,\r\n            });\r\n        }\r\n\r\n        setIsOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCategoryClick = (clickedCategory) => {\r\n        setCategories((prevCategories) =>\r\n            prevCategories.map((category) => {\r\n                if (category === clickedCategory) {\r\n                    return { ...category, isOpen: !category.isOpen };\r\n                } else {\r\n                    return { ...category, isOpen: false };\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    const handleSubcategoryClick = (clickedSubcategory, category) => {\r\n        category.subcategories = category.subcategories.map((subcategory) => {\r\n            if (subcategory === clickedSubcategory) {\r\n                return { ...subcategory, isOpen: !subcategory.isOpen };\r\n            } else {\r\n                return { ...subcategory, isOpen: false };\r\n            }\r\n        });\r\n\r\n        setCategories([...categories]); // This triggers a re-render\r\n    };\r\n\r\n    const resetCategoryState = () => {\r\n        setCategories((prevCategories) =>\r\n            prevCategories.map((category) => {\r\n                return { ...category, isOpen: false };\r\n            })\r\n        );\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const response = await GetAllCategories();\r\n                setCategories(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchCategories();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProductDetails = async () => {\r\n            try {\r\n                const response1 = await GetProductsById(id, product_name);\r\n                const productDetails = response1.data;\r\n                const deliveryOptions = productDetails.mailing_delivery ? productDetails.mailing_delivery.split(' | ') : [];\r\n                setProductDetails(productDetails);\r\n                setCondition(productDetails.product_condition);\r\n                setDelivery(deliveryOptions);\r\n\r\n                const response2 = await GetCurrentUser();\r\n                const currentUser = response2.data.user;\r\n\r\n                const meetupData = productDetails.meetup.map(place => ({\r\n                    placeId: place.placeId,\r\n                    name: place.name,\r\n                    address: place.address,\r\n                    latitude: place.latitude,\r\n                    longitude: place.longitude,\r\n                }))\r\n\r\n                setSelectedPlaces(meetupData)\r\n\r\n                // Extract image URLs from the images array\r\n                const imageUrls = productDetails.images.map(image => image.image_url);\r\n                const videoUrls = productDetails.videos.map(video => video.video_url);\r\n                setImagePreviews(imageUrls);\r\n                setSelectedImages(imageUrls);\r\n                setVideoPreviews(videoUrls);\r\n                setSelectedVideos(videoUrls);\r\n\r\n                const userId = currentUser?.id;\r\n                if (userId !== productDetails?.seller?.id) {\r\n                    setError(\"You don't have permission to access this page.\");\r\n                } else {\r\n                    setError(null); // Reset error state if condition is not met\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching product details:\", error);\r\n                setError(\"Error fetching product details. Please try again later.\");\r\n            }\r\n        };\r\n\r\n        const productIdFromURL = id; // Implement a function to get the product ID\r\n\r\n        if (productIdFromURL) {\r\n            setProductId(id);\r\n            fetchProductDetails();\r\n        }\r\n    }, [id, product_name]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const handleGlobalClick = (event) => {\r\n            if (dropDownCategory.current && !dropDownCategory.current.contains(event.target)) {\r\n                setIsOpen(false);\r\n                resetCategoryState();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleGlobalClick);\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handleGlobalClick);\r\n        };\r\n    }, []);\r\n\r\n\r\n    const [selectedPlaces, setSelectedPlaces] = useState([]);\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n    const [imagePreviews, setImagePreviews] = useState([]);\r\n    const [selectedVideos, setSelectedVideos] = useState([]);\r\n    const [videoPreviews, setVideoPreviews] = useState([]);\r\n\r\n    const handleSelectedPlacesChange = (places) => {\r\n        setSelectedPlaces(places);\r\n    };\r\n\r\n    const maxImages = 10; // Define the maximum number of images allowed\r\n    const maxVideos = 1; // Allow only one video\r\n\r\n    const handleImgInputClick = () => {\r\n        document.getElementById('imgUpload').click();\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const files = e.target.files;\r\n        const selectedImagesArray = Array.from(files);\r\n        const MAX_IMAGE_SIZE = 2 * 1024 * 1024; // 2 MB\r\n    \r\n    \r\n        if (selectedImagesArray.length + selectedImages.length > maxImages) {\r\n          alert(`You can only select up to ${maxImages} images.`);\r\n          return;\r\n        }\r\n    \r\n        const imagePreviewsArray = [];\r\n    \r\n        selectedImagesArray.forEach((image) => {\r\n          if (!image.type.startsWith('image/')) {\r\n            alert('Only image files are allowed.');\r\n            return;\r\n          }\r\n    \r\n          if (image.size > MAX_IMAGE_SIZE) {\r\n            alert('Selected images exceed the maximum file size of 2 MB.');\r\n            return;\r\n          }\r\n    \r\n          const reader = new FileReader();\r\n    \r\n          reader.onload = (e) => {\r\n            imagePreviewsArray.push(e.target.result);\r\n            if (imagePreviewsArray.length === selectedImagesArray.length) {\r\n              setImagePreviews((prevPreviews) => [...prevPreviews, ...imagePreviewsArray]);\r\n              setSelectedImages((prevImages) => [...prevImages, ...selectedImagesArray]);\r\n            }\r\n          };\r\n    \r\n          reader.readAsDataURL(image);\r\n        });\r\n      };\r\n\r\n    const removeImage = (index) => {\r\n        const updatedPreviews = imagePreviews.filter((_, i) => i !== index);\r\n        const updatedImages = selectedImages.filter((_, i) => i !== index);\r\n        setImagePreviews(updatedPreviews);\r\n        setSelectedImages(updatedImages);\r\n    };\r\n\r\n\r\n    const handleVideoInputClick = () => {\r\n        document.getElementById('videoUpload').click();\r\n    };\r\n\r\n    const handleVideoChange = (e) => {\r\n        const files = e.target.files;\r\n        const MAX_VIDEO_SIZE = 50 * 1024 * 1024; // 50 MB\r\n    \r\n    \r\n        if (files.length > maxVideos) {\r\n          alert(`You can only select up to ${maxVideos} video.`);\r\n          return;\r\n        }\r\n    \r\n        const video = files[0];\r\n    \r\n        if (!video.type.startsWith('video/')) {\r\n          alert('Only video files are allowed.');\r\n          return;\r\n        }\r\n    \r\n        if (video.size > MAX_VIDEO_SIZE) {\r\n          alert('The selected video exceeds the maximum file size of 50 MB.');\r\n          return;\r\n        }\r\n    \r\n        const reader = new FileReader();\r\n    \r\n        reader.onload = (e) => {\r\n          setVideoPreviews([e.target.result]);\r\n          setSelectedVideos([video]);\r\n        };\r\n    \r\n        reader.readAsDataURL(video);\r\n      };\r\n\r\n\r\n    const removeVideo = () => {\r\n        setVideoPreviews([]);\r\n        setSelectedVideos([]);\r\n    };\r\n\r\n\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        // Check if the title is provided and meets the minimum length requirement\r\n        if (!productDetails.product_name) {\r\n            alert('Please enter a title for your listing.');\r\n            return;\r\n        } else if (productDetails.product_name.length < 5) {\r\n            alert('Title must be at least 5 characters long.');\r\n            return;\r\n        }\r\n\r\n        // Check if the price is a positive number\r\n        if (!productDetails.price || isNaN(productDetails.price) || productDetails.price <= 0) {\r\n            alert('Please enter a valid price for your listing.');\r\n            return;\r\n        }\r\n\r\n        // Check if at least one image is uploaded\r\n        if (imagePreviews.length === 0) {\r\n            alert('Please upload at least one image for your listing.');\r\n            return;\r\n        }\r\n\r\n        // Handle image URLs\r\n        const imageUrls = await handleFileUpload(selectedImages, 'image');\r\n\r\n        // Handle video URL\r\n        const videoUrls = await handleFileUpload(selectedVideos, 'video');\r\n\r\n        // Combine image and video URLs into productDetails\r\n        const productDetailsWithFiles = {\r\n            ...productDetails,\r\n            fileUrls: [...imageUrls, ...videoUrls],\r\n            meetupLocations: selectedPlaces.map(place => ({\r\n                placeId: place.placeId,\r\n                name: place.name,\r\n                address: place.address,\r\n                latitude: place.latitude,\r\n                longitude: place.longitude,\r\n            })),\r\n        };\r\n\r\n\r\n        // Send the form data (including image URLs) to your backend\r\n        axios.put(`/api/updateproductbyid/${id}/${encodeURIComponent(product_name)}`, productDetailsWithFiles)\r\n            .then((response) => {\r\n                dispatch(Setloader(true))\r\n                console.log('Product added successfully:', response.data);\r\n\r\n                const productId = response.data.product?.id;\r\n                const productName = response.data.product?.product_name;\r\n\r\n                console.log('productId:', productId)\r\n                console.log('productName:', productName)\r\n\r\n                window.location.href = `/productdetails/${productId}/${encodeURIComponent(productName)}`;\r\n                dispatch(Setloader(false))\r\n            })\r\n            .catch((error) => {\r\n                dispatch(Setloader(false))\r\n                console.error('Error adding the product:', error);\r\n            });\r\n    };\r\n\r\n    const ProductPage = () => {\r\n        window.location.href = `/productdetails/${id}/${encodeURIComponent(product_name)}`;\r\n    };\r\n\r\n\r\n\r\n    const handleFileUpload = async (files, fileType) => {\r\n        const fileUrls = [];\r\n\r\n        const formData = new FormData();\r\n        formData.append('upload_preset', 'auwcvbw0');\r\n        formData.append('cloud_name', 'yogeek-cloudinary');\r\n        formData.append('folder', fileType === 'image' ? 'product_images' : 'product_videos');\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('file', files[i]);\r\n\r\n            try {\r\n                dispatch(Setloader(true))\r\n                const response = await fetch(\r\n                    `https://api.cloudinary.com/v1_1/yogeek-cloudinary/${fileType}/upload`,\r\n                    {\r\n                        method: 'POST',\r\n                        body: formData,\r\n                    }\r\n                );\r\n\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    const fileUrl = data.secure_url;\r\n                    fileUrls.push(fileUrl);\r\n                } else {\r\n                    console.error(`Error uploading ${fileType} to Cloudinary:`, response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error(`Error uploading ${fileType} to Cloudinary:`, error.message);\r\n            } finally {\r\n                console.log(`File ${i + 1} processed`);\r\n            }\r\n        }\r\n\r\n        console.log(`Final fileUrls array for ${fileType}:`, fileUrls);\r\n        productDetails.fileUrls = fileUrls;\r\n        console.log(`productDetails.fileUrls:`, productDetails.fileUrls);\r\n        return fileUrls;\r\n    };\r\n\r\n    if (error) {\r\n        return <div>{error}</div>; // Render error message\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"add-listing-body\" >\r\n                <form className=\"container\" >\r\n                    <h3>What are you listing today?</h3>\r\n                    <div className=\"box\">\r\n                        <div className=\"col-left\">\r\n                            <div className=\"add-media-container\">\r\n                                <div className=\"add-image-box\">\r\n                                    <div className=\"addlisting-upload-img\">\r\n                                        <UploadImgIcon />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label htmlFor=\"imgUpload\" className=\"custom-file-upload\">\r\n                                            <BtnClear type='button' label='Add Image' className='add-img-btn' onClick={handleImgInputClick} />\r\n                                        </label>\r\n                                        <input type=\"file\" id=\"imgUpload\" multiple accept=\"image/*\" onChange={handleImageChange} style={{ display: 'none' }} />\r\n                                        <div>(Maximum of 10 photos)</div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <span className=\"atleast-one-photo\">Add at least 1 photo.</span> */}\r\n                                <div className=\"upload-img-preview-container\">\r\n                                    {imagePreviews.map((preview, index) => (\r\n                                        <div className=\"upload-img-box\" key={index}>\r\n                                            <img src={preview} alt={`Img ${index}`} className='upload-img-preview' />\r\n                                            <div onClick={() => removeImage(index)} className=\"upload-img-close\"></div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"add-video-container\">\r\n                                    <span className='title-video'>Video</span>\r\n                                    <div className=\"upload-vid-options\">\r\n                                        <div>\r\n                                            <label htmlFor=\"uploadvidID\" className=\"radio-container\">Upload Video\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    id=\"uploadvidID\"\r\n                                                    checked={activeRadio === 0}\r\n                                                    className={`${activeRadio === 0 ? 'active' : ''}`}\r\n                                                    onClick={() => openContent(0)}\r\n                                                />\r\n                                                <span className=\"checkmark\"></span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label htmlFor=\"youtubelinkID\" className=\"radio-container\">Youtube Link\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    id=\"youtubelinkID\"\r\n                                                    checked={activeRadio === 1}\r\n                                                    className={`${activeRadio === 1 ? 'active' : ''}`}\r\n                                                    onClick={() => openContent(1)}\r\n                                                />\r\n                                                <span className=\"checkmark\"></span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ display: activeRadio === 0 ? 'block' : 'none' }}>\r\n                                        <div className='upload-video-content'>\r\n                                            {videoPreviews.length > 0 ? (\r\n                                                <div className='video-preview-container'>\r\n                                                    <video width=\"498\" height='280' controls>\r\n                                                        <source src={videoPreviews[0]} type=\"video/mp4\" />\r\n                                                        Your browser does not support the video tag.\r\n                                                    </video>\r\n                                                    <div className='remove-video-preview' onClick={removeVideo}></div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <label htmlFor='videoUpload'>\r\n                                                        <button type='button' className='upload-video-box' onClick={handleVideoInputClick}>\r\n                                                            <div className='addlisting-upload-vid'><UploadVidIcon /></div>\r\n                                                            <span>Add Video</span>\r\n                                                        </button>\r\n                                                    </label>\r\n                                                    <div>\r\n                                                        <ul>\r\n                                                            <li>Min size: 480x480 px. max video length: 60 seconds. max file size: 100MB.</li>\r\n                                                            <li>Supported Format: mp4</li>\r\n                                                            <li>New Video might take up to 36 hrs to be approved</li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                id=\"videoUpload\"\r\n                                                accept=\"video/*\"\r\n                                                style={{ display: 'none' }}\r\n                                                onChange={handleVideoChange}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{ display: activeRadio === 1 ? 'block' : 'none' }}>\r\n                                        <Input\r\n                                            name='youtube_link'\r\n                                            value={productDetails.youtube_link}\r\n                                            placeholder='Paste your Youtube URL link here'\r\n                                            className='input-youtube-link'\r\n                                            onChange={(e) => setProductDetails({ ...productDetails, youtube_link: e.target.value })}\r\n                                        />\r\n                                        <h6 className='embed-youtube-instructions'>Please follow instructions on how to embed youtube video.</h6>\r\n                                        <b>1. Get the Youtube Link:</b>\r\n                                        <p>Get the YouTube video ID from the video URL. For example, in the URL <span className='youtube-link'>https://www.youtube.com/watch?v=VIDEO_ID</span>, <span className='video-id'>\"VIDEO_ID\"</span> is the actual video ID.</p>\r\n\r\n                                        <b>2. Create Youtube Embed URL:</b>\r\n                                        <p>Use the YouTube video ID to create the YouTube embed URL. See sample URL below.</p>\r\n                                        <span className='sample-embed-url-label'>Sample Youtube Embed URL:</span>\r\n                                        <p className='sample-embed-url'>https://youtube.com/embed/VIDEO_ID</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-right\">\r\n                            <div className=\"select-category-container\">\r\n                                <div className='wrapper' ref={dropDownCategory}>\r\n                                    <div className={`select-arrow ${isOpen ? 'active' : ''}`} onClick={toggleDropdown}></div>\r\n                                    <div className=\"dropdown-category\">\r\n                                        <input type=\"text\" id='selectCategory' value={selectedOption} placeholder='Select Category' readOnly />\r\n                                    </div>\r\n                                    {isOpen && (\r\n                                        <div className=\"category-option-list\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <div className='search-container'>\r\n                                                        <input type=\"text\" placeholder='Search Categories' value={searchTerm} onChange={handleSearchChange} />\r\n                                                        <div className='magnifying-glass'><MagnifyingGlass /></div>\r\n                                                    </div>\r\n                                                </li>\r\n                                                {categories.map((category) => {\r\n                                                    if (!category.label.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                                        return null; // Skip rendering if not matching the search term\r\n                                                    }\r\n                                                    return (\r\n                                                        <li key={category.value} className='main-category'>\r\n                                                            <div\r\n                                                                className={`parent-category ${category.subcategories.length > 0 ? \"collapsible\" : \"\"} ${category.isOpen && category.subcategories.length > 0 ? \"active\" : \"\"}`}\r\n                                                                onClick={() => {\r\n                                                                    if (category.subcategories.length === 0) {\r\n                                                                        handleOptionClick(category.label);\r\n                                                                    } else {\r\n                                                                        handleCategoryClick(category);\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                <img src={category.icon} alt=\"\" />\r\n                                                                {category.label}\r\n                                                            </div>\r\n                                                            {category.isOpen && category.subcategories && category.subcategories.length > 0 ? (\r\n                                                                <ul className='sub-category'>\r\n                                                                    {category.subcategories.map((subcategory) => (\r\n                                                                        <li key={subcategory.value}>\r\n                                                                            <div className={`first-level-sub-category ${subcategory.subcategories.length > 0 ? \"collapsible\" : \"\"} ${subcategory.isOpen && subcategory.subcategories.length > 0 ? \"active\" : \"\"}`}\r\n                                                                                onClick={() => {\r\n                                                                                    if (subcategory.subcategories.length === 0) {\r\n                                                                                        handleOptionClick(subcategory.label);\r\n                                                                                    } else {\r\n                                                                                        handleSubcategoryClick(subcategory, category);\r\n                                                                                    }\r\n                                                                                }}>\r\n                                                                                {subcategory.label}\r\n                                                                            </div>\r\n\r\n                                                                            {subcategory.isOpen && subcategory.subcategories && subcategory.subcategories.length > 0 ? (\r\n                                                                                <ul className='sub-sub-category'>\r\n                                                                                    {subcategory.subcategories.map((subsubcategory) => (\r\n                                                                                        <li key={subsubcategory.value}>\r\n                                                                                            <div className=\"second-level-sub-category\" onClick={() => handleOptionClick(subsubcategory.label)}>\r\n                                                                                                {subsubcategory.label}\r\n                                                                                            </div>\r\n                                                                                        </li>\r\n                                                                                    ))}\r\n                                                                                </ul>\r\n                                                                            ) : null}\r\n                                                                        </li>\r\n                                                                    ))}\r\n                                                                </ul>\r\n                                                            ) : null}\r\n                                                        </li>\r\n                                                    );\r\n                                                })}\r\n                                            </ul>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {selectedOption === 'Nike' && (\r\n                                    <div>\r\n                                        <h3>Nike</h3>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {selectedOption === 'Adidas' && (\r\n                                    <div>\r\n                                        <h3>Adidas</h3>\r\n                                        {/* Render your Form 2 component here */}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {selectedOption === 'New Balance' && (\r\n                                    <div>\r\n                                        <h3>New Balance</h3>\r\n                                        {/* Render your Form 3 component here */}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {selectedOption && selectedOption !== 'Nike' && selectedOption !== 'Adidas' && selectedOption !== 'New Balance' && (\r\n\r\n                                    <div className=\"add-prod-details-form\">\r\n                                        <input type=\"hidden\" name=\"category_id\" value={productDetails.category_id} onChange={(e) => setProductDetails({ ...productDetails, category_id: e.target.value })} />\r\n                                        <div>\r\n                                            <label>Title</label>\r\n                                            <Input\r\n                                                type='text'\r\n                                                id='listingTitleID'\r\n                                                name='product_name'\r\n                                                value={productDetails.product_name}\r\n                                                className='listing-input-field'\r\n                                                placeholder='Listing Title'\r\n                                                onChange={(e) => setProductDetails({ ...productDetails, product_name: e.target.value })}\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <h3>About the item</h3>\r\n                                        <div>\r\n                                            <label>Condition</label>\r\n                                            <div className=\"product-conditions\">\r\n                                                <RadioButton\r\n                                                    id=\"brandNewID\"\r\n                                                    name=\"product_condition\"\r\n                                                    value=\"Brand New\"\r\n                                                    label=\"Brand New\"\r\n                                                    checked={condition === 'Brand New'}\r\n                                                    onChange={handleConditionChange}\r\n                                                />\r\n                                                <RadioButton\r\n                                                    id=\"likeNewID\"\r\n                                                    name=\"product_condition\"\r\n                                                    value=\"Like New\"\r\n                                                    label=\"Like New\"\r\n                                                    checked={condition === 'Like New'}\r\n                                                    onChange={handleConditionChange}\r\n                                                />\r\n                                                <RadioButton\r\n                                                    id=\"lightlyUsedID\"\r\n                                                    name=\"product_condition\"\r\n                                                    value=\"Lightly Used\"\r\n                                                    label=\"Lightly Used\"\r\n                                                    checked={condition === 'Lightly Used'}\r\n                                                    onChange={handleConditionChange}\r\n                                                />\r\n                                                <RadioButton\r\n                                                    id=\"wellUsedID\"\r\n                                                    name=\"product_condition\"\r\n                                                    value=\"Well Used\"\r\n                                                    label=\"Well Used\"\r\n                                                    checked={condition === 'Well Used'}\r\n                                                    onChange={handleConditionChange}\r\n                                                />\r\n                                                <RadioButton\r\n                                                    id=\"heavilyUsedID\"\r\n                                                    name=\"product_condition\"\r\n                                                    value=\"Heavily Used\"\r\n                                                    label=\"Heavily Used\"\r\n                                                    checked={condition === 'Heavily Used'}\r\n                                                    onChange={handleConditionChange}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label>Price</label>\r\n                                            <div className=\"listing-price-container\">\r\n                                                <div className=\"listing-currency\">₱</div>\r\n                                                <Input\r\n                                                    type='number'\r\n                                                    id='listingPriceID'\r\n                                                    name='price'\r\n                                                    value={productDetails.price}\r\n                                                    className='listing-price-input-field'\r\n                                                    placeholder='Price of your listing'\r\n                                                    onChange={(e) => setProductDetails({ ...productDetails, price: e.target.value })}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label>Description</label>\r\n                                            <div>\r\n                                                <QuillEditor\r\n                                                    id='listingDescID'\r\n                                                    name='description'\r\n                                                    className='listing-description'\r\n                                                    value={productDetails.description}\r\n                                                    onChange={handleDescriptionChange}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <h3>Deal Method</h3>\r\n                                        <div>\r\n                                            <label>Meet Up</label>\r\n                                            <MeetUpSelector onSelectedPlacesChange={handleSelectedPlacesChange} fetchedMeetupPlaces={selectedPlaces} />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label>Mailing & Delivery</label>\r\n                                            <div className='delivery-options'>\r\n                                                <div className='delivery-options-col1'>\r\n                                                    <CheckBox\r\n                                                        label='Lalamove'\r\n                                                        value='Lalamove'\r\n                                                        onChange={handleCheckboxDeliveryChange}\r\n                                                        checked={delivery.includes('Lalamove')} // Pass checked prop based on whether it's included in the delivery array\r\n                                                    />\r\n                                                    <CheckBox\r\n                                                        label='Grab Express'\r\n                                                        value='Grab Express'\r\n                                                        onChange={handleCheckboxDeliveryChange}\r\n                                                        checked={delivery.includes('Grab Express')}\r\n                                                    />\r\n                                                    <CheckBox\r\n                                                        label='Ninja Van'\r\n                                                        value='Ninja Van'\r\n                                                        onChange={handleCheckboxDeliveryChange}\r\n                                                        checked={delivery.includes('Ninja Van')}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className='delivery-options-col2'>\r\n                                                    <CheckBox\r\n                                                        label='LBC'\r\n                                                        value='LBC'\r\n                                                        onChange={handleCheckboxDeliveryChange}\r\n                                                        checked={delivery.includes('LBC')}\r\n                                                    />\r\n                                                    <CheckBox\r\n                                                        label='J&T'\r\n                                                        value='J&T'\r\n                                                        onChange={handleCheckboxDeliveryChange}\r\n                                                        checked={delivery.includes('J&T')}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='update-listing-btns'>\r\n                                            <BtnGreen label='Update Listing' className='list-now-btn' onClick={handleFormSubmit} />\r\n                                            <BtnClear type='button' label='Cancel' onClick={ProductPage} />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddListing;\r\n"],"names":["AddListing","dispatch","useDispatch","id","product_name","useParams","productId","setProductId","useState","activeRadio","setActiveRadio","isOpen","setIsOpen","selectedOption","setSelectedOption","searchTerm","setSearchTerm","categories","setCategories","dropDownCategory","useRef","delivery","setDelivery","condition","setCondition","productDetails","setProductDetails","description","price","category_id","product_condition","mailing_delivery","youtube_link","console","log","error","setError","openContent","radioIndex","handleConditionChange","event","selectedCondition","target","value","handleCheckboxDeliveryChange","deliveryOption","isSelected","includes","prevDelivery","filter","option","useEffect","length","join","selectedLabel","categoryId","category","label","subcategory","subcategories","subsubcategory","getCategoryLabelById","findCategoryByLabel","categoryList","foundSubcategory","handleOptionClick","selectedCategory","async","response","GetAllCategories","data","fetchCategories","_productDetails$selle","GetProductsById","deliveryOptions","split","currentUser","GetCurrentUser","user","meetupData","meetup","map","place","placeId","name","address","latitude","longitude","setSelectedPlaces","imageUrls","images","image","image_url","videoUrls","videos","video","video_url","setImagePreviews","setSelectedImages","setVideoPreviews","setSelectedVideos","seller","fetchProductDetails","handleGlobalClick","current","contains","prevCategories","document","addEventListener","removeEventListener","selectedPlaces","selectedImages","imagePreviews","selectedVideos","videoPreviews","handleFileUpload","files","fileType","fileUrls","formData","FormData","append","i","Setloader","fetch","concat","method","body","ok","fileUrl","json","secure_url","push","statusText","message","_jsx","children","_jsxs","_Fragment","Header","className","UploadImgIcon","htmlFor","BtnClear","type","onClick","handleImgInputClick","getElementById","click","multiple","accept","onChange","e","selectedImagesArray","Array","from","alert","imagePreviewsArray","forEach","startsWith","size","reader","FileReader","onload","result","prevPreviews","prevImages","readAsDataURL","style","display","preview","index","src","alt","updatedPreviews","_","updatedImages","removeImage","checked","width","height","controls","removeVideo","handleVideoInputClick","UploadVidIcon","Input","placeholder","ref","toggleDropdown","readOnly","MagnifyingGlass","toLowerCase","clickedCategory","icon","handleSubcategoryClick","clickedSubcategory","RadioButton","QuillEditor","content","MeetUpSelector","onSelectedPlacesChange","places","fetchedMeetupPlaces","CheckBox","BtnGreen","preventDefault","isNaN","productDetailsWithFiles","meetupLocations","axios","put","encodeURIComponent","then","_response$data$produc","_response$data$produc2","product","productName","window","location","href","catch","ProductPage","Footer"],"sourceRoot":""}