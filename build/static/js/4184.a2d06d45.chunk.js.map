{"version":3,"file":"static/js/4184.a2d06d45.chunk.js","mappings":"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","sources":["components/Forum/HomePageSubCategoryCard/index.jsx","components/Forum/SkeletonLoading/HomeCategoriesSkeleton.jsx","components/Forum/SkeletonLoading/HomeSubCategoriesSkeleton.jsx","pages/Forum/ForumHome.jsx"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport './style.scss'\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\nimport { ReactComponent as GroupMsgIcon } from '../../../assets/images/group-message-icon.svg'\r\nimport { ReactComponent as MsgIcon } from '../../../assets/images/message-icon.svg'\r\nimport { ReactComponent as EyeIcon } from '../../../assets/images/eye-solid.svg'\r\n\r\nconst HomePageSubCategoryCard = ({ subcategories }) => {\r\n\r\n    const getFormattedDate = (dateString) => {\r\n        if (typeof dateString !== 'string') {\r\n            return 'Invalid date';\r\n        }\r\n\r\n        const date = new Date(dateString);\r\n        return isNaN(date.getTime())\r\n            ? 'Invalid date'\r\n            : formatDistanceToNow(date, { addSuffix: true, locale: enUS });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {subcategories.map(item => (\r\n                <div className=\"forum-sub-category\" key={item.id}>\r\n                    <div className='forum-sub-category-col1'>\r\n                        <div className='forum-sub-category-info'>\r\n                            <div className='forum-sub-category-icon'><GroupMsgIcon /></div>\r\n                            <div className='forum-sub-category-title-desc'>\r\n                                <Link to={`/forum/subcategory/${item.id}/${item.name}`}><h5>{item.name}</h5></Link>\r\n                                <span>{item.description}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='forum-sub-category-col2'>\r\n                        <div className=\"view-reply-counter\">\r\n                            <div className=\"reply-counter\">\r\n                                <div className='reply-msg-icon'><MsgIcon /></div>\r\n                                <span>{item.totalPosts}</span>\r\n                            </div>\r\n                            <div className=\"view-counter\">\r\n                                <div className='view-msg-icon'><EyeIcon /></div>\r\n                                <span>{item.totalViews}</span>\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"last-activity-time\">\r\n                            {item.latestPost ? (getFormattedDate(item.latestPost)) : 'no activity'}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default HomePageSubCategoryCard\r\n","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport './style.scss'\r\n\r\nconst HomeCategoriesSkeleton = ({ menus }) => {\r\n    return Array(menus)\r\n        .fill(0)\r\n        .map((_, i) => (\r\n                    <Skeleton height={34} width={650} />\r\n        ));\r\n};\r\n\r\nexport default HomeCategoriesSkeleton;\r\n","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport './style.scss'\r\n\r\nconst HomeSubCategoriesSkeleton = ({ menus }) => {\r\n    return Array(menus)\r\n        .fill(0)\r\n        .map((_, i) => (\r\n                    <Skeleton height={74} />\r\n        ));\r\n};\r\n\r\nexport default HomeSubCategoriesSkeleton;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from '../../apicalls/axios'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getForumCategories } from '../../redux/actions/forumCategoriesActions';\r\nimport './style.scss'\r\nimport Header from '../../layouts/Forum/Header'\r\nimport Footer from '../../layouts/Forum/Footer'\r\nimport NewDiscussionBtn from '../../components/Button/NewDiscussionBtn'\r\nimport SearchDiscussionBox from '../../components/SearchDiscussionBox'\r\nimport HomePageSubCategoryCard from '../../components/Forum/HomePageSubCategoryCard'\r\nimport GTranslate from '../../components/GTranslate';\r\nimport HomeCategoriesSkeleton from '../../components/Forum/SkeletonLoading/HomeCategoriesSkeleton'\r\nimport HomeSubCategoriesSkeleton from '../../components/Forum/SkeletonLoading/HomeSubCategoriesSkeleton'\r\nimport ForumDiscussionCard from '../../components/Forum/ForumDiscussionCard'\r\nimport CustomSelect from '../../components/FormField/CustomSelect';\r\nimport SmallScreenNavMenu from '../../components/Forum/SmallScreenNavMenu'\r\nimport { ReactComponent as LoadingSpinner } from '../../assets/images/loading-spinner.svg'\r\n\r\n\r\n\r\nconst ForumHomePage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const forumCategories = useSelector((state) => state.forumcategories.data);\r\n    const navigate = useNavigate();\r\n    const observer = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingRecent, setLoadingRecent] = useState(false);\r\n    const [recentDiscussions, setRecentDiscussions] = useState([])\r\n    const [sortRecentDiscussions, setSortRecentDiscussions] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [limit] = useState(10);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const filterDiscussionOptions = ['Most Recent', 'Most Viewed', 'Most Liked'].map(option => (\r\n        {\r\n            label: option,\r\n            value: option.toLowerCase()\r\n        }));\r\n\r\n        useEffect(() => {\r\n            if (!forumCategories) {\r\n                setLoading(true)\r\n                dispatch(getForumCategories());\r\n            } else {\r\n                setLoading(false)\r\n            }\r\n        }, [dispatch, forumCategories]);\r\n\r\n    // useEffect(() => {\r\n    //     const fetchForumCategories = async () => {\r\n    //         try {\r\n    //             setLoading(true)\r\n    //             setForumCategories(categories)\r\n    //             setLoading(false)\r\n    //         } catch (error) {\r\n    //             setLoading(false)\r\n    //             console.error(\"Error fetching data:\", error);\r\n    //         }\r\n    //     }\r\n    //     fetchForumCategories();\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchRecentDiscussions = async () => {\r\n            if (loadingRecent || !hasMore) return; // Don't fetch if already loading or no more data\r\n\r\n            setLoadingRecent(true);\r\n            try {\r\n                const response = await axios.get(`/api/get-all-discussions/?page=${page}&limit=${limit}`)\r\n                const newDiscussion = response.data\r\n                setRecentDiscussions((prevData) => {\r\n                    const uniqueData = newDiscussion.filter(\r\n                        (item) => !prevData.some((existingItem) => existingItem.discussion_id === item.discussion_id)\r\n                    );\r\n                    return [...prevData, ...uniqueData];\r\n                });\r\n                setHasMore(newDiscussion.length > 0);\r\n            } catch (err) {\r\n                console.error(\"Error fetching recent discussions:\", err);\r\n            } finally {\r\n                setLoadingRecent(false);\r\n            }\r\n        }\r\n        fetchRecentDiscussions()\r\n    }, [page, limit])\r\n\r\n    // Intersection Observer callback\r\n    const lastElementRef = (node) => {\r\n        if (loadingRecent) return; // Don't observe if loading\r\n\r\n        if (observer.current) observer.current.disconnect(); // Disconnect previous observer\r\n\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            if (entries[0].isIntersecting) {\r\n                setPage((prevPage) => prevPage + 1); // Load next page\r\n            }\r\n        });\r\n\r\n        if (node) observer.current.observe(node); // Observe the last element\r\n    };\r\n\r\n    const mostRecentDiscussions = [...recentDiscussions].sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n    // Sort by most viewed (descending by total views)\r\n    const mostViewed = [...recentDiscussions].sort((a, b) => {\r\n        const viewsA = a.post.reduce((acc, post) => acc + (post.views || 0), 0);\r\n        const viewsB = b.post.reduce((acc, post) => acc + (post.views || 0), 0);\r\n        return viewsB - viewsA;\r\n    });\r\n\r\n    const mostLiked = [...recentDiscussions].sort((a, b) => {\r\n        // Find the maximum likes for any single post in discussion A\r\n        const maxLikesA = Math.max(...a.post.map(post => post.likes ? post.likes.length : 0));\r\n\r\n        // Find the maximum likes for any single post in discussion B\r\n        const maxLikesB = Math.max(...b.post.map(post => post.likes ? post.likes.length : 0));\r\n\r\n        // Sort in descending order by the maximum likes\r\n        return maxLikesB - maxLikesA;\r\n    });\r\n\r\n\r\n    const handleOptionSelect = (option) => {\r\n\r\n        if (option.value === 'most recent') {\r\n            setSortRecentDiscussions(mostRecentDiscussions);\r\n        }\r\n\r\n        if (option.value === 'most viewed') {\r\n            setSortRecentDiscussions(mostViewed);\r\n        }\r\n\r\n        if (option.value === 'most liked') {\r\n            setSortRecentDiscussions(mostLiked);\r\n        }\r\n    };\r\n\r\n\r\n    const goToCategoryPage = (id, name) => {\r\n        navigate(`/forum/category/${id}/${name}`);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className='language-selector-container'>\r\n                <GTranslate />\r\n            </div>\r\n            <div className='home-search-box-container'>\r\n                <SearchDiscussionBox className='custom-forum-search-box' />\r\n            </div>\r\n            <div className='smallscreennavmenu-container'>\r\n                <SmallScreenNavMenu />\r\n            </div>\r\n            {/* <div className='ss-nav-btn-container'>\r\n                <div className='ss-nav-btn-box'>\r\n                    <div className='ss-nav-btn-box-row1'>\r\n                        <button className='brwse-category-btn' onClick={toggleSsNavByCategory}><CategoryBurgerBtn /><span>Browse by Category</span></button>\r\n                        <FilterTagButton label='Popular Tags' />\r\n                    </div>\r\n                    <div className='start-discussion'><NewDiscussionBtn label='Start a discussion' /></div>\r\n                    <div className='new-discussion'><NewDiscussionBtn label='New' /></div>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"forum-categories-container\">\r\n                <h1>Welcome to Yogeek Community</h1>\r\n                <div className='browse-by-category'>\r\n                    <div className='browse-by-category-container'>\r\n                        <div className=\"browse-by-category-row1\"><h5>Browse by Category </h5></div>\r\n                        <div className=\"browse-by-category-row2\">\r\n                            <div className='browse-by-category-row2-col1'>\r\n                                {loading && <HomeCategoriesSkeleton menus={8} />}\r\n                                {forumCategories?.categories?.map(category => (\r\n                                    <button className='forum-categories-nav-menu' onClick={() => goToCategoryPage(category.id, category.name)} key={category.id}>\r\n                                        <div className='category-general-discussion-icon'>\r\n                                            <img\r\n                                                src={category.icon}\r\n                                                alt=''\r\n                                            /></div>\r\n                                        {category.name.toUpperCase()}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"forum-container\">\r\n                    <div className='start-discussion-btn-container'>\r\n                        <NewDiscussionBtn label='Start a discussion' />\r\n                    </div>\r\n                    <div className=\"listed-category-container\">\r\n                        {loading &&\r\n                            <>\r\n                                <HomeSubCategoriesSkeleton menus={10} />\r\n                            </>\r\n                        }\r\n                        {forumCategories?.categories?.map(category => (\r\n                            <div className=\"listed-category\" key={category.id}>\r\n                                <div className='listed-category-title'><h4>{category.name}</h4></div>\r\n\r\n                                <HomePageSubCategoryCard\r\n                                    subcategories={category.subcategories}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-recent-discussions\">\r\n                    <div className='recent-discussions'>\r\n                        <h5>Recent Discussions</h5>\r\n                        <div className='replies-sortby-container'>\r\n                            <span style={{ flexShrink: '0', fontWeight: 500 }}>Sort By:</span>\r\n                            <CustomSelect\r\n                                data={filterDiscussionOptions}\r\n                                onOptionSelect={handleOptionSelect}\r\n                                className='forum-sortby-dropdown-select'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <ForumDiscussionCard data={sortRecentDiscussions.length > 0 ? sortRecentDiscussions : mostRecentDiscussions} />\r\n                </div>\r\n                {/* Trigger for the next page */}\r\n                {hasMore && !loadingRecent && (\r\n                    <div ref={lastElementRef} style={{ height: '20px', backgroundColor: 'transparent' }}></div>\r\n                )}\r\n                {loadingRecent && <div className='infinite-scroll-loading-spinner'><LoadingSpinner /></div>}\r\n                {!hasMore && <div className='no-more-data'>No more data to load</div>}\r\n            </div>\r\n            <Footer className='home-footer' />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForumHomePage;"],"names":["_ref","subcategories","getFormattedDate","dateString","date","Date","isNaN","getTime","formatDistanceToNow","addSuffix","locale","enUS","_jsx","_Fragment","children","map","item","_jsxs","className","GroupMsgIcon","Link","to","concat","id","name","description","MsgIcon","totalPosts","EyeIcon","totalViews","latestPost","menus","Array","fill","_","i","Skeleton","height","width","ForumHomePage","_forumCategories$cate","_forumCategories$cate2","dispatch","useDispatch","forumCategories","useSelector","state","forumcategories","data","navigate","useNavigate","observer","useRef","loading","setLoading","useState","loadingRecent","setLoadingRecent","recentDiscussions","setRecentDiscussions","sortRecentDiscussions","setSortRecentDiscussions","page","setPage","limit","hasMore","setHasMore","filterDiscussionOptions","option","label","value","toLowerCase","useEffect","getForumCategories","async","newDiscussion","axios","get","prevData","uniqueData","filter","some","existingItem","discussion_id","length","err","console","error","fetchRecentDiscussions","mostRecentDiscussions","sort","a","b","created_at","mostViewed","viewsA","post","reduce","acc","views","mostLiked","maxLikesA","Math","max","likes","Header","GTranslate","SearchDiscussionBox","SmallScreenNavMenu","HomeCategoriesSkeleton","categories","category","onClick","goToCategoryPage","src","icon","alt","toUpperCase","NewDiscussionBtn","HomeSubCategoriesSkeleton","HomePageSubCategoryCard","style","flexShrink","fontWeight","CustomSelect","onOptionSelect","ForumDiscussionCard","ref","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","backgroundColor","LoadingSpinner","Footer"],"sourceRoot":""}